
TEMPSENSOR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003af4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012e  00800060  00003af4  00003b88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080018e  0080018e  00003cb6  2**0
                  ALLOC
  3 .stab         00002490  00000000  00000000  00003cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000a01  00000000  00000000  00006148  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000180  00000000  00000000  00006b49  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001d3  00000000  00000000  00006cc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000200f  00000000  00000000  00006e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001170  00000000  00000000  00008eab  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001001  00000000  00000000  0000a01b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001a0  00000000  00000000  0000b01c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c1  00000000  00000000  0000b1bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008ae  00000000  00000000  0000b47d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000bd2b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ef       	ldi	r30, 0xF4	; 244
      68:	fa e3       	ldi	r31, 0x3A	; 58
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 38       	cpi	r26, 0x8E	; 142
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae e8       	ldi	r26, 0x8E	; 142
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a2 39       	cpi	r26, 0x92	; 146
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 60 1c 	call	0x38c0	; 0x38c0 <main>
      8a:	0c 94 78 1d 	jmp	0x3af0	; 0x3af0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 41 1d 	jmp	0x3a82	; 0x3a82 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a1 e8       	ldi	r26, 0x81	; 129
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 5d 1d 	jmp	0x3aba	; 0x3aba <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 4d 1d 	jmp	0x3a9a	; 0x3a9a <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 4d 1d 	jmp	0x3a9a	; 0x3a9a <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 41 1d 	jmp	0x3a82	; 0x3a82 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	81 e8       	ldi	r24, 0x81	; 129
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 5d 1d 	jmp	0x3aba	; 0x3aba <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 4d 1d 	jmp	0x3a9a	; 0x3a9a <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 4d 1d 	jmp	0x3a9a	; 0x3a9a <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 4d 1d 	jmp	0x3a9a	; 0x3a9a <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 12 06 	call	0xc24	; 0xc24 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 51 1d 	jmp	0x3aa2	; 0x3aa2 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 9a 05 	call	0xb34	; 0xb34 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <__epilogue_restores__+0x20>

000007fa <__floatunsisf>:
     7fa:	a8 e0       	ldi	r26, 0x08	; 8
     7fc:	b0 e0       	ldi	r27, 0x00	; 0
     7fe:	e3 e0       	ldi	r30, 0x03	; 3
     800:	f4 e0       	ldi	r31, 0x04	; 4
     802:	0c 94 49 1d 	jmp	0x3a92	; 0x3a92 <__prologue_saves__+0x10>
     806:	7b 01       	movw	r14, r22
     808:	8c 01       	movw	r16, r24
     80a:	61 15       	cp	r22, r1
     80c:	71 05       	cpc	r23, r1
     80e:	81 05       	cpc	r24, r1
     810:	91 05       	cpc	r25, r1
     812:	19 f4       	brne	.+6      	; 0x81a <__floatunsisf+0x20>
     814:	82 e0       	ldi	r24, 0x02	; 2
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	60 c0       	rjmp	.+192    	; 0x8da <__stack+0x7b>
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	89 83       	std	Y+1, r24	; 0x01
     81e:	8e e1       	ldi	r24, 0x1E	; 30
     820:	c8 2e       	mov	r12, r24
     822:	d1 2c       	mov	r13, r1
     824:	dc 82       	std	Y+4, r13	; 0x04
     826:	cb 82       	std	Y+3, r12	; 0x03
     828:	ed 82       	std	Y+5, r14	; 0x05
     82a:	fe 82       	std	Y+6, r15	; 0x06
     82c:	0f 83       	std	Y+7, r16	; 0x07
     82e:	18 87       	std	Y+8, r17	; 0x08
     830:	c8 01       	movw	r24, r16
     832:	b7 01       	movw	r22, r14
     834:	0e 94 76 04 	call	0x8ec	; 0x8ec <__clzsi2>
     838:	fc 01       	movw	r30, r24
     83a:	31 97       	sbiw	r30, 0x01	; 1
     83c:	f7 ff       	sbrs	r31, 7
     83e:	3b c0       	rjmp	.+118    	; 0x8b6 <__stack+0x57>
     840:	22 27       	eor	r18, r18
     842:	33 27       	eor	r19, r19
     844:	2e 1b       	sub	r18, r30
     846:	3f 0b       	sbc	r19, r31
     848:	57 01       	movw	r10, r14
     84a:	68 01       	movw	r12, r16
     84c:	02 2e       	mov	r0, r18
     84e:	04 c0       	rjmp	.+8      	; 0x858 <__floatunsisf+0x5e>
     850:	d6 94       	lsr	r13
     852:	c7 94       	ror	r12
     854:	b7 94       	ror	r11
     856:	a7 94       	ror	r10
     858:	0a 94       	dec	r0
     85a:	d2 f7       	brpl	.-12     	; 0x850 <__floatunsisf+0x56>
     85c:	40 e0       	ldi	r20, 0x00	; 0
     85e:	50 e0       	ldi	r21, 0x00	; 0
     860:	60 e0       	ldi	r22, 0x00	; 0
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	a0 e0       	ldi	r26, 0x00	; 0
     86a:	b0 e0       	ldi	r27, 0x00	; 0
     86c:	04 c0       	rjmp	.+8      	; 0x876 <__stack+0x17>
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	aa 1f       	adc	r26, r26
     874:	bb 1f       	adc	r27, r27
     876:	2a 95       	dec	r18
     878:	d2 f7       	brpl	.-12     	; 0x86e <__stack+0xf>
     87a:	01 97       	sbiw	r24, 0x01	; 1
     87c:	a1 09       	sbc	r26, r1
     87e:	b1 09       	sbc	r27, r1
     880:	8e 21       	and	r24, r14
     882:	9f 21       	and	r25, r15
     884:	a0 23       	and	r26, r16
     886:	b1 23       	and	r27, r17
     888:	00 97       	sbiw	r24, 0x00	; 0
     88a:	a1 05       	cpc	r26, r1
     88c:	b1 05       	cpc	r27, r1
     88e:	21 f0       	breq	.+8      	; 0x898 <__stack+0x39>
     890:	41 e0       	ldi	r20, 0x01	; 1
     892:	50 e0       	ldi	r21, 0x00	; 0
     894:	60 e0       	ldi	r22, 0x00	; 0
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	4a 29       	or	r20, r10
     89a:	5b 29       	or	r21, r11
     89c:	6c 29       	or	r22, r12
     89e:	7d 29       	or	r23, r13
     8a0:	4d 83       	std	Y+5, r20	; 0x05
     8a2:	5e 83       	std	Y+6, r21	; 0x06
     8a4:	6f 83       	std	Y+7, r22	; 0x07
     8a6:	78 87       	std	Y+8, r23	; 0x08
     8a8:	8e e1       	ldi	r24, 0x1E	; 30
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	8e 1b       	sub	r24, r30
     8ae:	9f 0b       	sbc	r25, r31
     8b0:	9c 83       	std	Y+4, r25	; 0x04
     8b2:	8b 83       	std	Y+3, r24	; 0x03
     8b4:	12 c0       	rjmp	.+36     	; 0x8da <__stack+0x7b>
     8b6:	30 97       	sbiw	r30, 0x00	; 0
     8b8:	81 f0       	breq	.+32     	; 0x8da <__stack+0x7b>
     8ba:	0e 2e       	mov	r0, r30
     8bc:	04 c0       	rjmp	.+8      	; 0x8c6 <__stack+0x67>
     8be:	ee 0c       	add	r14, r14
     8c0:	ff 1c       	adc	r15, r15
     8c2:	00 1f       	adc	r16, r16
     8c4:	11 1f       	adc	r17, r17
     8c6:	0a 94       	dec	r0
     8c8:	d2 f7       	brpl	.-12     	; 0x8be <__stack+0x5f>
     8ca:	ed 82       	std	Y+5, r14	; 0x05
     8cc:	fe 82       	std	Y+6, r15	; 0x06
     8ce:	0f 83       	std	Y+7, r16	; 0x07
     8d0:	18 87       	std	Y+8, r17	; 0x08
     8d2:	ce 1a       	sub	r12, r30
     8d4:	df 0a       	sbc	r13, r31
     8d6:	dc 82       	std	Y+4, r13	; 0x04
     8d8:	cb 82       	std	Y+3, r12	; 0x03
     8da:	1a 82       	std	Y+2, r1	; 0x02
     8dc:	ce 01       	movw	r24, r28
     8de:	01 96       	adiw	r24, 0x01	; 1
     8e0:	0e 94 c5 04 	call	0x98a	; 0x98a <__pack_f>
     8e4:	28 96       	adiw	r28, 0x08	; 8
     8e6:	ea e0       	ldi	r30, 0x0A	; 10
     8e8:	0c 94 65 1d 	jmp	0x3aca	; 0x3aca <__epilogue_restores__+0x10>

000008ec <__clzsi2>:
     8ec:	ef 92       	push	r14
     8ee:	ff 92       	push	r15
     8f0:	0f 93       	push	r16
     8f2:	1f 93       	push	r17
     8f4:	7b 01       	movw	r14, r22
     8f6:	8c 01       	movw	r16, r24
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	e8 16       	cp	r14, r24
     8fc:	80 e0       	ldi	r24, 0x00	; 0
     8fe:	f8 06       	cpc	r15, r24
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	08 07       	cpc	r16, r24
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	18 07       	cpc	r17, r24
     908:	88 f4       	brcc	.+34     	; 0x92c <__clzsi2+0x40>
     90a:	8f ef       	ldi	r24, 0xFF	; 255
     90c:	e8 16       	cp	r14, r24
     90e:	f1 04       	cpc	r15, r1
     910:	01 05       	cpc	r16, r1
     912:	11 05       	cpc	r17, r1
     914:	31 f0       	breq	.+12     	; 0x922 <__clzsi2+0x36>
     916:	28 f0       	brcs	.+10     	; 0x922 <__clzsi2+0x36>
     918:	88 e0       	ldi	r24, 0x08	; 8
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	a0 e0       	ldi	r26, 0x00	; 0
     91e:	b0 e0       	ldi	r27, 0x00	; 0
     920:	17 c0       	rjmp	.+46     	; 0x950 <__clzsi2+0x64>
     922:	80 e0       	ldi	r24, 0x00	; 0
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	a0 e0       	ldi	r26, 0x00	; 0
     928:	b0 e0       	ldi	r27, 0x00	; 0
     92a:	12 c0       	rjmp	.+36     	; 0x950 <__clzsi2+0x64>
     92c:	80 e0       	ldi	r24, 0x00	; 0
     92e:	e8 16       	cp	r14, r24
     930:	80 e0       	ldi	r24, 0x00	; 0
     932:	f8 06       	cpc	r15, r24
     934:	80 e0       	ldi	r24, 0x00	; 0
     936:	08 07       	cpc	r16, r24
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	18 07       	cpc	r17, r24
     93c:	28 f0       	brcs	.+10     	; 0x948 <__clzsi2+0x5c>
     93e:	88 e1       	ldi	r24, 0x18	; 24
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	04 c0       	rjmp	.+8      	; 0x950 <__clzsi2+0x64>
     948:	80 e1       	ldi	r24, 0x10	; 16
     94a:	90 e0       	ldi	r25, 0x00	; 0
     94c:	a0 e0       	ldi	r26, 0x00	; 0
     94e:	b0 e0       	ldi	r27, 0x00	; 0
     950:	20 e2       	ldi	r18, 0x20	; 32
     952:	30 e0       	ldi	r19, 0x00	; 0
     954:	40 e0       	ldi	r20, 0x00	; 0
     956:	50 e0       	ldi	r21, 0x00	; 0
     958:	28 1b       	sub	r18, r24
     95a:	39 0b       	sbc	r19, r25
     95c:	4a 0b       	sbc	r20, r26
     95e:	5b 0b       	sbc	r21, r27
     960:	04 c0       	rjmp	.+8      	; 0x96a <__clzsi2+0x7e>
     962:	16 95       	lsr	r17
     964:	07 95       	ror	r16
     966:	f7 94       	ror	r15
     968:	e7 94       	ror	r14
     96a:	8a 95       	dec	r24
     96c:	d2 f7       	brpl	.-12     	; 0x962 <__clzsi2+0x76>
     96e:	f7 01       	movw	r30, r14
     970:	e7 57       	subi	r30, 0x77	; 119
     972:	ff 4f       	sbci	r31, 0xFF	; 255
     974:	80 81       	ld	r24, Z
     976:	28 1b       	sub	r18, r24
     978:	31 09       	sbc	r19, r1
     97a:	41 09       	sbc	r20, r1
     97c:	51 09       	sbc	r21, r1
     97e:	c9 01       	movw	r24, r18
     980:	1f 91       	pop	r17
     982:	0f 91       	pop	r16
     984:	ff 90       	pop	r15
     986:	ef 90       	pop	r14
     988:	08 95       	ret

0000098a <__pack_f>:
     98a:	df 92       	push	r13
     98c:	ef 92       	push	r14
     98e:	ff 92       	push	r15
     990:	0f 93       	push	r16
     992:	1f 93       	push	r17
     994:	fc 01       	movw	r30, r24
     996:	e4 80       	ldd	r14, Z+4	; 0x04
     998:	f5 80       	ldd	r15, Z+5	; 0x05
     99a:	06 81       	ldd	r16, Z+6	; 0x06
     99c:	17 81       	ldd	r17, Z+7	; 0x07
     99e:	d1 80       	ldd	r13, Z+1	; 0x01
     9a0:	80 81       	ld	r24, Z
     9a2:	82 30       	cpi	r24, 0x02	; 2
     9a4:	48 f4       	brcc	.+18     	; 0x9b8 <__pack_f+0x2e>
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	a0 e1       	ldi	r26, 0x10	; 16
     9ac:	b0 e0       	ldi	r27, 0x00	; 0
     9ae:	e8 2a       	or	r14, r24
     9b0:	f9 2a       	or	r15, r25
     9b2:	0a 2b       	or	r16, r26
     9b4:	1b 2b       	or	r17, r27
     9b6:	a5 c0       	rjmp	.+330    	; 0xb02 <__pack_f+0x178>
     9b8:	84 30       	cpi	r24, 0x04	; 4
     9ba:	09 f4       	brne	.+2      	; 0x9be <__pack_f+0x34>
     9bc:	9f c0       	rjmp	.+318    	; 0xafc <__pack_f+0x172>
     9be:	82 30       	cpi	r24, 0x02	; 2
     9c0:	21 f4       	brne	.+8      	; 0x9ca <__pack_f+0x40>
     9c2:	ee 24       	eor	r14, r14
     9c4:	ff 24       	eor	r15, r15
     9c6:	87 01       	movw	r16, r14
     9c8:	05 c0       	rjmp	.+10     	; 0x9d4 <__pack_f+0x4a>
     9ca:	e1 14       	cp	r14, r1
     9cc:	f1 04       	cpc	r15, r1
     9ce:	01 05       	cpc	r16, r1
     9d0:	11 05       	cpc	r17, r1
     9d2:	19 f4       	brne	.+6      	; 0x9da <__pack_f+0x50>
     9d4:	e0 e0       	ldi	r30, 0x00	; 0
     9d6:	f0 e0       	ldi	r31, 0x00	; 0
     9d8:	96 c0       	rjmp	.+300    	; 0xb06 <__pack_f+0x17c>
     9da:	62 81       	ldd	r22, Z+2	; 0x02
     9dc:	73 81       	ldd	r23, Z+3	; 0x03
     9de:	9f ef       	ldi	r25, 0xFF	; 255
     9e0:	62 38       	cpi	r22, 0x82	; 130
     9e2:	79 07       	cpc	r23, r25
     9e4:	0c f0       	brlt	.+2      	; 0x9e8 <__pack_f+0x5e>
     9e6:	5b c0       	rjmp	.+182    	; 0xa9e <__pack_f+0x114>
     9e8:	22 e8       	ldi	r18, 0x82	; 130
     9ea:	3f ef       	ldi	r19, 0xFF	; 255
     9ec:	26 1b       	sub	r18, r22
     9ee:	37 0b       	sbc	r19, r23
     9f0:	2a 31       	cpi	r18, 0x1A	; 26
     9f2:	31 05       	cpc	r19, r1
     9f4:	2c f0       	brlt	.+10     	; 0xa00 <__pack_f+0x76>
     9f6:	20 e0       	ldi	r18, 0x00	; 0
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	40 e0       	ldi	r20, 0x00	; 0
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	2a c0       	rjmp	.+84     	; 0xa54 <__pack_f+0xca>
     a00:	b8 01       	movw	r22, r16
     a02:	a7 01       	movw	r20, r14
     a04:	02 2e       	mov	r0, r18
     a06:	04 c0       	rjmp	.+8      	; 0xa10 <__pack_f+0x86>
     a08:	76 95       	lsr	r23
     a0a:	67 95       	ror	r22
     a0c:	57 95       	ror	r21
     a0e:	47 95       	ror	r20
     a10:	0a 94       	dec	r0
     a12:	d2 f7       	brpl	.-12     	; 0xa08 <__pack_f+0x7e>
     a14:	81 e0       	ldi	r24, 0x01	; 1
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	a0 e0       	ldi	r26, 0x00	; 0
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	04 c0       	rjmp	.+8      	; 0xa26 <__pack_f+0x9c>
     a1e:	88 0f       	add	r24, r24
     a20:	99 1f       	adc	r25, r25
     a22:	aa 1f       	adc	r26, r26
     a24:	bb 1f       	adc	r27, r27
     a26:	2a 95       	dec	r18
     a28:	d2 f7       	brpl	.-12     	; 0xa1e <__pack_f+0x94>
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	a1 09       	sbc	r26, r1
     a2e:	b1 09       	sbc	r27, r1
     a30:	8e 21       	and	r24, r14
     a32:	9f 21       	and	r25, r15
     a34:	a0 23       	and	r26, r16
     a36:	b1 23       	and	r27, r17
     a38:	00 97       	sbiw	r24, 0x00	; 0
     a3a:	a1 05       	cpc	r26, r1
     a3c:	b1 05       	cpc	r27, r1
     a3e:	21 f0       	breq	.+8      	; 0xa48 <__pack_f+0xbe>
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	a0 e0       	ldi	r26, 0x00	; 0
     a46:	b0 e0       	ldi	r27, 0x00	; 0
     a48:	9a 01       	movw	r18, r20
     a4a:	ab 01       	movw	r20, r22
     a4c:	28 2b       	or	r18, r24
     a4e:	39 2b       	or	r19, r25
     a50:	4a 2b       	or	r20, r26
     a52:	5b 2b       	or	r21, r27
     a54:	da 01       	movw	r26, r20
     a56:	c9 01       	movw	r24, r18
     a58:	8f 77       	andi	r24, 0x7F	; 127
     a5a:	90 70       	andi	r25, 0x00	; 0
     a5c:	a0 70       	andi	r26, 0x00	; 0
     a5e:	b0 70       	andi	r27, 0x00	; 0
     a60:	80 34       	cpi	r24, 0x40	; 64
     a62:	91 05       	cpc	r25, r1
     a64:	a1 05       	cpc	r26, r1
     a66:	b1 05       	cpc	r27, r1
     a68:	39 f4       	brne	.+14     	; 0xa78 <__pack_f+0xee>
     a6a:	27 ff       	sbrs	r18, 7
     a6c:	09 c0       	rjmp	.+18     	; 0xa80 <__pack_f+0xf6>
     a6e:	20 5c       	subi	r18, 0xC0	; 192
     a70:	3f 4f       	sbci	r19, 0xFF	; 255
     a72:	4f 4f       	sbci	r20, 0xFF	; 255
     a74:	5f 4f       	sbci	r21, 0xFF	; 255
     a76:	04 c0       	rjmp	.+8      	; 0xa80 <__pack_f+0xf6>
     a78:	21 5c       	subi	r18, 0xC1	; 193
     a7a:	3f 4f       	sbci	r19, 0xFF	; 255
     a7c:	4f 4f       	sbci	r20, 0xFF	; 255
     a7e:	5f 4f       	sbci	r21, 0xFF	; 255
     a80:	e0 e0       	ldi	r30, 0x00	; 0
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	20 30       	cpi	r18, 0x00	; 0
     a86:	a0 e0       	ldi	r26, 0x00	; 0
     a88:	3a 07       	cpc	r19, r26
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	4a 07       	cpc	r20, r26
     a8e:	a0 e4       	ldi	r26, 0x40	; 64
     a90:	5a 07       	cpc	r21, r26
     a92:	10 f0       	brcs	.+4      	; 0xa98 <__pack_f+0x10e>
     a94:	e1 e0       	ldi	r30, 0x01	; 1
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	79 01       	movw	r14, r18
     a9a:	8a 01       	movw	r16, r20
     a9c:	27 c0       	rjmp	.+78     	; 0xaec <__pack_f+0x162>
     a9e:	60 38       	cpi	r22, 0x80	; 128
     aa0:	71 05       	cpc	r23, r1
     aa2:	64 f5       	brge	.+88     	; 0xafc <__pack_f+0x172>
     aa4:	fb 01       	movw	r30, r22
     aa6:	e1 58       	subi	r30, 0x81	; 129
     aa8:	ff 4f       	sbci	r31, 0xFF	; 255
     aaa:	d8 01       	movw	r26, r16
     aac:	c7 01       	movw	r24, r14
     aae:	8f 77       	andi	r24, 0x7F	; 127
     ab0:	90 70       	andi	r25, 0x00	; 0
     ab2:	a0 70       	andi	r26, 0x00	; 0
     ab4:	b0 70       	andi	r27, 0x00	; 0
     ab6:	80 34       	cpi	r24, 0x40	; 64
     ab8:	91 05       	cpc	r25, r1
     aba:	a1 05       	cpc	r26, r1
     abc:	b1 05       	cpc	r27, r1
     abe:	39 f4       	brne	.+14     	; 0xace <__pack_f+0x144>
     ac0:	e7 fe       	sbrs	r14, 7
     ac2:	0d c0       	rjmp	.+26     	; 0xade <__pack_f+0x154>
     ac4:	80 e4       	ldi	r24, 0x40	; 64
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	a0 e0       	ldi	r26, 0x00	; 0
     aca:	b0 e0       	ldi	r27, 0x00	; 0
     acc:	04 c0       	rjmp	.+8      	; 0xad6 <__pack_f+0x14c>
     ace:	8f e3       	ldi	r24, 0x3F	; 63
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	a0 e0       	ldi	r26, 0x00	; 0
     ad4:	b0 e0       	ldi	r27, 0x00	; 0
     ad6:	e8 0e       	add	r14, r24
     ad8:	f9 1e       	adc	r15, r25
     ada:	0a 1f       	adc	r16, r26
     adc:	1b 1f       	adc	r17, r27
     ade:	17 ff       	sbrs	r17, 7
     ae0:	05 c0       	rjmp	.+10     	; 0xaec <__pack_f+0x162>
     ae2:	16 95       	lsr	r17
     ae4:	07 95       	ror	r16
     ae6:	f7 94       	ror	r15
     ae8:	e7 94       	ror	r14
     aea:	31 96       	adiw	r30, 0x01	; 1
     aec:	87 e0       	ldi	r24, 0x07	; 7
     aee:	16 95       	lsr	r17
     af0:	07 95       	ror	r16
     af2:	f7 94       	ror	r15
     af4:	e7 94       	ror	r14
     af6:	8a 95       	dec	r24
     af8:	d1 f7       	brne	.-12     	; 0xaee <__pack_f+0x164>
     afa:	05 c0       	rjmp	.+10     	; 0xb06 <__pack_f+0x17c>
     afc:	ee 24       	eor	r14, r14
     afe:	ff 24       	eor	r15, r15
     b00:	87 01       	movw	r16, r14
     b02:	ef ef       	ldi	r30, 0xFF	; 255
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	6e 2f       	mov	r22, r30
     b08:	67 95       	ror	r22
     b0a:	66 27       	eor	r22, r22
     b0c:	67 95       	ror	r22
     b0e:	90 2f       	mov	r25, r16
     b10:	9f 77       	andi	r25, 0x7F	; 127
     b12:	d7 94       	ror	r13
     b14:	dd 24       	eor	r13, r13
     b16:	d7 94       	ror	r13
     b18:	8e 2f       	mov	r24, r30
     b1a:	86 95       	lsr	r24
     b1c:	49 2f       	mov	r20, r25
     b1e:	46 2b       	or	r20, r22
     b20:	58 2f       	mov	r21, r24
     b22:	5d 29       	or	r21, r13
     b24:	b7 01       	movw	r22, r14
     b26:	ca 01       	movw	r24, r20
     b28:	1f 91       	pop	r17
     b2a:	0f 91       	pop	r16
     b2c:	ff 90       	pop	r15
     b2e:	ef 90       	pop	r14
     b30:	df 90       	pop	r13
     b32:	08 95       	ret

00000b34 <__unpack_f>:
     b34:	fc 01       	movw	r30, r24
     b36:	db 01       	movw	r26, r22
     b38:	40 81       	ld	r20, Z
     b3a:	51 81       	ldd	r21, Z+1	; 0x01
     b3c:	22 81       	ldd	r18, Z+2	; 0x02
     b3e:	62 2f       	mov	r22, r18
     b40:	6f 77       	andi	r22, 0x7F	; 127
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	22 1f       	adc	r18, r18
     b46:	22 27       	eor	r18, r18
     b48:	22 1f       	adc	r18, r18
     b4a:	93 81       	ldd	r25, Z+3	; 0x03
     b4c:	89 2f       	mov	r24, r25
     b4e:	88 0f       	add	r24, r24
     b50:	82 2b       	or	r24, r18
     b52:	28 2f       	mov	r18, r24
     b54:	30 e0       	ldi	r19, 0x00	; 0
     b56:	99 1f       	adc	r25, r25
     b58:	99 27       	eor	r25, r25
     b5a:	99 1f       	adc	r25, r25
     b5c:	11 96       	adiw	r26, 0x01	; 1
     b5e:	9c 93       	st	X, r25
     b60:	11 97       	sbiw	r26, 0x01	; 1
     b62:	21 15       	cp	r18, r1
     b64:	31 05       	cpc	r19, r1
     b66:	a9 f5       	brne	.+106    	; 0xbd2 <__unpack_f+0x9e>
     b68:	41 15       	cp	r20, r1
     b6a:	51 05       	cpc	r21, r1
     b6c:	61 05       	cpc	r22, r1
     b6e:	71 05       	cpc	r23, r1
     b70:	11 f4       	brne	.+4      	; 0xb76 <__unpack_f+0x42>
     b72:	82 e0       	ldi	r24, 0x02	; 2
     b74:	37 c0       	rjmp	.+110    	; 0xbe4 <__unpack_f+0xb0>
     b76:	82 e8       	ldi	r24, 0x82	; 130
     b78:	9f ef       	ldi	r25, 0xFF	; 255
     b7a:	13 96       	adiw	r26, 0x03	; 3
     b7c:	9c 93       	st	X, r25
     b7e:	8e 93       	st	-X, r24
     b80:	12 97       	sbiw	r26, 0x02	; 2
     b82:	9a 01       	movw	r18, r20
     b84:	ab 01       	movw	r20, r22
     b86:	67 e0       	ldi	r22, 0x07	; 7
     b88:	22 0f       	add	r18, r18
     b8a:	33 1f       	adc	r19, r19
     b8c:	44 1f       	adc	r20, r20
     b8e:	55 1f       	adc	r21, r21
     b90:	6a 95       	dec	r22
     b92:	d1 f7       	brne	.-12     	; 0xb88 <__unpack_f+0x54>
     b94:	83 e0       	ldi	r24, 0x03	; 3
     b96:	8c 93       	st	X, r24
     b98:	0d c0       	rjmp	.+26     	; 0xbb4 <__unpack_f+0x80>
     b9a:	22 0f       	add	r18, r18
     b9c:	33 1f       	adc	r19, r19
     b9e:	44 1f       	adc	r20, r20
     ba0:	55 1f       	adc	r21, r21
     ba2:	12 96       	adiw	r26, 0x02	; 2
     ba4:	8d 91       	ld	r24, X+
     ba6:	9c 91       	ld	r25, X
     ba8:	13 97       	sbiw	r26, 0x03	; 3
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	13 96       	adiw	r26, 0x03	; 3
     bae:	9c 93       	st	X, r25
     bb0:	8e 93       	st	-X, r24
     bb2:	12 97       	sbiw	r26, 0x02	; 2
     bb4:	20 30       	cpi	r18, 0x00	; 0
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	38 07       	cpc	r19, r24
     bba:	80 e0       	ldi	r24, 0x00	; 0
     bbc:	48 07       	cpc	r20, r24
     bbe:	80 e4       	ldi	r24, 0x40	; 64
     bc0:	58 07       	cpc	r21, r24
     bc2:	58 f3       	brcs	.-42     	; 0xb9a <__unpack_f+0x66>
     bc4:	14 96       	adiw	r26, 0x04	; 4
     bc6:	2d 93       	st	X+, r18
     bc8:	3d 93       	st	X+, r19
     bca:	4d 93       	st	X+, r20
     bcc:	5c 93       	st	X, r21
     bce:	17 97       	sbiw	r26, 0x07	; 7
     bd0:	08 95       	ret
     bd2:	2f 3f       	cpi	r18, 0xFF	; 255
     bd4:	31 05       	cpc	r19, r1
     bd6:	79 f4       	brne	.+30     	; 0xbf6 <__unpack_f+0xc2>
     bd8:	41 15       	cp	r20, r1
     bda:	51 05       	cpc	r21, r1
     bdc:	61 05       	cpc	r22, r1
     bde:	71 05       	cpc	r23, r1
     be0:	19 f4       	brne	.+6      	; 0xbe8 <__unpack_f+0xb4>
     be2:	84 e0       	ldi	r24, 0x04	; 4
     be4:	8c 93       	st	X, r24
     be6:	08 95       	ret
     be8:	64 ff       	sbrs	r22, 4
     bea:	03 c0       	rjmp	.+6      	; 0xbf2 <__unpack_f+0xbe>
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	8c 93       	st	X, r24
     bf0:	12 c0       	rjmp	.+36     	; 0xc16 <__unpack_f+0xe2>
     bf2:	1c 92       	st	X, r1
     bf4:	10 c0       	rjmp	.+32     	; 0xc16 <__unpack_f+0xe2>
     bf6:	2f 57       	subi	r18, 0x7F	; 127
     bf8:	30 40       	sbci	r19, 0x00	; 0
     bfa:	13 96       	adiw	r26, 0x03	; 3
     bfc:	3c 93       	st	X, r19
     bfe:	2e 93       	st	-X, r18
     c00:	12 97       	sbiw	r26, 0x02	; 2
     c02:	83 e0       	ldi	r24, 0x03	; 3
     c04:	8c 93       	st	X, r24
     c06:	87 e0       	ldi	r24, 0x07	; 7
     c08:	44 0f       	add	r20, r20
     c0a:	55 1f       	adc	r21, r21
     c0c:	66 1f       	adc	r22, r22
     c0e:	77 1f       	adc	r23, r23
     c10:	8a 95       	dec	r24
     c12:	d1 f7       	brne	.-12     	; 0xc08 <__unpack_f+0xd4>
     c14:	70 64       	ori	r23, 0x40	; 64
     c16:	14 96       	adiw	r26, 0x04	; 4
     c18:	4d 93       	st	X+, r20
     c1a:	5d 93       	st	X+, r21
     c1c:	6d 93       	st	X+, r22
     c1e:	7c 93       	st	X, r23
     c20:	17 97       	sbiw	r26, 0x07	; 7
     c22:	08 95       	ret

00000c24 <__fpcmp_parts_f>:
     c24:	1f 93       	push	r17
     c26:	dc 01       	movw	r26, r24
     c28:	fb 01       	movw	r30, r22
     c2a:	9c 91       	ld	r25, X
     c2c:	92 30       	cpi	r25, 0x02	; 2
     c2e:	08 f4       	brcc	.+2      	; 0xc32 <__fpcmp_parts_f+0xe>
     c30:	47 c0       	rjmp	.+142    	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c32:	80 81       	ld	r24, Z
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	08 f4       	brcc	.+2      	; 0xc3a <__fpcmp_parts_f+0x16>
     c38:	43 c0       	rjmp	.+134    	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c3a:	94 30       	cpi	r25, 0x04	; 4
     c3c:	51 f4       	brne	.+20     	; 0xc52 <__fpcmp_parts_f+0x2e>
     c3e:	11 96       	adiw	r26, 0x01	; 1
     c40:	1c 91       	ld	r17, X
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	99 f5       	brne	.+102    	; 0xcac <__fpcmp_parts_f+0x88>
     c46:	81 81       	ldd	r24, Z+1	; 0x01
     c48:	68 2f       	mov	r22, r24
     c4a:	70 e0       	ldi	r23, 0x00	; 0
     c4c:	61 1b       	sub	r22, r17
     c4e:	71 09       	sbc	r23, r1
     c50:	3f c0       	rjmp	.+126    	; 0xcd0 <__fpcmp_parts_f+0xac>
     c52:	84 30       	cpi	r24, 0x04	; 4
     c54:	21 f0       	breq	.+8      	; 0xc5e <__fpcmp_parts_f+0x3a>
     c56:	92 30       	cpi	r25, 0x02	; 2
     c58:	31 f4       	brne	.+12     	; 0xc66 <__fpcmp_parts_f+0x42>
     c5a:	82 30       	cpi	r24, 0x02	; 2
     c5c:	b9 f1       	breq	.+110    	; 0xccc <__fpcmp_parts_f+0xa8>
     c5e:	81 81       	ldd	r24, Z+1	; 0x01
     c60:	88 23       	and	r24, r24
     c62:	89 f1       	breq	.+98     	; 0xcc6 <__fpcmp_parts_f+0xa2>
     c64:	2d c0       	rjmp	.+90     	; 0xcc0 <__fpcmp_parts_f+0x9c>
     c66:	11 96       	adiw	r26, 0x01	; 1
     c68:	1c 91       	ld	r17, X
     c6a:	11 97       	sbiw	r26, 0x01	; 1
     c6c:	82 30       	cpi	r24, 0x02	; 2
     c6e:	f1 f0       	breq	.+60     	; 0xcac <__fpcmp_parts_f+0x88>
     c70:	81 81       	ldd	r24, Z+1	; 0x01
     c72:	18 17       	cp	r17, r24
     c74:	d9 f4       	brne	.+54     	; 0xcac <__fpcmp_parts_f+0x88>
     c76:	12 96       	adiw	r26, 0x02	; 2
     c78:	2d 91       	ld	r18, X+
     c7a:	3c 91       	ld	r19, X
     c7c:	13 97       	sbiw	r26, 0x03	; 3
     c7e:	82 81       	ldd	r24, Z+2	; 0x02
     c80:	93 81       	ldd	r25, Z+3	; 0x03
     c82:	82 17       	cp	r24, r18
     c84:	93 07       	cpc	r25, r19
     c86:	94 f0       	brlt	.+36     	; 0xcac <__fpcmp_parts_f+0x88>
     c88:	28 17       	cp	r18, r24
     c8a:	39 07       	cpc	r19, r25
     c8c:	bc f0       	brlt	.+46     	; 0xcbc <__fpcmp_parts_f+0x98>
     c8e:	14 96       	adiw	r26, 0x04	; 4
     c90:	8d 91       	ld	r24, X+
     c92:	9d 91       	ld	r25, X+
     c94:	0d 90       	ld	r0, X+
     c96:	bc 91       	ld	r27, X
     c98:	a0 2d       	mov	r26, r0
     c9a:	24 81       	ldd	r18, Z+4	; 0x04
     c9c:	35 81       	ldd	r19, Z+5	; 0x05
     c9e:	46 81       	ldd	r20, Z+6	; 0x06
     ca0:	57 81       	ldd	r21, Z+7	; 0x07
     ca2:	28 17       	cp	r18, r24
     ca4:	39 07       	cpc	r19, r25
     ca6:	4a 07       	cpc	r20, r26
     ca8:	5b 07       	cpc	r21, r27
     caa:	18 f4       	brcc	.+6      	; 0xcb2 <__fpcmp_parts_f+0x8e>
     cac:	11 23       	and	r17, r17
     cae:	41 f0       	breq	.+16     	; 0xcc0 <__fpcmp_parts_f+0x9c>
     cb0:	0a c0       	rjmp	.+20     	; 0xcc6 <__fpcmp_parts_f+0xa2>
     cb2:	82 17       	cp	r24, r18
     cb4:	93 07       	cpc	r25, r19
     cb6:	a4 07       	cpc	r26, r20
     cb8:	b5 07       	cpc	r27, r21
     cba:	40 f4       	brcc	.+16     	; 0xccc <__fpcmp_parts_f+0xa8>
     cbc:	11 23       	and	r17, r17
     cbe:	19 f0       	breq	.+6      	; 0xcc6 <__fpcmp_parts_f+0xa2>
     cc0:	61 e0       	ldi	r22, 0x01	; 1
     cc2:	70 e0       	ldi	r23, 0x00	; 0
     cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <__fpcmp_parts_f+0xac>
     cc6:	6f ef       	ldi	r22, 0xFF	; 255
     cc8:	7f ef       	ldi	r23, 0xFF	; 255
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <__fpcmp_parts_f+0xac>
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	70 e0       	ldi	r23, 0x00	; 0
     cd0:	cb 01       	movw	r24, r22
     cd2:	1f 91       	pop	r17
     cd4:	08 95       	ret

00000cd6 <ADC_init>:
#include"utils.h"
#include"DIO.h"
#include"ADC.h"

void ADC_init (void)
{
     cd6:	df 93       	push	r29
     cd8:	cf 93       	push	r28
     cda:	cd b7       	in	r28, 0x3d	; 61
     cdc:	de b7       	in	r29, 0x3e	; 62
	set_bit(ADMUX,pin6);
     cde:	a7 e2       	ldi	r26, 0x27	; 39
     ce0:	b0 e0       	ldi	r27, 0x00	; 0
     ce2:	e7 e2       	ldi	r30, 0x27	; 39
     ce4:	f0 e0       	ldi	r31, 0x00	; 0
     ce6:	80 81       	ld	r24, Z
     ce8:	80 64       	ori	r24, 0x40	; 64
     cea:	8c 93       	st	X, r24
	set_bit(ADCSRA,pin7);
     cec:	a6 e2       	ldi	r26, 0x26	; 38
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	e6 e2       	ldi	r30, 0x26	; 38
     cf2:	f0 e0       	ldi	r31, 0x00	; 0
     cf4:	80 81       	ld	r24, Z
     cf6:	80 68       	ori	r24, 0x80	; 128
     cf8:	8c 93       	st	X, r24
	set_bit(ADCSRA,pin0);
     cfa:	a6 e2       	ldi	r26, 0x26	; 38
     cfc:	b0 e0       	ldi	r27, 0x00	; 0
     cfe:	e6 e2       	ldi	r30, 0x26	; 38
     d00:	f0 e0       	ldi	r31, 0x00	; 0
     d02:	80 81       	ld	r24, Z
     d04:	81 60       	ori	r24, 0x01	; 1
     d06:	8c 93       	st	X, r24
	set_bit(ADCSRA,pin2);
     d08:	a6 e2       	ldi	r26, 0x26	; 38
     d0a:	b0 e0       	ldi	r27, 0x00	; 0
     d0c:	e6 e2       	ldi	r30, 0x26	; 38
     d0e:	f0 e0       	ldi	r31, 0x00	; 0
     d10:	80 81       	ld	r24, Z
     d12:	84 60       	ori	r24, 0x04	; 4
     d14:	8c 93       	st	X, r24
}
     d16:	cf 91       	pop	r28
     d18:	df 91       	pop	r29
     d1a:	08 95       	ret

00000d1c <ADC_U16Read>:
extern u16 ADC_U16Read(u8 ch)
{
     d1c:	df 93       	push	r29
     d1e:	cf 93       	push	r28
     d20:	0f 92       	push	r0
     d22:	cd b7       	in	r28, 0x3d	; 61
     d24:	de b7       	in	r29, 0x3e	; 62
     d26:	89 83       	std	Y+1, r24	; 0x01
	ADMUX&=0b11100000;
     d28:	a7 e2       	ldi	r26, 0x27	; 39
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
     d2c:	e7 e2       	ldi	r30, 0x27	; 39
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	80 81       	ld	r24, Z
     d32:	80 7e       	andi	r24, 0xE0	; 224
     d34:	8c 93       	st	X, r24
	ADMUX|=ch;
     d36:	a7 e2       	ldi	r26, 0x27	; 39
     d38:	b0 e0       	ldi	r27, 0x00	; 0
     d3a:	e7 e2       	ldi	r30, 0x27	; 39
     d3c:	f0 e0       	ldi	r31, 0x00	; 0
     d3e:	90 81       	ld	r25, Z
     d40:	89 81       	ldd	r24, Y+1	; 0x01
     d42:	89 2b       	or	r24, r25
     d44:	8c 93       	st	X, r24
	set_bit(ADCSRA,pin6);
     d46:	a6 e2       	ldi	r26, 0x26	; 38
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	e6 e2       	ldi	r30, 0x26	; 38
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 81       	ld	r24, Z
     d50:	80 64       	ori	r24, 0x40	; 64
     d52:	8c 93       	st	X, r24
	while(!(ADCSRA&(1<<4)));
     d54:	e6 e2       	ldi	r30, 0x26	; 38
     d56:	f0 e0       	ldi	r31, 0x00	; 0
     d58:	80 81       	ld	r24, Z
     d5a:	88 2f       	mov	r24, r24
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	80 71       	andi	r24, 0x10	; 16
     d60:	90 70       	andi	r25, 0x00	; 0
     d62:	00 97       	sbiw	r24, 0x00	; 0
     d64:	b9 f3       	breq	.-18     	; 0xd54 <ADC_U16Read+0x38>
	set_bit(ADCSRA,pin4);
     d66:	a6 e2       	ldi	r26, 0x26	; 38
     d68:	b0 e0       	ldi	r27, 0x00	; 0
     d6a:	e6 e2       	ldi	r30, 0x26	; 38
     d6c:	f0 e0       	ldi	r31, 0x00	; 0
     d6e:	80 81       	ld	r24, Z
     d70:	80 61       	ori	r24, 0x10	; 16
     d72:	8c 93       	st	X, r24
	return(ADC);
     d74:	e4 e2       	ldi	r30, 0x24	; 36
     d76:	f0 e0       	ldi	r31, 0x00	; 0
     d78:	80 81       	ld	r24, Z
     d7a:	91 81       	ldd	r25, Z+1	; 0x01
}
     d7c:	0f 90       	pop	r0
     d7e:	cf 91       	pop	r28
     d80:	df 91       	pop	r29
     d82:	08 95       	ret

00000d84 <DIO_vidsetpindir>:
#include "std_types.h"
#include "registers.h"
#include"utils.h"
#include"DIO.h"
extern void DIO_vidsetpindir (u8 port ,u8 pin , u8 dir)
{
     d84:	df 93       	push	r29
     d86:	cf 93       	push	r28
     d88:	00 d0       	rcall	.+0      	; 0xd8a <DIO_vidsetpindir+0x6>
     d8a:	00 d0       	rcall	.+0      	; 0xd8c <DIO_vidsetpindir+0x8>
     d8c:	0f 92       	push	r0
     d8e:	cd b7       	in	r28, 0x3d	; 61
     d90:	de b7       	in	r29, 0x3e	; 62
     d92:	89 83       	std	Y+1, r24	; 0x01
     d94:	6a 83       	std	Y+2, r22	; 0x02
     d96:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
     d98:	89 81       	ldd	r24, Y+1	; 0x01
     d9a:	28 2f       	mov	r18, r24
     d9c:	30 e0       	ldi	r19, 0x00	; 0
     d9e:	3d 83       	std	Y+5, r19	; 0x05
     da0:	2c 83       	std	Y+4, r18	; 0x04
     da2:	8c 81       	ldd	r24, Y+4	; 0x04
     da4:	9d 81       	ldd	r25, Y+5	; 0x05
     da6:	81 30       	cpi	r24, 0x01	; 1
     da8:	91 05       	cpc	r25, r1
     daa:	09 f4       	brne	.+2      	; 0xdae <DIO_vidsetpindir+0x2a>
     dac:	46 c0       	rjmp	.+140    	; 0xe3a <DIO_vidsetpindir+0xb6>
     dae:	2c 81       	ldd	r18, Y+4	; 0x04
     db0:	3d 81       	ldd	r19, Y+5	; 0x05
     db2:	22 30       	cpi	r18, 0x02	; 2
     db4:	31 05       	cpc	r19, r1
     db6:	2c f4       	brge	.+10     	; 0xdc2 <DIO_vidsetpindir+0x3e>
     db8:	8c 81       	ldd	r24, Y+4	; 0x04
     dba:	9d 81       	ldd	r25, Y+5	; 0x05
     dbc:	00 97       	sbiw	r24, 0x00	; 0
     dbe:	71 f0       	breq	.+28     	; 0xddc <DIO_vidsetpindir+0x58>
     dc0:	c7 c0       	rjmp	.+398    	; 0xf50 <DIO_vidsetpindir+0x1cc>
     dc2:	2c 81       	ldd	r18, Y+4	; 0x04
     dc4:	3d 81       	ldd	r19, Y+5	; 0x05
     dc6:	22 30       	cpi	r18, 0x02	; 2
     dc8:	31 05       	cpc	r19, r1
     dca:	09 f4       	brne	.+2      	; 0xdce <DIO_vidsetpindir+0x4a>
     dcc:	65 c0       	rjmp	.+202    	; 0xe98 <DIO_vidsetpindir+0x114>
     dce:	8c 81       	ldd	r24, Y+4	; 0x04
     dd0:	9d 81       	ldd	r25, Y+5	; 0x05
     dd2:	83 30       	cpi	r24, 0x03	; 3
     dd4:	91 05       	cpc	r25, r1
     dd6:	09 f4       	brne	.+2      	; 0xdda <DIO_vidsetpindir+0x56>
     dd8:	8e c0       	rjmp	.+284    	; 0xef6 <DIO_vidsetpindir+0x172>
     dda:	ba c0       	rjmp	.+372    	; 0xf50 <DIO_vidsetpindir+0x1cc>
	{
	case 0:
		if (dir==0)
     ddc:	8b 81       	ldd	r24, Y+3	; 0x03
     dde:	88 23       	and	r24, r24
     de0:	a1 f4       	brne	.+40     	; 0xe0a <DIO_vidsetpindir+0x86>
			clear_bit(DDRA,pin);
     de2:	aa e3       	ldi	r26, 0x3A	; 58
     de4:	b0 e0       	ldi	r27, 0x00	; 0
     de6:	ea e3       	ldi	r30, 0x3A	; 58
     de8:	f0 e0       	ldi	r31, 0x00	; 0
     dea:	80 81       	ld	r24, Z
     dec:	48 2f       	mov	r20, r24
     dee:	8a 81       	ldd	r24, Y+2	; 0x02
     df0:	28 2f       	mov	r18, r24
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	81 e0       	ldi	r24, 0x01	; 1
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	02 2e       	mov	r0, r18
     dfa:	02 c0       	rjmp	.+4      	; 0xe00 <DIO_vidsetpindir+0x7c>
     dfc:	88 0f       	add	r24, r24
     dfe:	99 1f       	adc	r25, r25
     e00:	0a 94       	dec	r0
     e02:	e2 f7       	brpl	.-8      	; 0xdfc <DIO_vidsetpindir+0x78>
     e04:	80 95       	com	r24
     e06:	84 23       	and	r24, r20
     e08:	8c 93       	st	X, r24
		if (dir==1)
     e0a:	8b 81       	ldd	r24, Y+3	; 0x03
     e0c:	81 30       	cpi	r24, 0x01	; 1
     e0e:	09 f0       	breq	.+2      	; 0xe12 <DIO_vidsetpindir+0x8e>
     e10:	9f c0       	rjmp	.+318    	; 0xf50 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRA,pin);
     e12:	aa e3       	ldi	r26, 0x3A	; 58
     e14:	b0 e0       	ldi	r27, 0x00	; 0
     e16:	ea e3       	ldi	r30, 0x3A	; 58
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	80 81       	ld	r24, Z
     e1c:	48 2f       	mov	r20, r24
     e1e:	8a 81       	ldd	r24, Y+2	; 0x02
     e20:	28 2f       	mov	r18, r24
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	81 e0       	ldi	r24, 0x01	; 1
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	02 2e       	mov	r0, r18
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <DIO_vidsetpindir+0xac>
     e2c:	88 0f       	add	r24, r24
     e2e:	99 1f       	adc	r25, r25
     e30:	0a 94       	dec	r0
     e32:	e2 f7       	brpl	.-8      	; 0xe2c <DIO_vidsetpindir+0xa8>
     e34:	84 2b       	or	r24, r20
     e36:	8c 93       	st	X, r24
     e38:	8b c0       	rjmp	.+278    	; 0xf50 <DIO_vidsetpindir+0x1cc>
		break;
	case 1:
		if (dir==0)
     e3a:	8b 81       	ldd	r24, Y+3	; 0x03
     e3c:	88 23       	and	r24, r24
     e3e:	a1 f4       	brne	.+40     	; 0xe68 <DIO_vidsetpindir+0xe4>
			clear_bit (DDRB,pin);
     e40:	a7 e3       	ldi	r26, 0x37	; 55
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e7 e3       	ldi	r30, 0x37	; 55
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	48 2f       	mov	r20, r24
     e4c:	8a 81       	ldd	r24, Y+2	; 0x02
     e4e:	28 2f       	mov	r18, r24
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	02 2e       	mov	r0, r18
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <DIO_vidsetpindir+0xda>
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	0a 94       	dec	r0
     e60:	e2 f7       	brpl	.-8      	; 0xe5a <DIO_vidsetpindir+0xd6>
     e62:	80 95       	com	r24
     e64:	84 23       	and	r24, r20
     e66:	8c 93       	st	X, r24
		if (dir==1)
     e68:	8b 81       	ldd	r24, Y+3	; 0x03
     e6a:	81 30       	cpi	r24, 0x01	; 1
     e6c:	09 f0       	breq	.+2      	; 0xe70 <DIO_vidsetpindir+0xec>
     e6e:	70 c0       	rjmp	.+224    	; 0xf50 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRB,pin);
     e70:	a7 e3       	ldi	r26, 0x37	; 55
     e72:	b0 e0       	ldi	r27, 0x00	; 0
     e74:	e7 e3       	ldi	r30, 0x37	; 55
     e76:	f0 e0       	ldi	r31, 0x00	; 0
     e78:	80 81       	ld	r24, Z
     e7a:	48 2f       	mov	r20, r24
     e7c:	8a 81       	ldd	r24, Y+2	; 0x02
     e7e:	28 2f       	mov	r18, r24
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	81 e0       	ldi	r24, 0x01	; 1
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	02 2e       	mov	r0, r18
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <DIO_vidsetpindir+0x10a>
     e8a:	88 0f       	add	r24, r24
     e8c:	99 1f       	adc	r25, r25
     e8e:	0a 94       	dec	r0
     e90:	e2 f7       	brpl	.-8      	; 0xe8a <DIO_vidsetpindir+0x106>
     e92:	84 2b       	or	r24, r20
     e94:	8c 93       	st	X, r24
     e96:	5c c0       	rjmp	.+184    	; 0xf50 <DIO_vidsetpindir+0x1cc>
		break;
	case 2:
		if (dir==0)
     e98:	8b 81       	ldd	r24, Y+3	; 0x03
     e9a:	88 23       	and	r24, r24
     e9c:	a1 f4       	brne	.+40     	; 0xec6 <DIO_vidsetpindir+0x142>
			clear_bit (DDRC,pin);
     e9e:	a4 e3       	ldi	r26, 0x34	; 52
     ea0:	b0 e0       	ldi	r27, 0x00	; 0
     ea2:	e4 e3       	ldi	r30, 0x34	; 52
     ea4:	f0 e0       	ldi	r31, 0x00	; 0
     ea6:	80 81       	ld	r24, Z
     ea8:	48 2f       	mov	r20, r24
     eaa:	8a 81       	ldd	r24, Y+2	; 0x02
     eac:	28 2f       	mov	r18, r24
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	02 2e       	mov	r0, r18
     eb6:	02 c0       	rjmp	.+4      	; 0xebc <DIO_vidsetpindir+0x138>
     eb8:	88 0f       	add	r24, r24
     eba:	99 1f       	adc	r25, r25
     ebc:	0a 94       	dec	r0
     ebe:	e2 f7       	brpl	.-8      	; 0xeb8 <DIO_vidsetpindir+0x134>
     ec0:	80 95       	com	r24
     ec2:	84 23       	and	r24, r20
     ec4:	8c 93       	st	X, r24
		if (dir==1)
     ec6:	8b 81       	ldd	r24, Y+3	; 0x03
     ec8:	81 30       	cpi	r24, 0x01	; 1
     eca:	09 f0       	breq	.+2      	; 0xece <DIO_vidsetpindir+0x14a>
     ecc:	41 c0       	rjmp	.+130    	; 0xf50 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRC,pin);
     ece:	a4 e3       	ldi	r26, 0x34	; 52
     ed0:	b0 e0       	ldi	r27, 0x00	; 0
     ed2:	e4 e3       	ldi	r30, 0x34	; 52
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	80 81       	ld	r24, Z
     ed8:	48 2f       	mov	r20, r24
     eda:	8a 81       	ldd	r24, Y+2	; 0x02
     edc:	28 2f       	mov	r18, r24
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	81 e0       	ldi	r24, 0x01	; 1
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	02 2e       	mov	r0, r18
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <DIO_vidsetpindir+0x168>
     ee8:	88 0f       	add	r24, r24
     eea:	99 1f       	adc	r25, r25
     eec:	0a 94       	dec	r0
     eee:	e2 f7       	brpl	.-8      	; 0xee8 <DIO_vidsetpindir+0x164>
     ef0:	84 2b       	or	r24, r20
     ef2:	8c 93       	st	X, r24
     ef4:	2d c0       	rjmp	.+90     	; 0xf50 <DIO_vidsetpindir+0x1cc>
		break;
	case 3:
		if (dir==0)
     ef6:	8b 81       	ldd	r24, Y+3	; 0x03
     ef8:	88 23       	and	r24, r24
     efa:	a1 f4       	brne	.+40     	; 0xf24 <DIO_vidsetpindir+0x1a0>
			clear_bit(DDRD,pin);
     efc:	a1 e3       	ldi	r26, 0x31	; 49
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	e1 e3       	ldi	r30, 0x31	; 49
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	80 81       	ld	r24, Z
     f06:	48 2f       	mov	r20, r24
     f08:	8a 81       	ldd	r24, Y+2	; 0x02
     f0a:	28 2f       	mov	r18, r24
     f0c:	30 e0       	ldi	r19, 0x00	; 0
     f0e:	81 e0       	ldi	r24, 0x01	; 1
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	02 2e       	mov	r0, r18
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <DIO_vidsetpindir+0x196>
     f16:	88 0f       	add	r24, r24
     f18:	99 1f       	adc	r25, r25
     f1a:	0a 94       	dec	r0
     f1c:	e2 f7       	brpl	.-8      	; 0xf16 <DIO_vidsetpindir+0x192>
     f1e:	80 95       	com	r24
     f20:	84 23       	and	r24, r20
     f22:	8c 93       	st	X, r24
		if (dir==1)
     f24:	8b 81       	ldd	r24, Y+3	; 0x03
     f26:	81 30       	cpi	r24, 0x01	; 1
     f28:	99 f4       	brne	.+38     	; 0xf50 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRD,pin);
     f2a:	a1 e3       	ldi	r26, 0x31	; 49
     f2c:	b0 e0       	ldi	r27, 0x00	; 0
     f2e:	e1 e3       	ldi	r30, 0x31	; 49
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	48 2f       	mov	r20, r24
     f36:	8a 81       	ldd	r24, Y+2	; 0x02
     f38:	28 2f       	mov	r18, r24
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	02 2e       	mov	r0, r18
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <DIO_vidsetpindir+0x1c4>
     f44:	88 0f       	add	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	0a 94       	dec	r0
     f4a:	e2 f7       	brpl	.-8      	; 0xf44 <DIO_vidsetpindir+0x1c0>
     f4c:	84 2b       	or	r24, r20
     f4e:	8c 93       	st	X, r24
		break;
	default :
		break;
	}
}
     f50:	0f 90       	pop	r0
     f52:	0f 90       	pop	r0
     f54:	0f 90       	pop	r0
     f56:	0f 90       	pop	r0
     f58:	0f 90       	pop	r0
     f5a:	cf 91       	pop	r28
     f5c:	df 91       	pop	r29
     f5e:	08 95       	ret

00000f60 <DIO_vidwritepinvalue>:

extern void DIO_vidwritepinvalue (u8 port, u8 pin, u8 value)
{
     f60:	df 93       	push	r29
     f62:	cf 93       	push	r28
     f64:	00 d0       	rcall	.+0      	; 0xf66 <DIO_vidwritepinvalue+0x6>
     f66:	00 d0       	rcall	.+0      	; 0xf68 <DIO_vidwritepinvalue+0x8>
     f68:	0f 92       	push	r0
     f6a:	cd b7       	in	r28, 0x3d	; 61
     f6c:	de b7       	in	r29, 0x3e	; 62
     f6e:	89 83       	std	Y+1, r24	; 0x01
     f70:	6a 83       	std	Y+2, r22	; 0x02
     f72:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
     f74:	89 81       	ldd	r24, Y+1	; 0x01
     f76:	28 2f       	mov	r18, r24
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	3d 83       	std	Y+5, r19	; 0x05
     f7c:	2c 83       	std	Y+4, r18	; 0x04
     f7e:	8c 81       	ldd	r24, Y+4	; 0x04
     f80:	9d 81       	ldd	r25, Y+5	; 0x05
     f82:	81 30       	cpi	r24, 0x01	; 1
     f84:	91 05       	cpc	r25, r1
     f86:	09 f4       	brne	.+2      	; 0xf8a <DIO_vidwritepinvalue+0x2a>
     f88:	46 c0       	rjmp	.+140    	; 0x1016 <DIO_vidwritepinvalue+0xb6>
     f8a:	2c 81       	ldd	r18, Y+4	; 0x04
     f8c:	3d 81       	ldd	r19, Y+5	; 0x05
     f8e:	22 30       	cpi	r18, 0x02	; 2
     f90:	31 05       	cpc	r19, r1
     f92:	2c f4       	brge	.+10     	; 0xf9e <DIO_vidwritepinvalue+0x3e>
     f94:	8c 81       	ldd	r24, Y+4	; 0x04
     f96:	9d 81       	ldd	r25, Y+5	; 0x05
     f98:	00 97       	sbiw	r24, 0x00	; 0
     f9a:	71 f0       	breq	.+28     	; 0xfb8 <DIO_vidwritepinvalue+0x58>
     f9c:	c7 c0       	rjmp	.+398    	; 0x112c <DIO_vidwritepinvalue+0x1cc>
     f9e:	2c 81       	ldd	r18, Y+4	; 0x04
     fa0:	3d 81       	ldd	r19, Y+5	; 0x05
     fa2:	22 30       	cpi	r18, 0x02	; 2
     fa4:	31 05       	cpc	r19, r1
     fa6:	09 f4       	brne	.+2      	; 0xfaa <DIO_vidwritepinvalue+0x4a>
     fa8:	65 c0       	rjmp	.+202    	; 0x1074 <DIO_vidwritepinvalue+0x114>
     faa:	8c 81       	ldd	r24, Y+4	; 0x04
     fac:	9d 81       	ldd	r25, Y+5	; 0x05
     fae:	83 30       	cpi	r24, 0x03	; 3
     fb0:	91 05       	cpc	r25, r1
     fb2:	09 f4       	brne	.+2      	; 0xfb6 <DIO_vidwritepinvalue+0x56>
     fb4:	8e c0       	rjmp	.+284    	; 0x10d2 <DIO_vidwritepinvalue+0x172>
     fb6:	ba c0       	rjmp	.+372    	; 0x112c <DIO_vidwritepinvalue+0x1cc>
		{
	case 0:
		if (value==0)
     fb8:	8b 81       	ldd	r24, Y+3	; 0x03
     fba:	88 23       	and	r24, r24
     fbc:	a1 f4       	brne	.+40     	; 0xfe6 <DIO_vidwritepinvalue+0x86>
			clear_bit (PORTA,pin);
     fbe:	ab e3       	ldi	r26, 0x3B	; 59
     fc0:	b0 e0       	ldi	r27, 0x00	; 0
     fc2:	eb e3       	ldi	r30, 0x3B	; 59
     fc4:	f0 e0       	ldi	r31, 0x00	; 0
     fc6:	80 81       	ld	r24, Z
     fc8:	48 2f       	mov	r20, r24
     fca:	8a 81       	ldd	r24, Y+2	; 0x02
     fcc:	28 2f       	mov	r18, r24
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	02 2e       	mov	r0, r18
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <DIO_vidwritepinvalue+0x7c>
     fd8:	88 0f       	add	r24, r24
     fda:	99 1f       	adc	r25, r25
     fdc:	0a 94       	dec	r0
     fde:	e2 f7       	brpl	.-8      	; 0xfd8 <DIO_vidwritepinvalue+0x78>
     fe0:	80 95       	com	r24
     fe2:	84 23       	and	r24, r20
     fe4:	8c 93       	st	X, r24
		if (value==1)
     fe6:	8b 81       	ldd	r24, Y+3	; 0x03
     fe8:	81 30       	cpi	r24, 0x01	; 1
     fea:	09 f0       	breq	.+2      	; 0xfee <DIO_vidwritepinvalue+0x8e>
     fec:	9f c0       	rjmp	.+318    	; 0x112c <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTA,pin);
     fee:	ab e3       	ldi	r26, 0x3B	; 59
     ff0:	b0 e0       	ldi	r27, 0x00	; 0
     ff2:	eb e3       	ldi	r30, 0x3B	; 59
     ff4:	f0 e0       	ldi	r31, 0x00	; 0
     ff6:	80 81       	ld	r24, Z
     ff8:	48 2f       	mov	r20, r24
     ffa:	8a 81       	ldd	r24, Y+2	; 0x02
     ffc:	28 2f       	mov	r18, r24
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	81 e0       	ldi	r24, 0x01	; 1
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	02 2e       	mov	r0, r18
    1006:	02 c0       	rjmp	.+4      	; 0x100c <DIO_vidwritepinvalue+0xac>
    1008:	88 0f       	add	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	0a 94       	dec	r0
    100e:	e2 f7       	brpl	.-8      	; 0x1008 <DIO_vidwritepinvalue+0xa8>
    1010:	84 2b       	or	r24, r20
    1012:	8c 93       	st	X, r24
    1014:	8b c0       	rjmp	.+278    	; 0x112c <DIO_vidwritepinvalue+0x1cc>
			break;
		case 1:
		if (value==0)
    1016:	8b 81       	ldd	r24, Y+3	; 0x03
    1018:	88 23       	and	r24, r24
    101a:	a1 f4       	brne	.+40     	; 0x1044 <DIO_vidwritepinvalue+0xe4>
			clear_bit (PORTB,pin);
    101c:	a8 e3       	ldi	r26, 0x38	; 56
    101e:	b0 e0       	ldi	r27, 0x00	; 0
    1020:	e8 e3       	ldi	r30, 0x38	; 56
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	80 81       	ld	r24, Z
    1026:	48 2f       	mov	r20, r24
    1028:	8a 81       	ldd	r24, Y+2	; 0x02
    102a:	28 2f       	mov	r18, r24
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	02 2e       	mov	r0, r18
    1034:	02 c0       	rjmp	.+4      	; 0x103a <DIO_vidwritepinvalue+0xda>
    1036:	88 0f       	add	r24, r24
    1038:	99 1f       	adc	r25, r25
    103a:	0a 94       	dec	r0
    103c:	e2 f7       	brpl	.-8      	; 0x1036 <DIO_vidwritepinvalue+0xd6>
    103e:	80 95       	com	r24
    1040:	84 23       	and	r24, r20
    1042:	8c 93       	st	X, r24
		if (value==1)
    1044:	8b 81       	ldd	r24, Y+3	; 0x03
    1046:	81 30       	cpi	r24, 0x01	; 1
    1048:	09 f0       	breq	.+2      	; 0x104c <DIO_vidwritepinvalue+0xec>
    104a:	70 c0       	rjmp	.+224    	; 0x112c <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTB,pin);
    104c:	a8 e3       	ldi	r26, 0x38	; 56
    104e:	b0 e0       	ldi	r27, 0x00	; 0
    1050:	e8 e3       	ldi	r30, 0x38	; 56
    1052:	f0 e0       	ldi	r31, 0x00	; 0
    1054:	80 81       	ld	r24, Z
    1056:	48 2f       	mov	r20, r24
    1058:	8a 81       	ldd	r24, Y+2	; 0x02
    105a:	28 2f       	mov	r18, r24
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	81 e0       	ldi	r24, 0x01	; 1
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	02 2e       	mov	r0, r18
    1064:	02 c0       	rjmp	.+4      	; 0x106a <DIO_vidwritepinvalue+0x10a>
    1066:	88 0f       	add	r24, r24
    1068:	99 1f       	adc	r25, r25
    106a:	0a 94       	dec	r0
    106c:	e2 f7       	brpl	.-8      	; 0x1066 <DIO_vidwritepinvalue+0x106>
    106e:	84 2b       	or	r24, r20
    1070:	8c 93       	st	X, r24
    1072:	5c c0       	rjmp	.+184    	; 0x112c <DIO_vidwritepinvalue+0x1cc>
		break;
	case 2:
		if (value==0)
    1074:	8b 81       	ldd	r24, Y+3	; 0x03
    1076:	88 23       	and	r24, r24
    1078:	a1 f4       	brne	.+40     	; 0x10a2 <DIO_vidwritepinvalue+0x142>
			clear_bit (PORTC,pin);
    107a:	a5 e3       	ldi	r26, 0x35	; 53
    107c:	b0 e0       	ldi	r27, 0x00	; 0
    107e:	e5 e3       	ldi	r30, 0x35	; 53
    1080:	f0 e0       	ldi	r31, 0x00	; 0
    1082:	80 81       	ld	r24, Z
    1084:	48 2f       	mov	r20, r24
    1086:	8a 81       	ldd	r24, Y+2	; 0x02
    1088:	28 2f       	mov	r18, r24
    108a:	30 e0       	ldi	r19, 0x00	; 0
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	02 2e       	mov	r0, r18
    1092:	02 c0       	rjmp	.+4      	; 0x1098 <DIO_vidwritepinvalue+0x138>
    1094:	88 0f       	add	r24, r24
    1096:	99 1f       	adc	r25, r25
    1098:	0a 94       	dec	r0
    109a:	e2 f7       	brpl	.-8      	; 0x1094 <DIO_vidwritepinvalue+0x134>
    109c:	80 95       	com	r24
    109e:	84 23       	and	r24, r20
    10a0:	8c 93       	st	X, r24
		if (value==1)
    10a2:	8b 81       	ldd	r24, Y+3	; 0x03
    10a4:	81 30       	cpi	r24, 0x01	; 1
    10a6:	09 f0       	breq	.+2      	; 0x10aa <DIO_vidwritepinvalue+0x14a>
    10a8:	41 c0       	rjmp	.+130    	; 0x112c <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTC,pin);
    10aa:	a5 e3       	ldi	r26, 0x35	; 53
    10ac:	b0 e0       	ldi	r27, 0x00	; 0
    10ae:	e5 e3       	ldi	r30, 0x35	; 53
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	80 81       	ld	r24, Z
    10b4:	48 2f       	mov	r20, r24
    10b6:	8a 81       	ldd	r24, Y+2	; 0x02
    10b8:	28 2f       	mov	r18, r24
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	02 2e       	mov	r0, r18
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <DIO_vidwritepinvalue+0x168>
    10c4:	88 0f       	add	r24, r24
    10c6:	99 1f       	adc	r25, r25
    10c8:	0a 94       	dec	r0
    10ca:	e2 f7       	brpl	.-8      	; 0x10c4 <DIO_vidwritepinvalue+0x164>
    10cc:	84 2b       	or	r24, r20
    10ce:	8c 93       	st	X, r24
    10d0:	2d c0       	rjmp	.+90     	; 0x112c <DIO_vidwritepinvalue+0x1cc>
			break;
		case 3:
		if (value==0)
    10d2:	8b 81       	ldd	r24, Y+3	; 0x03
    10d4:	88 23       	and	r24, r24
    10d6:	a1 f4       	brne	.+40     	; 0x1100 <DIO_vidwritepinvalue+0x1a0>
			clear_bit(PORTD,pin);
    10d8:	a2 e3       	ldi	r26, 0x32	; 50
    10da:	b0 e0       	ldi	r27, 0x00	; 0
    10dc:	e2 e3       	ldi	r30, 0x32	; 50
    10de:	f0 e0       	ldi	r31, 0x00	; 0
    10e0:	80 81       	ld	r24, Z
    10e2:	48 2f       	mov	r20, r24
    10e4:	8a 81       	ldd	r24, Y+2	; 0x02
    10e6:	28 2f       	mov	r18, r24
    10e8:	30 e0       	ldi	r19, 0x00	; 0
    10ea:	81 e0       	ldi	r24, 0x01	; 1
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	02 2e       	mov	r0, r18
    10f0:	02 c0       	rjmp	.+4      	; 0x10f6 <DIO_vidwritepinvalue+0x196>
    10f2:	88 0f       	add	r24, r24
    10f4:	99 1f       	adc	r25, r25
    10f6:	0a 94       	dec	r0
    10f8:	e2 f7       	brpl	.-8      	; 0x10f2 <DIO_vidwritepinvalue+0x192>
    10fa:	80 95       	com	r24
    10fc:	84 23       	and	r24, r20
    10fe:	8c 93       	st	X, r24
		if (value==1)
    1100:	8b 81       	ldd	r24, Y+3	; 0x03
    1102:	81 30       	cpi	r24, 0x01	; 1
    1104:	99 f4       	brne	.+38     	; 0x112c <DIO_vidwritepinvalue+0x1cc>
				set_bit (PORTD,pin);
    1106:	a2 e3       	ldi	r26, 0x32	; 50
    1108:	b0 e0       	ldi	r27, 0x00	; 0
    110a:	e2 e3       	ldi	r30, 0x32	; 50
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	80 81       	ld	r24, Z
    1110:	48 2f       	mov	r20, r24
    1112:	8a 81       	ldd	r24, Y+2	; 0x02
    1114:	28 2f       	mov	r18, r24
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	81 e0       	ldi	r24, 0x01	; 1
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	02 2e       	mov	r0, r18
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <DIO_vidwritepinvalue+0x1c4>
    1120:	88 0f       	add	r24, r24
    1122:	99 1f       	adc	r25, r25
    1124:	0a 94       	dec	r0
    1126:	e2 f7       	brpl	.-8      	; 0x1120 <DIO_vidwritepinvalue+0x1c0>
    1128:	84 2b       	or	r24, r20
    112a:	8c 93       	st	X, r24
			break;
		default :
			break;
		}
}
    112c:	0f 90       	pop	r0
    112e:	0f 90       	pop	r0
    1130:	0f 90       	pop	r0
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	cf 91       	pop	r28
    1138:	df 91       	pop	r29
    113a:	08 95       	ret

0000113c <DIO_u8readpinvalue>:

extern u8 DIO_u8readpinvalue (u8 port, u8 pin)
{
    113c:	df 93       	push	r29
    113e:	cf 93       	push	r28
    1140:	00 d0       	rcall	.+0      	; 0x1142 <DIO_u8readpinvalue+0x6>
    1142:	00 d0       	rcall	.+0      	; 0x1144 <DIO_u8readpinvalue+0x8>
    1144:	0f 92       	push	r0
    1146:	cd b7       	in	r28, 0x3d	; 61
    1148:	de b7       	in	r29, 0x3e	; 62
    114a:	89 83       	std	Y+1, r24	; 0x01
    114c:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
    114e:	89 81       	ldd	r24, Y+1	; 0x01
    1150:	28 2f       	mov	r18, r24
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	3d 83       	std	Y+5, r19	; 0x05
    1156:	2c 83       	std	Y+4, r18	; 0x04
    1158:	4c 81       	ldd	r20, Y+4	; 0x04
    115a:	5d 81       	ldd	r21, Y+5	; 0x05
    115c:	41 30       	cpi	r20, 0x01	; 1
    115e:	51 05       	cpc	r21, r1
    1160:	b1 f1       	breq	.+108    	; 0x11ce <DIO_u8readpinvalue+0x92>
    1162:	8c 81       	ldd	r24, Y+4	; 0x04
    1164:	9d 81       	ldd	r25, Y+5	; 0x05
    1166:	82 30       	cpi	r24, 0x02	; 2
    1168:	91 05       	cpc	r25, r1
    116a:	34 f4       	brge	.+12     	; 0x1178 <DIO_u8readpinvalue+0x3c>
    116c:	2c 81       	ldd	r18, Y+4	; 0x04
    116e:	3d 81       	ldd	r19, Y+5	; 0x05
    1170:	21 15       	cp	r18, r1
    1172:	31 05       	cpc	r19, r1
    1174:	71 f0       	breq	.+28     	; 0x1192 <DIO_u8readpinvalue+0x56>
    1176:	85 c0       	rjmp	.+266    	; 0x1282 <DIO_u8readpinvalue+0x146>
    1178:	4c 81       	ldd	r20, Y+4	; 0x04
    117a:	5d 81       	ldd	r21, Y+5	; 0x05
    117c:	42 30       	cpi	r20, 0x02	; 2
    117e:	51 05       	cpc	r21, r1
    1180:	09 f4       	brne	.+2      	; 0x1184 <DIO_u8readpinvalue+0x48>
    1182:	43 c0       	rjmp	.+134    	; 0x120a <DIO_u8readpinvalue+0xce>
    1184:	8c 81       	ldd	r24, Y+4	; 0x04
    1186:	9d 81       	ldd	r25, Y+5	; 0x05
    1188:	83 30       	cpi	r24, 0x03	; 3
    118a:	91 05       	cpc	r25, r1
    118c:	09 f4       	brne	.+2      	; 0x1190 <DIO_u8readpinvalue+0x54>
    118e:	5b c0       	rjmp	.+182    	; 0x1246 <DIO_u8readpinvalue+0x10a>
    1190:	78 c0       	rjmp	.+240    	; 0x1282 <DIO_u8readpinvalue+0x146>
	{
	case 0 :
		return get_bit (PINA,pin);
    1192:	e9 e3       	ldi	r30, 0x39	; 57
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	80 81       	ld	r24, Z
    1198:	48 2f       	mov	r20, r24
    119a:	50 e0       	ldi	r21, 0x00	; 0
    119c:	8a 81       	ldd	r24, Y+2	; 0x02
    119e:	28 2f       	mov	r18, r24
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <DIO_u8readpinvalue+0x70>
    11a8:	88 0f       	add	r24, r24
    11aa:	99 1f       	adc	r25, r25
    11ac:	2a 95       	dec	r18
    11ae:	e2 f7       	brpl	.-8      	; 0x11a8 <DIO_u8readpinvalue+0x6c>
    11b0:	9a 01       	movw	r18, r20
    11b2:	28 23       	and	r18, r24
    11b4:	39 23       	and	r19, r25
    11b6:	8a 81       	ldd	r24, Y+2	; 0x02
    11b8:	88 2f       	mov	r24, r24
    11ba:	90 e0       	ldi	r25, 0x00	; 0
    11bc:	a9 01       	movw	r20, r18
    11be:	02 c0       	rjmp	.+4      	; 0x11c4 <DIO_u8readpinvalue+0x88>
    11c0:	55 95       	asr	r21
    11c2:	47 95       	ror	r20
    11c4:	8a 95       	dec	r24
    11c6:	e2 f7       	brpl	.-8      	; 0x11c0 <DIO_u8readpinvalue+0x84>
    11c8:	ca 01       	movw	r24, r20
    11ca:	8b 83       	std	Y+3, r24	; 0x03
    11cc:	5c c0       	rjmp	.+184    	; 0x1286 <DIO_u8readpinvalue+0x14a>
		break;
	case 1 :
		return get_bit (PINB,pin);
    11ce:	e6 e3       	ldi	r30, 0x36	; 54
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 81       	ld	r24, Z
    11d4:	48 2f       	mov	r20, r24
    11d6:	50 e0       	ldi	r21, 0x00	; 0
    11d8:	8a 81       	ldd	r24, Y+2	; 0x02
    11da:	28 2f       	mov	r18, r24
    11dc:	30 e0       	ldi	r19, 0x00	; 0
    11de:	81 e0       	ldi	r24, 0x01	; 1
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <DIO_u8readpinvalue+0xac>
    11e4:	88 0f       	add	r24, r24
    11e6:	99 1f       	adc	r25, r25
    11e8:	2a 95       	dec	r18
    11ea:	e2 f7       	brpl	.-8      	; 0x11e4 <DIO_u8readpinvalue+0xa8>
    11ec:	9a 01       	movw	r18, r20
    11ee:	28 23       	and	r18, r24
    11f0:	39 23       	and	r19, r25
    11f2:	8a 81       	ldd	r24, Y+2	; 0x02
    11f4:	88 2f       	mov	r24, r24
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	a9 01       	movw	r20, r18
    11fa:	02 c0       	rjmp	.+4      	; 0x1200 <DIO_u8readpinvalue+0xc4>
    11fc:	55 95       	asr	r21
    11fe:	47 95       	ror	r20
    1200:	8a 95       	dec	r24
    1202:	e2 f7       	brpl	.-8      	; 0x11fc <DIO_u8readpinvalue+0xc0>
    1204:	ca 01       	movw	r24, r20
    1206:	8b 83       	std	Y+3, r24	; 0x03
    1208:	3e c0       	rjmp	.+124    	; 0x1286 <DIO_u8readpinvalue+0x14a>
		break;
	case 2 :
		return get_bit (PINC,pin);
    120a:	e3 e3       	ldi	r30, 0x33	; 51
    120c:	f0 e0       	ldi	r31, 0x00	; 0
    120e:	80 81       	ld	r24, Z
    1210:	48 2f       	mov	r20, r24
    1212:	50 e0       	ldi	r21, 0x00	; 0
    1214:	8a 81       	ldd	r24, Y+2	; 0x02
    1216:	28 2f       	mov	r18, r24
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <DIO_u8readpinvalue+0xe8>
    1220:	88 0f       	add	r24, r24
    1222:	99 1f       	adc	r25, r25
    1224:	2a 95       	dec	r18
    1226:	e2 f7       	brpl	.-8      	; 0x1220 <DIO_u8readpinvalue+0xe4>
    1228:	9a 01       	movw	r18, r20
    122a:	28 23       	and	r18, r24
    122c:	39 23       	and	r19, r25
    122e:	8a 81       	ldd	r24, Y+2	; 0x02
    1230:	88 2f       	mov	r24, r24
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	a9 01       	movw	r20, r18
    1236:	02 c0       	rjmp	.+4      	; 0x123c <DIO_u8readpinvalue+0x100>
    1238:	55 95       	asr	r21
    123a:	47 95       	ror	r20
    123c:	8a 95       	dec	r24
    123e:	e2 f7       	brpl	.-8      	; 0x1238 <DIO_u8readpinvalue+0xfc>
    1240:	ca 01       	movw	r24, r20
    1242:	8b 83       	std	Y+3, r24	; 0x03
    1244:	20 c0       	rjmp	.+64     	; 0x1286 <DIO_u8readpinvalue+0x14a>
		break;
	case 3 :
		return  get_bit (PIND,pin);
    1246:	e0 e3       	ldi	r30, 0x30	; 48
    1248:	f0 e0       	ldi	r31, 0x00	; 0
    124a:	80 81       	ld	r24, Z
    124c:	48 2f       	mov	r20, r24
    124e:	50 e0       	ldi	r21, 0x00	; 0
    1250:	8a 81       	ldd	r24, Y+2	; 0x02
    1252:	28 2f       	mov	r18, r24
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <DIO_u8readpinvalue+0x124>
    125c:	88 0f       	add	r24, r24
    125e:	99 1f       	adc	r25, r25
    1260:	2a 95       	dec	r18
    1262:	e2 f7       	brpl	.-8      	; 0x125c <DIO_u8readpinvalue+0x120>
    1264:	9a 01       	movw	r18, r20
    1266:	28 23       	and	r18, r24
    1268:	39 23       	and	r19, r25
    126a:	8a 81       	ldd	r24, Y+2	; 0x02
    126c:	88 2f       	mov	r24, r24
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	a9 01       	movw	r20, r18
    1272:	02 c0       	rjmp	.+4      	; 0x1278 <DIO_u8readpinvalue+0x13c>
    1274:	55 95       	asr	r21
    1276:	47 95       	ror	r20
    1278:	8a 95       	dec	r24
    127a:	e2 f7       	brpl	.-8      	; 0x1274 <DIO_u8readpinvalue+0x138>
    127c:	ca 01       	movw	r24, r20
    127e:	8b 83       	std	Y+3, r24	; 0x03
    1280:	02 c0       	rjmp	.+4      	; 0x1286 <DIO_u8readpinvalue+0x14a>
	break;
	default :
		return 2;
    1282:	52 e0       	ldi	r21, 0x02	; 2
    1284:	5b 83       	std	Y+3, r21	; 0x03
    1286:	8b 81       	ldd	r24, Y+3	; 0x03
	}
}
    1288:	0f 90       	pop	r0
    128a:	0f 90       	pop	r0
    128c:	0f 90       	pop	r0
    128e:	0f 90       	pop	r0
    1290:	0f 90       	pop	r0
    1292:	cf 91       	pop	r28
    1294:	df 91       	pop	r29
    1296:	08 95       	ret

00001298 <DIO_vidsetportdir>:
	extern void DIO_vidsetportdir(u8 port,  u8 dir)
	{
    1298:	df 93       	push	r29
    129a:	cf 93       	push	r28
    129c:	00 d0       	rcall	.+0      	; 0x129e <DIO_vidsetportdir+0x6>
    129e:	00 d0       	rcall	.+0      	; 0x12a0 <DIO_vidsetportdir+0x8>
    12a0:	cd b7       	in	r28, 0x3d	; 61
    12a2:	de b7       	in	r29, 0x3e	; 62
    12a4:	89 83       	std	Y+1, r24	; 0x01
    12a6:	6a 83       	std	Y+2, r22	; 0x02
		switch (port)
    12a8:	89 81       	ldd	r24, Y+1	; 0x01
    12aa:	28 2f       	mov	r18, r24
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	3c 83       	std	Y+4, r19	; 0x04
    12b0:	2b 83       	std	Y+3, r18	; 0x03
    12b2:	8b 81       	ldd	r24, Y+3	; 0x03
    12b4:	9c 81       	ldd	r25, Y+4	; 0x04
    12b6:	81 30       	cpi	r24, 0x01	; 1
    12b8:	91 05       	cpc	r25, r1
    12ba:	d1 f0       	breq	.+52     	; 0x12f0 <DIO_vidsetportdir+0x58>
    12bc:	2b 81       	ldd	r18, Y+3	; 0x03
    12be:	3c 81       	ldd	r19, Y+4	; 0x04
    12c0:	22 30       	cpi	r18, 0x02	; 2
    12c2:	31 05       	cpc	r19, r1
    12c4:	2c f4       	brge	.+10     	; 0x12d0 <DIO_vidsetportdir+0x38>
    12c6:	8b 81       	ldd	r24, Y+3	; 0x03
    12c8:	9c 81       	ldd	r25, Y+4	; 0x04
    12ca:	00 97       	sbiw	r24, 0x00	; 0
    12cc:	61 f0       	breq	.+24     	; 0x12e6 <DIO_vidsetportdir+0x4e>
    12ce:	1e c0       	rjmp	.+60     	; 0x130c <DIO_vidsetportdir+0x74>
    12d0:	2b 81       	ldd	r18, Y+3	; 0x03
    12d2:	3c 81       	ldd	r19, Y+4	; 0x04
    12d4:	22 30       	cpi	r18, 0x02	; 2
    12d6:	31 05       	cpc	r19, r1
    12d8:	81 f0       	breq	.+32     	; 0x12fa <DIO_vidsetportdir+0x62>
    12da:	8b 81       	ldd	r24, Y+3	; 0x03
    12dc:	9c 81       	ldd	r25, Y+4	; 0x04
    12de:	83 30       	cpi	r24, 0x03	; 3
    12e0:	91 05       	cpc	r25, r1
    12e2:	81 f0       	breq	.+32     	; 0x1304 <DIO_vidsetportdir+0x6c>
    12e4:	13 c0       	rjmp	.+38     	; 0x130c <DIO_vidsetportdir+0x74>
		{
		case 0:
			DDRA=dir;
    12e6:	ea e3       	ldi	r30, 0x3A	; 58
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	8a 81       	ldd	r24, Y+2	; 0x02
    12ec:	80 83       	st	Z, r24
    12ee:	0e c0       	rjmp	.+28     	; 0x130c <DIO_vidsetportdir+0x74>
			break;
		case 1:
			DDRB=dir;
    12f0:	e7 e3       	ldi	r30, 0x37	; 55
    12f2:	f0 e0       	ldi	r31, 0x00	; 0
    12f4:	8a 81       	ldd	r24, Y+2	; 0x02
    12f6:	80 83       	st	Z, r24
    12f8:	09 c0       	rjmp	.+18     	; 0x130c <DIO_vidsetportdir+0x74>
			break;
		case 2:
			DDRC=dir;
    12fa:	e4 e3       	ldi	r30, 0x34	; 52
    12fc:	f0 e0       	ldi	r31, 0x00	; 0
    12fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1300:	80 83       	st	Z, r24
    1302:	04 c0       	rjmp	.+8      	; 0x130c <DIO_vidsetportdir+0x74>
			break;
		case 3:
			DDRD=dir;
    1304:	e1 e3       	ldi	r30, 0x31	; 49
    1306:	f0 e0       	ldi	r31, 0x00	; 0
    1308:	8a 81       	ldd	r24, Y+2	; 0x02
    130a:	80 83       	st	Z, r24
			break;
		}
	}
    130c:	0f 90       	pop	r0
    130e:	0f 90       	pop	r0
    1310:	0f 90       	pop	r0
    1312:	0f 90       	pop	r0
    1314:	cf 91       	pop	r28
    1316:	df 91       	pop	r29
    1318:	08 95       	ret

0000131a <DIO_vidwriteportvalues>:
	extern void DIO_vidwriteportvalues(u8 port, u8 value)
	{
    131a:	df 93       	push	r29
    131c:	cf 93       	push	r28
    131e:	00 d0       	rcall	.+0      	; 0x1320 <DIO_vidwriteportvalues+0x6>
    1320:	00 d0       	rcall	.+0      	; 0x1322 <DIO_vidwriteportvalues+0x8>
    1322:	cd b7       	in	r28, 0x3d	; 61
    1324:	de b7       	in	r29, 0x3e	; 62
    1326:	89 83       	std	Y+1, r24	; 0x01
    1328:	6a 83       	std	Y+2, r22	; 0x02
		switch (port)
    132a:	89 81       	ldd	r24, Y+1	; 0x01
    132c:	28 2f       	mov	r18, r24
    132e:	30 e0       	ldi	r19, 0x00	; 0
    1330:	3c 83       	std	Y+4, r19	; 0x04
    1332:	2b 83       	std	Y+3, r18	; 0x03
    1334:	8b 81       	ldd	r24, Y+3	; 0x03
    1336:	9c 81       	ldd	r25, Y+4	; 0x04
    1338:	81 30       	cpi	r24, 0x01	; 1
    133a:	91 05       	cpc	r25, r1
    133c:	d1 f0       	breq	.+52     	; 0x1372 <DIO_vidwriteportvalues+0x58>
    133e:	2b 81       	ldd	r18, Y+3	; 0x03
    1340:	3c 81       	ldd	r19, Y+4	; 0x04
    1342:	22 30       	cpi	r18, 0x02	; 2
    1344:	31 05       	cpc	r19, r1
    1346:	2c f4       	brge	.+10     	; 0x1352 <DIO_vidwriteportvalues+0x38>
    1348:	8b 81       	ldd	r24, Y+3	; 0x03
    134a:	9c 81       	ldd	r25, Y+4	; 0x04
    134c:	00 97       	sbiw	r24, 0x00	; 0
    134e:	61 f0       	breq	.+24     	; 0x1368 <DIO_vidwriteportvalues+0x4e>
    1350:	1e c0       	rjmp	.+60     	; 0x138e <DIO_vidwriteportvalues+0x74>
    1352:	2b 81       	ldd	r18, Y+3	; 0x03
    1354:	3c 81       	ldd	r19, Y+4	; 0x04
    1356:	22 30       	cpi	r18, 0x02	; 2
    1358:	31 05       	cpc	r19, r1
    135a:	81 f0       	breq	.+32     	; 0x137c <DIO_vidwriteportvalues+0x62>
    135c:	8b 81       	ldd	r24, Y+3	; 0x03
    135e:	9c 81       	ldd	r25, Y+4	; 0x04
    1360:	83 30       	cpi	r24, 0x03	; 3
    1362:	91 05       	cpc	r25, r1
    1364:	81 f0       	breq	.+32     	; 0x1386 <DIO_vidwriteportvalues+0x6c>
    1366:	13 c0       	rjmp	.+38     	; 0x138e <DIO_vidwriteportvalues+0x74>
		{
		case 0:
			PORTA=value;
    1368:	eb e3       	ldi	r30, 0x3B	; 59
    136a:	f0 e0       	ldi	r31, 0x00	; 0
    136c:	8a 81       	ldd	r24, Y+2	; 0x02
    136e:	80 83       	st	Z, r24
    1370:	0e c0       	rjmp	.+28     	; 0x138e <DIO_vidwriteportvalues+0x74>
			break;
		case 1:
			PORTB=value;
    1372:	e8 e3       	ldi	r30, 0x38	; 56
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	8a 81       	ldd	r24, Y+2	; 0x02
    1378:	80 83       	st	Z, r24
    137a:	09 c0       	rjmp	.+18     	; 0x138e <DIO_vidwriteportvalues+0x74>
			break;
		case 2:
			PORTC=value;
    137c:	e5 e3       	ldi	r30, 0x35	; 53
    137e:	f0 e0       	ldi	r31, 0x00	; 0
    1380:	8a 81       	ldd	r24, Y+2	; 0x02
    1382:	80 83       	st	Z, r24
    1384:	04 c0       	rjmp	.+8      	; 0x138e <DIO_vidwriteportvalues+0x74>
			break;

		case 3:
			PORTD=value;
    1386:	e2 e3       	ldi	r30, 0x32	; 50
    1388:	f0 e0       	ldi	r31, 0x00	; 0
    138a:	8a 81       	ldd	r24, Y+2	; 0x02
    138c:	80 83       	st	Z, r24
			break;

		}
	}
    138e:	0f 90       	pop	r0
    1390:	0f 90       	pop	r0
    1392:	0f 90       	pop	r0
    1394:	0f 90       	pop	r0
    1396:	cf 91       	pop	r28
    1398:	df 91       	pop	r29
    139a:	08 95       	ret

0000139c <LCD_vidwritecommand>:
#include "LCD.h"
#include <avr/delay.h>
#define f_cpu 8000000

extern void LCD_vidwritecommand (u8 command)
{
    139c:	df 93       	push	r29
    139e:	cf 93       	push	r28
    13a0:	cd b7       	in	r28, 0x3d	; 61
    13a2:	de b7       	in	r29, 0x3e	; 62
    13a4:	2f 97       	sbiw	r28, 0x0f	; 15
    13a6:	0f b6       	in	r0, 0x3f	; 63
    13a8:	f8 94       	cli
    13aa:	de bf       	out	0x3e, r29	; 62
    13ac:	0f be       	out	0x3f, r0	; 63
    13ae:	cd bf       	out	0x3d, r28	; 61
    13b0:	8f 87       	std	Y+15, r24	; 0x0f
	//RW=0
	DIO_vidwritepinvalue (control_port,RW,low);
    13b2:	82 e0       	ldi	r24, 0x02	; 2
    13b4:	61 e0       	ldi	r22, 0x01	; 1
    13b6:	40 e0       	ldi	r20, 0x00	; 0
    13b8:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
	//RS=0
	DIO_vidwritepinvalue (control_port,RS,low);
    13bc:	82 e0       	ldi	r24, 0x02	; 2
    13be:	60 e0       	ldi	r22, 0x00	; 0
    13c0:	40 e0       	ldi	r20, 0x00	; 0
    13c2:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
	//Data
	DIO_vidwriteportvalues(data_port,command);
    13c6:	8f 85       	ldd	r24, Y+15	; 0x0f
    13c8:	28 2f       	mov	r18, r24
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	83 e0       	ldi	r24, 0x03	; 3
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	b9 01       	movw	r22, r18
    13d2:	0e 94 8d 09 	call	0x131a	; 0x131a <DIO_vidwriteportvalues>
	//start execution E=1
	DIO_vidwritepinvalue(control_port,E,high);
    13d6:	82 e0       	ldi	r24, 0x02	; 2
    13d8:	62 e0       	ldi	r22, 0x02	; 2
    13da:	41 e0       	ldi	r20, 0x01	; 1
    13dc:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
    13e0:	80 e0       	ldi	r24, 0x00	; 0
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	a0 e0       	ldi	r26, 0x00	; 0
    13e6:	b0 e4       	ldi	r27, 0x40	; 64
    13e8:	8b 87       	std	Y+11, r24	; 0x0b
    13ea:	9c 87       	std	Y+12, r25	; 0x0c
    13ec:	ad 87       	std	Y+13, r26	; 0x0d
    13ee:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13f0:	6b 85       	ldd	r22, Y+11	; 0x0b
    13f2:	7c 85       	ldd	r23, Y+12	; 0x0c
    13f4:	8d 85       	ldd	r24, Y+13	; 0x0d
    13f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    13f8:	20 e0       	ldi	r18, 0x00	; 0
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	4a ef       	ldi	r20, 0xFA	; 250
    13fe:	54 e4       	ldi	r21, 0x44	; 68
    1400:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1404:	dc 01       	movw	r26, r24
    1406:	cb 01       	movw	r24, r22
    1408:	8f 83       	std	Y+7, r24	; 0x07
    140a:	98 87       	std	Y+8, r25	; 0x08
    140c:	a9 87       	std	Y+9, r26	; 0x09
    140e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1410:	6f 81       	ldd	r22, Y+7	; 0x07
    1412:	78 85       	ldd	r23, Y+8	; 0x08
    1414:	89 85       	ldd	r24, Y+9	; 0x09
    1416:	9a 85       	ldd	r25, Y+10	; 0x0a
    1418:	20 e0       	ldi	r18, 0x00	; 0
    141a:	30 e0       	ldi	r19, 0x00	; 0
    141c:	40 e8       	ldi	r20, 0x80	; 128
    141e:	5f e3       	ldi	r21, 0x3F	; 63
    1420:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1424:	88 23       	and	r24, r24
    1426:	2c f4       	brge	.+10     	; 0x1432 <LCD_vidwritecommand+0x96>
		__ticks = 1;
    1428:	81 e0       	ldi	r24, 0x01	; 1
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	9e 83       	std	Y+6, r25	; 0x06
    142e:	8d 83       	std	Y+5, r24	; 0x05
    1430:	3f c0       	rjmp	.+126    	; 0x14b0 <LCD_vidwritecommand+0x114>
	else if (__tmp > 65535)
    1432:	6f 81       	ldd	r22, Y+7	; 0x07
    1434:	78 85       	ldd	r23, Y+8	; 0x08
    1436:	89 85       	ldd	r24, Y+9	; 0x09
    1438:	9a 85       	ldd	r25, Y+10	; 0x0a
    143a:	20 e0       	ldi	r18, 0x00	; 0
    143c:	3f ef       	ldi	r19, 0xFF	; 255
    143e:	4f e7       	ldi	r20, 0x7F	; 127
    1440:	57 e4       	ldi	r21, 0x47	; 71
    1442:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1446:	18 16       	cp	r1, r24
    1448:	4c f5       	brge	.+82     	; 0x149c <LCD_vidwritecommand+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    144a:	6b 85       	ldd	r22, Y+11	; 0x0b
    144c:	7c 85       	ldd	r23, Y+12	; 0x0c
    144e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1450:	9e 85       	ldd	r25, Y+14	; 0x0e
    1452:	20 e0       	ldi	r18, 0x00	; 0
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	40 e2       	ldi	r20, 0x20	; 32
    1458:	51 e4       	ldi	r21, 0x41	; 65
    145a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    145e:	dc 01       	movw	r26, r24
    1460:	cb 01       	movw	r24, r22
    1462:	bc 01       	movw	r22, r24
    1464:	cd 01       	movw	r24, r26
    1466:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    146a:	dc 01       	movw	r26, r24
    146c:	cb 01       	movw	r24, r22
    146e:	9e 83       	std	Y+6, r25	; 0x06
    1470:	8d 83       	std	Y+5, r24	; 0x05
    1472:	0f c0       	rjmp	.+30     	; 0x1492 <LCD_vidwritecommand+0xf6>
    1474:	88 ec       	ldi	r24, 0xC8	; 200
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	9c 83       	std	Y+4, r25	; 0x04
    147a:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    147c:	8b 81       	ldd	r24, Y+3	; 0x03
    147e:	9c 81       	ldd	r25, Y+4	; 0x04
    1480:	01 97       	sbiw	r24, 0x01	; 1
    1482:	f1 f7       	brne	.-4      	; 0x1480 <LCD_vidwritecommand+0xe4>
    1484:	9c 83       	std	Y+4, r25	; 0x04
    1486:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1488:	8d 81       	ldd	r24, Y+5	; 0x05
    148a:	9e 81       	ldd	r25, Y+6	; 0x06
    148c:	01 97       	sbiw	r24, 0x01	; 1
    148e:	9e 83       	std	Y+6, r25	; 0x06
    1490:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1492:	8d 81       	ldd	r24, Y+5	; 0x05
    1494:	9e 81       	ldd	r25, Y+6	; 0x06
    1496:	00 97       	sbiw	r24, 0x00	; 0
    1498:	69 f7       	brne	.-38     	; 0x1474 <LCD_vidwritecommand+0xd8>
    149a:	14 c0       	rjmp	.+40     	; 0x14c4 <LCD_vidwritecommand+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    149c:	6f 81       	ldd	r22, Y+7	; 0x07
    149e:	78 85       	ldd	r23, Y+8	; 0x08
    14a0:	89 85       	ldd	r24, Y+9	; 0x09
    14a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    14a4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    14a8:	dc 01       	movw	r26, r24
    14aa:	cb 01       	movw	r24, r22
    14ac:	9e 83       	std	Y+6, r25	; 0x06
    14ae:	8d 83       	std	Y+5, r24	; 0x05
    14b0:	8d 81       	ldd	r24, Y+5	; 0x05
    14b2:	9e 81       	ldd	r25, Y+6	; 0x06
    14b4:	9a 83       	std	Y+2, r25	; 0x02
    14b6:	89 83       	std	Y+1, r24	; 0x01
    14b8:	89 81       	ldd	r24, Y+1	; 0x01
    14ba:	9a 81       	ldd	r25, Y+2	; 0x02
    14bc:	01 97       	sbiw	r24, 0x01	; 1
    14be:	f1 f7       	brne	.-4      	; 0x14bc <LCD_vidwritecommand+0x120>
    14c0:	9a 83       	std	Y+2, r25	; 0x02
    14c2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_vidwritepinvalue(control_port,E,low);
    14c4:	82 e0       	ldi	r24, 0x02	; 2
    14c6:	62 e0       	ldi	r22, 0x02	; 2
    14c8:	40 e0       	ldi	r20, 0x00	; 0
    14ca:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
}
    14ce:	2f 96       	adiw	r28, 0x0f	; 15
    14d0:	0f b6       	in	r0, 0x3f	; 63
    14d2:	f8 94       	cli
    14d4:	de bf       	out	0x3e, r29	; 62
    14d6:	0f be       	out	0x3f, r0	; 63
    14d8:	cd bf       	out	0x3d, r28	; 61
    14da:	cf 91       	pop	r28
    14dc:	df 91       	pop	r29
    14de:	08 95       	ret

000014e0 <LCD_vidwritedata>:
extern void LCD_vidwritedata (u8 data)
{
    14e0:	df 93       	push	r29
    14e2:	cf 93       	push	r28
    14e4:	cd b7       	in	r28, 0x3d	; 61
    14e6:	de b7       	in	r29, 0x3e	; 62
    14e8:	2f 97       	sbiw	r28, 0x0f	; 15
    14ea:	0f b6       	in	r0, 0x3f	; 63
    14ec:	f8 94       	cli
    14ee:	de bf       	out	0x3e, r29	; 62
    14f0:	0f be       	out	0x3f, r0	; 63
    14f2:	cd bf       	out	0x3d, r28	; 61
    14f4:	8f 87       	std	Y+15, r24	; 0x0f
	//RW=0
	DIO_vidwritepinvalue (control_port,RW,low);
    14f6:	82 e0       	ldi	r24, 0x02	; 2
    14f8:	61 e0       	ldi	r22, 0x01	; 1
    14fa:	40 e0       	ldi	r20, 0x00	; 0
    14fc:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
	//RS=0
	DIO_vidwritepinvalue (control_port,RS,high);
    1500:	82 e0       	ldi	r24, 0x02	; 2
    1502:	60 e0       	ldi	r22, 0x00	; 0
    1504:	41 e0       	ldi	r20, 0x01	; 1
    1506:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
	//Data
	DIO_vidwriteportvalues (data_port,data);
    150a:	8f 85       	ldd	r24, Y+15	; 0x0f
    150c:	28 2f       	mov	r18, r24
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	83 e0       	ldi	r24, 0x03	; 3
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	b9 01       	movw	r22, r18
    1516:	0e 94 8d 09 	call	0x131a	; 0x131a <DIO_vidwriteportvalues>
	//start execution E=1
	DIO_vidwritepinvalue(control_port,E,high);
    151a:	82 e0       	ldi	r24, 0x02	; 2
    151c:	62 e0       	ldi	r22, 0x02	; 2
    151e:	41 e0       	ldi	r20, 0x01	; 1
    1520:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
    1524:	80 e0       	ldi	r24, 0x00	; 0
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	a0 e0       	ldi	r26, 0x00	; 0
    152a:	b0 e4       	ldi	r27, 0x40	; 64
    152c:	8b 87       	std	Y+11, r24	; 0x0b
    152e:	9c 87       	std	Y+12, r25	; 0x0c
    1530:	ad 87       	std	Y+13, r26	; 0x0d
    1532:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1534:	6b 85       	ldd	r22, Y+11	; 0x0b
    1536:	7c 85       	ldd	r23, Y+12	; 0x0c
    1538:	8d 85       	ldd	r24, Y+13	; 0x0d
    153a:	9e 85       	ldd	r25, Y+14	; 0x0e
    153c:	20 e0       	ldi	r18, 0x00	; 0
    153e:	30 e0       	ldi	r19, 0x00	; 0
    1540:	4a ef       	ldi	r20, 0xFA	; 250
    1542:	54 e4       	ldi	r21, 0x44	; 68
    1544:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1548:	dc 01       	movw	r26, r24
    154a:	cb 01       	movw	r24, r22
    154c:	8f 83       	std	Y+7, r24	; 0x07
    154e:	98 87       	std	Y+8, r25	; 0x08
    1550:	a9 87       	std	Y+9, r26	; 0x09
    1552:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1554:	6f 81       	ldd	r22, Y+7	; 0x07
    1556:	78 85       	ldd	r23, Y+8	; 0x08
    1558:	89 85       	ldd	r24, Y+9	; 0x09
    155a:	9a 85       	ldd	r25, Y+10	; 0x0a
    155c:	20 e0       	ldi	r18, 0x00	; 0
    155e:	30 e0       	ldi	r19, 0x00	; 0
    1560:	40 e8       	ldi	r20, 0x80	; 128
    1562:	5f e3       	ldi	r21, 0x3F	; 63
    1564:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1568:	88 23       	and	r24, r24
    156a:	2c f4       	brge	.+10     	; 0x1576 <LCD_vidwritedata+0x96>
		__ticks = 1;
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	9e 83       	std	Y+6, r25	; 0x06
    1572:	8d 83       	std	Y+5, r24	; 0x05
    1574:	3f c0       	rjmp	.+126    	; 0x15f4 <LCD_vidwritedata+0x114>
	else if (__tmp > 65535)
    1576:	6f 81       	ldd	r22, Y+7	; 0x07
    1578:	78 85       	ldd	r23, Y+8	; 0x08
    157a:	89 85       	ldd	r24, Y+9	; 0x09
    157c:	9a 85       	ldd	r25, Y+10	; 0x0a
    157e:	20 e0       	ldi	r18, 0x00	; 0
    1580:	3f ef       	ldi	r19, 0xFF	; 255
    1582:	4f e7       	ldi	r20, 0x7F	; 127
    1584:	57 e4       	ldi	r21, 0x47	; 71
    1586:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    158a:	18 16       	cp	r1, r24
    158c:	4c f5       	brge	.+82     	; 0x15e0 <LCD_vidwritedata+0x100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    158e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1590:	7c 85       	ldd	r23, Y+12	; 0x0c
    1592:	8d 85       	ldd	r24, Y+13	; 0x0d
    1594:	9e 85       	ldd	r25, Y+14	; 0x0e
    1596:	20 e0       	ldi	r18, 0x00	; 0
    1598:	30 e0       	ldi	r19, 0x00	; 0
    159a:	40 e2       	ldi	r20, 0x20	; 32
    159c:	51 e4       	ldi	r21, 0x41	; 65
    159e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15a2:	dc 01       	movw	r26, r24
    15a4:	cb 01       	movw	r24, r22
    15a6:	bc 01       	movw	r22, r24
    15a8:	cd 01       	movw	r24, r26
    15aa:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15ae:	dc 01       	movw	r26, r24
    15b0:	cb 01       	movw	r24, r22
    15b2:	9e 83       	std	Y+6, r25	; 0x06
    15b4:	8d 83       	std	Y+5, r24	; 0x05
    15b6:	0f c0       	rjmp	.+30     	; 0x15d6 <LCD_vidwritedata+0xf6>
    15b8:	88 ec       	ldi	r24, 0xC8	; 200
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	9c 83       	std	Y+4, r25	; 0x04
    15be:	8b 83       	std	Y+3, r24	; 0x03
    15c0:	8b 81       	ldd	r24, Y+3	; 0x03
    15c2:	9c 81       	ldd	r25, Y+4	; 0x04
    15c4:	01 97       	sbiw	r24, 0x01	; 1
    15c6:	f1 f7       	brne	.-4      	; 0x15c4 <LCD_vidwritedata+0xe4>
    15c8:	9c 83       	std	Y+4, r25	; 0x04
    15ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15cc:	8d 81       	ldd	r24, Y+5	; 0x05
    15ce:	9e 81       	ldd	r25, Y+6	; 0x06
    15d0:	01 97       	sbiw	r24, 0x01	; 1
    15d2:	9e 83       	std	Y+6, r25	; 0x06
    15d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15d6:	8d 81       	ldd	r24, Y+5	; 0x05
    15d8:	9e 81       	ldd	r25, Y+6	; 0x06
    15da:	00 97       	sbiw	r24, 0x00	; 0
    15dc:	69 f7       	brne	.-38     	; 0x15b8 <LCD_vidwritedata+0xd8>
    15de:	14 c0       	rjmp	.+40     	; 0x1608 <LCD_vidwritedata+0x128>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15e0:	6f 81       	ldd	r22, Y+7	; 0x07
    15e2:	78 85       	ldd	r23, Y+8	; 0x08
    15e4:	89 85       	ldd	r24, Y+9	; 0x09
    15e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    15e8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15ec:	dc 01       	movw	r26, r24
    15ee:	cb 01       	movw	r24, r22
    15f0:	9e 83       	std	Y+6, r25	; 0x06
    15f2:	8d 83       	std	Y+5, r24	; 0x05
    15f4:	8d 81       	ldd	r24, Y+5	; 0x05
    15f6:	9e 81       	ldd	r25, Y+6	; 0x06
    15f8:	9a 83       	std	Y+2, r25	; 0x02
    15fa:	89 83       	std	Y+1, r24	; 0x01
    15fc:	89 81       	ldd	r24, Y+1	; 0x01
    15fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1600:	01 97       	sbiw	r24, 0x01	; 1
    1602:	f1 f7       	brne	.-4      	; 0x1600 <LCD_vidwritedata+0x120>
    1604:	9a 83       	std	Y+2, r25	; 0x02
    1606:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	DIO_vidwritepinvalue(control_port,E,low);
    1608:	82 e0       	ldi	r24, 0x02	; 2
    160a:	62 e0       	ldi	r22, 0x02	; 2
    160c:	40 e0       	ldi	r20, 0x00	; 0
    160e:	0e 94 b0 07 	call	0xf60	; 0xf60 <DIO_vidwritepinvalue>
}
    1612:	2f 96       	adiw	r28, 0x0f	; 15
    1614:	0f b6       	in	r0, 0x3f	; 63
    1616:	f8 94       	cli
    1618:	de bf       	out	0x3e, r29	; 62
    161a:	0f be       	out	0x3f, r0	; 63
    161c:	cd bf       	out	0x3d, r28	; 61
    161e:	cf 91       	pop	r28
    1620:	df 91       	pop	r29
    1622:	08 95       	ret

00001624 <LCD_vidinit>:
extern void LCD_vidinit (void)
{
    1624:	df 93       	push	r29
    1626:	cf 93       	push	r28
    1628:	cd b7       	in	r28, 0x3d	; 61
    162a:	de b7       	in	r29, 0x3e	; 62
    162c:	aa 97       	sbiw	r28, 0x2a	; 42
    162e:	0f b6       	in	r0, 0x3f	; 63
    1630:	f8 94       	cli
    1632:	de bf       	out	0x3e, r29	; 62
    1634:	0f be       	out	0x3f, r0	; 63
    1636:	cd bf       	out	0x3d, r28	; 61
	DIO_vidsetpindir(control_port,RS,output);
    1638:	82 e0       	ldi	r24, 0x02	; 2
    163a:	60 e0       	ldi	r22, 0x00	; 0
    163c:	41 e0       	ldi	r20, 0x01	; 1
    163e:	0e 94 c2 06 	call	0xd84	; 0xd84 <DIO_vidsetpindir>
	DIO_vidsetpindir(control_port,RW ,output);
    1642:	82 e0       	ldi	r24, 0x02	; 2
    1644:	61 e0       	ldi	r22, 0x01	; 1
    1646:	41 e0       	ldi	r20, 0x01	; 1
    1648:	0e 94 c2 06 	call	0xd84	; 0xd84 <DIO_vidsetpindir>
	DIO_vidsetpindir(control_port,E,output);
    164c:	82 e0       	ldi	r24, 0x02	; 2
    164e:	62 e0       	ldi	r22, 0x02	; 2
    1650:	41 e0       	ldi	r20, 0x01	; 1
    1652:	0e 94 c2 06 	call	0xd84	; 0xd84 <DIO_vidsetpindir>
	DIO_vidsetportdir(data_port,0b11111111);
    1656:	83 e0       	ldi	r24, 0x03	; 3
    1658:	6f ef       	ldi	r22, 0xFF	; 255
    165a:	0e 94 4c 09 	call	0x1298	; 0x1298 <DIO_vidsetportdir>
    165e:	80 e0       	ldi	r24, 0x00	; 0
    1660:	90 e0       	ldi	r25, 0x00	; 0
    1662:	a8 e4       	ldi	r26, 0x48	; 72
    1664:	b2 e4       	ldi	r27, 0x42	; 66
    1666:	8f a3       	std	Y+39, r24	; 0x27
    1668:	98 a7       	std	Y+40, r25	; 0x28
    166a:	a9 a7       	std	Y+41, r26	; 0x29
    166c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    166e:	6f a1       	ldd	r22, Y+39	; 0x27
    1670:	78 a5       	ldd	r23, Y+40	; 0x28
    1672:	89 a5       	ldd	r24, Y+41	; 0x29
    1674:	9a a5       	ldd	r25, Y+42	; 0x2a
    1676:	20 e0       	ldi	r18, 0x00	; 0
    1678:	30 e0       	ldi	r19, 0x00	; 0
    167a:	4a ef       	ldi	r20, 0xFA	; 250
    167c:	54 e4       	ldi	r21, 0x44	; 68
    167e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1682:	dc 01       	movw	r26, r24
    1684:	cb 01       	movw	r24, r22
    1686:	8b a3       	std	Y+35, r24	; 0x23
    1688:	9c a3       	std	Y+36, r25	; 0x24
    168a:	ad a3       	std	Y+37, r26	; 0x25
    168c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    168e:	6b a1       	ldd	r22, Y+35	; 0x23
    1690:	7c a1       	ldd	r23, Y+36	; 0x24
    1692:	8d a1       	ldd	r24, Y+37	; 0x25
    1694:	9e a1       	ldd	r25, Y+38	; 0x26
    1696:	20 e0       	ldi	r18, 0x00	; 0
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	40 e8       	ldi	r20, 0x80	; 128
    169c:	5f e3       	ldi	r21, 0x3F	; 63
    169e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    16a2:	88 23       	and	r24, r24
    16a4:	2c f4       	brge	.+10     	; 0x16b0 <LCD_vidinit+0x8c>
		__ticks = 1;
    16a6:	81 e0       	ldi	r24, 0x01	; 1
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	9a a3       	std	Y+34, r25	; 0x22
    16ac:	89 a3       	std	Y+33, r24	; 0x21
    16ae:	3f c0       	rjmp	.+126    	; 0x172e <LCD_vidinit+0x10a>
	else if (__tmp > 65535)
    16b0:	6b a1       	ldd	r22, Y+35	; 0x23
    16b2:	7c a1       	ldd	r23, Y+36	; 0x24
    16b4:	8d a1       	ldd	r24, Y+37	; 0x25
    16b6:	9e a1       	ldd	r25, Y+38	; 0x26
    16b8:	20 e0       	ldi	r18, 0x00	; 0
    16ba:	3f ef       	ldi	r19, 0xFF	; 255
    16bc:	4f e7       	ldi	r20, 0x7F	; 127
    16be:	57 e4       	ldi	r21, 0x47	; 71
    16c0:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    16c4:	18 16       	cp	r1, r24
    16c6:	4c f5       	brge	.+82     	; 0x171a <LCD_vidinit+0xf6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16c8:	6f a1       	ldd	r22, Y+39	; 0x27
    16ca:	78 a5       	ldd	r23, Y+40	; 0x28
    16cc:	89 a5       	ldd	r24, Y+41	; 0x29
    16ce:	9a a5       	ldd	r25, Y+42	; 0x2a
    16d0:	20 e0       	ldi	r18, 0x00	; 0
    16d2:	30 e0       	ldi	r19, 0x00	; 0
    16d4:	40 e2       	ldi	r20, 0x20	; 32
    16d6:	51 e4       	ldi	r21, 0x41	; 65
    16d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    16dc:	dc 01       	movw	r26, r24
    16de:	cb 01       	movw	r24, r22
    16e0:	bc 01       	movw	r22, r24
    16e2:	cd 01       	movw	r24, r26
    16e4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16e8:	dc 01       	movw	r26, r24
    16ea:	cb 01       	movw	r24, r22
    16ec:	9a a3       	std	Y+34, r25	; 0x22
    16ee:	89 a3       	std	Y+33, r24	; 0x21
    16f0:	0f c0       	rjmp	.+30     	; 0x1710 <LCD_vidinit+0xec>
    16f2:	88 ec       	ldi	r24, 0xC8	; 200
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	98 a3       	std	Y+32, r25	; 0x20
    16f8:	8f 8f       	std	Y+31, r24	; 0x1f
    16fa:	8f 8d       	ldd	r24, Y+31	; 0x1f
    16fc:	98 a1       	ldd	r25, Y+32	; 0x20
    16fe:	01 97       	sbiw	r24, 0x01	; 1
    1700:	f1 f7       	brne	.-4      	; 0x16fe <LCD_vidinit+0xda>
    1702:	98 a3       	std	Y+32, r25	; 0x20
    1704:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1706:	89 a1       	ldd	r24, Y+33	; 0x21
    1708:	9a a1       	ldd	r25, Y+34	; 0x22
    170a:	01 97       	sbiw	r24, 0x01	; 1
    170c:	9a a3       	std	Y+34, r25	; 0x22
    170e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1710:	89 a1       	ldd	r24, Y+33	; 0x21
    1712:	9a a1       	ldd	r25, Y+34	; 0x22
    1714:	00 97       	sbiw	r24, 0x00	; 0
    1716:	69 f7       	brne	.-38     	; 0x16f2 <LCD_vidinit+0xce>
    1718:	14 c0       	rjmp	.+40     	; 0x1742 <LCD_vidinit+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    171a:	6b a1       	ldd	r22, Y+35	; 0x23
    171c:	7c a1       	ldd	r23, Y+36	; 0x24
    171e:	8d a1       	ldd	r24, Y+37	; 0x25
    1720:	9e a1       	ldd	r25, Y+38	; 0x26
    1722:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1726:	dc 01       	movw	r26, r24
    1728:	cb 01       	movw	r24, r22
    172a:	9a a3       	std	Y+34, r25	; 0x22
    172c:	89 a3       	std	Y+33, r24	; 0x21
    172e:	89 a1       	ldd	r24, Y+33	; 0x21
    1730:	9a a1       	ldd	r25, Y+34	; 0x22
    1732:	9e 8f       	std	Y+30, r25	; 0x1e
    1734:	8d 8f       	std	Y+29, r24	; 0x1d
    1736:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1738:	9e 8d       	ldd	r25, Y+30	; 0x1e
    173a:	01 97       	sbiw	r24, 0x01	; 1
    173c:	f1 f7       	brne	.-4      	; 0x173a <LCD_vidinit+0x116>
    173e:	9e 8f       	std	Y+30, r25	; 0x1e
    1740:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms (50);
	LCD_vidwritecommand(0b00111100);
    1742:	8c e3       	ldi	r24, 0x3C	; 60
    1744:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
    1748:	80 e0       	ldi	r24, 0x00	; 0
    174a:	90 e0       	ldi	r25, 0x00	; 0
    174c:	a0 e0       	ldi	r26, 0x00	; 0
    174e:	b0 e4       	ldi	r27, 0x40	; 64
    1750:	89 8f       	std	Y+25, r24	; 0x19
    1752:	9a 8f       	std	Y+26, r25	; 0x1a
    1754:	ab 8f       	std	Y+27, r26	; 0x1b
    1756:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1758:	69 8d       	ldd	r22, Y+25	; 0x19
    175a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    175c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    175e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1760:	20 e0       	ldi	r18, 0x00	; 0
    1762:	30 e0       	ldi	r19, 0x00	; 0
    1764:	4a ef       	ldi	r20, 0xFA	; 250
    1766:	54 e4       	ldi	r21, 0x44	; 68
    1768:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    176c:	dc 01       	movw	r26, r24
    176e:	cb 01       	movw	r24, r22
    1770:	8d 8b       	std	Y+21, r24	; 0x15
    1772:	9e 8b       	std	Y+22, r25	; 0x16
    1774:	af 8b       	std	Y+23, r26	; 0x17
    1776:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1778:	6d 89       	ldd	r22, Y+21	; 0x15
    177a:	7e 89       	ldd	r23, Y+22	; 0x16
    177c:	8f 89       	ldd	r24, Y+23	; 0x17
    177e:	98 8d       	ldd	r25, Y+24	; 0x18
    1780:	20 e0       	ldi	r18, 0x00	; 0
    1782:	30 e0       	ldi	r19, 0x00	; 0
    1784:	40 e8       	ldi	r20, 0x80	; 128
    1786:	5f e3       	ldi	r21, 0x3F	; 63
    1788:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    178c:	88 23       	and	r24, r24
    178e:	2c f4       	brge	.+10     	; 0x179a <LCD_vidinit+0x176>
		__ticks = 1;
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	9c 8b       	std	Y+20, r25	; 0x14
    1796:	8b 8b       	std	Y+19, r24	; 0x13
    1798:	3f c0       	rjmp	.+126    	; 0x1818 <LCD_vidinit+0x1f4>
	else if (__tmp > 65535)
    179a:	6d 89       	ldd	r22, Y+21	; 0x15
    179c:	7e 89       	ldd	r23, Y+22	; 0x16
    179e:	8f 89       	ldd	r24, Y+23	; 0x17
    17a0:	98 8d       	ldd	r25, Y+24	; 0x18
    17a2:	20 e0       	ldi	r18, 0x00	; 0
    17a4:	3f ef       	ldi	r19, 0xFF	; 255
    17a6:	4f e7       	ldi	r20, 0x7F	; 127
    17a8:	57 e4       	ldi	r21, 0x47	; 71
    17aa:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    17ae:	18 16       	cp	r1, r24
    17b0:	4c f5       	brge	.+82     	; 0x1804 <LCD_vidinit+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17b2:	69 8d       	ldd	r22, Y+25	; 0x19
    17b4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17ba:	20 e0       	ldi	r18, 0x00	; 0
    17bc:	30 e0       	ldi	r19, 0x00	; 0
    17be:	40 e2       	ldi	r20, 0x20	; 32
    17c0:	51 e4       	ldi	r21, 0x41	; 65
    17c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    17c6:	dc 01       	movw	r26, r24
    17c8:	cb 01       	movw	r24, r22
    17ca:	bc 01       	movw	r22, r24
    17cc:	cd 01       	movw	r24, r26
    17ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    17d2:	dc 01       	movw	r26, r24
    17d4:	cb 01       	movw	r24, r22
    17d6:	9c 8b       	std	Y+20, r25	; 0x14
    17d8:	8b 8b       	std	Y+19, r24	; 0x13
    17da:	0f c0       	rjmp	.+30     	; 0x17fa <LCD_vidinit+0x1d6>
    17dc:	88 ec       	ldi	r24, 0xC8	; 200
    17de:	90 e0       	ldi	r25, 0x00	; 0
    17e0:	9a 8b       	std	Y+18, r25	; 0x12
    17e2:	89 8b       	std	Y+17, r24	; 0x11
    17e4:	89 89       	ldd	r24, Y+17	; 0x11
    17e6:	9a 89       	ldd	r25, Y+18	; 0x12
    17e8:	01 97       	sbiw	r24, 0x01	; 1
    17ea:	f1 f7       	brne	.-4      	; 0x17e8 <LCD_vidinit+0x1c4>
    17ec:	9a 8b       	std	Y+18, r25	; 0x12
    17ee:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17f0:	8b 89       	ldd	r24, Y+19	; 0x13
    17f2:	9c 89       	ldd	r25, Y+20	; 0x14
    17f4:	01 97       	sbiw	r24, 0x01	; 1
    17f6:	9c 8b       	std	Y+20, r25	; 0x14
    17f8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17fa:	8b 89       	ldd	r24, Y+19	; 0x13
    17fc:	9c 89       	ldd	r25, Y+20	; 0x14
    17fe:	00 97       	sbiw	r24, 0x00	; 0
    1800:	69 f7       	brne	.-38     	; 0x17dc <LCD_vidinit+0x1b8>
    1802:	14 c0       	rjmp	.+40     	; 0x182c <LCD_vidinit+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1804:	6d 89       	ldd	r22, Y+21	; 0x15
    1806:	7e 89       	ldd	r23, Y+22	; 0x16
    1808:	8f 89       	ldd	r24, Y+23	; 0x17
    180a:	98 8d       	ldd	r25, Y+24	; 0x18
    180c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22
    1814:	9c 8b       	std	Y+20, r25	; 0x14
    1816:	8b 8b       	std	Y+19, r24	; 0x13
    1818:	8b 89       	ldd	r24, Y+19	; 0x13
    181a:	9c 89       	ldd	r25, Y+20	; 0x14
    181c:	98 8b       	std	Y+16, r25	; 0x10
    181e:	8f 87       	std	Y+15, r24	; 0x0f
    1820:	8f 85       	ldd	r24, Y+15	; 0x0f
    1822:	98 89       	ldd	r25, Y+16	; 0x10
    1824:	01 97       	sbiw	r24, 0x01	; 1
    1826:	f1 f7       	brne	.-4      	; 0x1824 <LCD_vidinit+0x200>
    1828:	98 8b       	std	Y+16, r25	; 0x10
    182a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms (2);
	LCD_vidwritecommand(0b00001110);
    182c:	8e e0       	ldi	r24, 0x0E	; 14
    182e:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
    1832:	80 e0       	ldi	r24, 0x00	; 0
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	a0 e0       	ldi	r26, 0x00	; 0
    1838:	b0 e4       	ldi	r27, 0x40	; 64
    183a:	8b 87       	std	Y+11, r24	; 0x0b
    183c:	9c 87       	std	Y+12, r25	; 0x0c
    183e:	ad 87       	std	Y+13, r26	; 0x0d
    1840:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1842:	6b 85       	ldd	r22, Y+11	; 0x0b
    1844:	7c 85       	ldd	r23, Y+12	; 0x0c
    1846:	8d 85       	ldd	r24, Y+13	; 0x0d
    1848:	9e 85       	ldd	r25, Y+14	; 0x0e
    184a:	20 e0       	ldi	r18, 0x00	; 0
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	4a ef       	ldi	r20, 0xFA	; 250
    1850:	54 e4       	ldi	r21, 0x44	; 68
    1852:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1856:	dc 01       	movw	r26, r24
    1858:	cb 01       	movw	r24, r22
    185a:	8f 83       	std	Y+7, r24	; 0x07
    185c:	98 87       	std	Y+8, r25	; 0x08
    185e:	a9 87       	std	Y+9, r26	; 0x09
    1860:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1862:	6f 81       	ldd	r22, Y+7	; 0x07
    1864:	78 85       	ldd	r23, Y+8	; 0x08
    1866:	89 85       	ldd	r24, Y+9	; 0x09
    1868:	9a 85       	ldd	r25, Y+10	; 0x0a
    186a:	20 e0       	ldi	r18, 0x00	; 0
    186c:	30 e0       	ldi	r19, 0x00	; 0
    186e:	40 e8       	ldi	r20, 0x80	; 128
    1870:	5f e3       	ldi	r21, 0x3F	; 63
    1872:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1876:	88 23       	and	r24, r24
    1878:	2c f4       	brge	.+10     	; 0x1884 <LCD_vidinit+0x260>
		__ticks = 1;
    187a:	81 e0       	ldi	r24, 0x01	; 1
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	9e 83       	std	Y+6, r25	; 0x06
    1880:	8d 83       	std	Y+5, r24	; 0x05
    1882:	3f c0       	rjmp	.+126    	; 0x1902 <LCD_vidinit+0x2de>
	else if (__tmp > 65535)
    1884:	6f 81       	ldd	r22, Y+7	; 0x07
    1886:	78 85       	ldd	r23, Y+8	; 0x08
    1888:	89 85       	ldd	r24, Y+9	; 0x09
    188a:	9a 85       	ldd	r25, Y+10	; 0x0a
    188c:	20 e0       	ldi	r18, 0x00	; 0
    188e:	3f ef       	ldi	r19, 0xFF	; 255
    1890:	4f e7       	ldi	r20, 0x7F	; 127
    1892:	57 e4       	ldi	r21, 0x47	; 71
    1894:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1898:	18 16       	cp	r1, r24
    189a:	4c f5       	brge	.+82     	; 0x18ee <LCD_vidinit+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    189c:	6b 85       	ldd	r22, Y+11	; 0x0b
    189e:	7c 85       	ldd	r23, Y+12	; 0x0c
    18a0:	8d 85       	ldd	r24, Y+13	; 0x0d
    18a2:	9e 85       	ldd	r25, Y+14	; 0x0e
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	30 e0       	ldi	r19, 0x00	; 0
    18a8:	40 e2       	ldi	r20, 0x20	; 32
    18aa:	51 e4       	ldi	r21, 0x41	; 65
    18ac:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    18b0:	dc 01       	movw	r26, r24
    18b2:	cb 01       	movw	r24, r22
    18b4:	bc 01       	movw	r22, r24
    18b6:	cd 01       	movw	r24, r26
    18b8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18bc:	dc 01       	movw	r26, r24
    18be:	cb 01       	movw	r24, r22
    18c0:	9e 83       	std	Y+6, r25	; 0x06
    18c2:	8d 83       	std	Y+5, r24	; 0x05
    18c4:	0f c0       	rjmp	.+30     	; 0x18e4 <LCD_vidinit+0x2c0>
    18c6:	88 ec       	ldi	r24, 0xC8	; 200
    18c8:	90 e0       	ldi	r25, 0x00	; 0
    18ca:	9c 83       	std	Y+4, r25	; 0x04
    18cc:	8b 83       	std	Y+3, r24	; 0x03
    18ce:	8b 81       	ldd	r24, Y+3	; 0x03
    18d0:	9c 81       	ldd	r25, Y+4	; 0x04
    18d2:	01 97       	sbiw	r24, 0x01	; 1
    18d4:	f1 f7       	brne	.-4      	; 0x18d2 <LCD_vidinit+0x2ae>
    18d6:	9c 83       	std	Y+4, r25	; 0x04
    18d8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18da:	8d 81       	ldd	r24, Y+5	; 0x05
    18dc:	9e 81       	ldd	r25, Y+6	; 0x06
    18de:	01 97       	sbiw	r24, 0x01	; 1
    18e0:	9e 83       	std	Y+6, r25	; 0x06
    18e2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18e4:	8d 81       	ldd	r24, Y+5	; 0x05
    18e6:	9e 81       	ldd	r25, Y+6	; 0x06
    18e8:	00 97       	sbiw	r24, 0x00	; 0
    18ea:	69 f7       	brne	.-38     	; 0x18c6 <LCD_vidinit+0x2a2>
    18ec:	14 c0       	rjmp	.+40     	; 0x1916 <LCD_vidinit+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ee:	6f 81       	ldd	r22, Y+7	; 0x07
    18f0:	78 85       	ldd	r23, Y+8	; 0x08
    18f2:	89 85       	ldd	r24, Y+9	; 0x09
    18f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    18f6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18fa:	dc 01       	movw	r26, r24
    18fc:	cb 01       	movw	r24, r22
    18fe:	9e 83       	std	Y+6, r25	; 0x06
    1900:	8d 83       	std	Y+5, r24	; 0x05
    1902:	8d 81       	ldd	r24, Y+5	; 0x05
    1904:	9e 81       	ldd	r25, Y+6	; 0x06
    1906:	9a 83       	std	Y+2, r25	; 0x02
    1908:	89 83       	std	Y+1, r24	; 0x01
    190a:	89 81       	ldd	r24, Y+1	; 0x01
    190c:	9a 81       	ldd	r25, Y+2	; 0x02
    190e:	01 97       	sbiw	r24, 0x01	; 1
    1910:	f1 f7       	brne	.-4      	; 0x190e <LCD_vidinit+0x2ea>
    1912:	9a 83       	std	Y+2, r25	; 0x02
    1914:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms (2);
	LCD_vidwritecommand(0b00000001);
    1916:	81 e0       	ldi	r24, 0x01	; 1
    1918:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
}
    191c:	aa 96       	adiw	r28, 0x2a	; 42
    191e:	0f b6       	in	r0, 0x3f	; 63
    1920:	f8 94       	cli
    1922:	de bf       	out	0x3e, r29	; 62
    1924:	0f be       	out	0x3f, r0	; 63
    1926:	cd bf       	out	0x3d, r28	; 61
    1928:	cf 91       	pop	r28
    192a:	df 91       	pop	r29
    192c:	08 95       	ret

0000192e <LCD_setcursorposition>:
extern void LCD_setcursorposition (u8 line,u8 column)
{
    192e:	df 93       	push	r29
    1930:	cf 93       	push	r28
    1932:	00 d0       	rcall	.+0      	; 0x1934 <LCD_setcursorposition+0x6>
    1934:	00 d0       	rcall	.+0      	; 0x1936 <LCD_setcursorposition+0x8>
    1936:	0f 92       	push	r0
    1938:	cd b7       	in	r28, 0x3d	; 61
    193a:	de b7       	in	r29, 0x3e	; 62
    193c:	8a 83       	std	Y+2, r24	; 0x02
    193e:	6b 83       	std	Y+3, r22	; 0x03
	u8 i=0;
    1940:	19 82       	std	Y+1, r1	; 0x01
	switch (line)
    1942:	8a 81       	ldd	r24, Y+2	; 0x02
    1944:	28 2f       	mov	r18, r24
    1946:	30 e0       	ldi	r19, 0x00	; 0
    1948:	3d 83       	std	Y+5, r19	; 0x05
    194a:	2c 83       	std	Y+4, r18	; 0x04
    194c:	8c 81       	ldd	r24, Y+4	; 0x04
    194e:	9d 81       	ldd	r25, Y+5	; 0x05
    1950:	81 30       	cpi	r24, 0x01	; 1
    1952:	91 05       	cpc	r25, r1
    1954:	31 f0       	breq	.+12     	; 0x1962 <LCD_setcursorposition+0x34>
    1956:	2c 81       	ldd	r18, Y+4	; 0x04
    1958:	3d 81       	ldd	r19, Y+5	; 0x05
    195a:	22 30       	cpi	r18, 0x02	; 2
    195c:	31 05       	cpc	r19, r1
    195e:	b9 f0       	breq	.+46     	; 0x198e <LCD_setcursorposition+0x60>
    1960:	2b c0       	rjmp	.+86     	; 0x19b8 <LCD_setcursorposition+0x8a>
	{
	case line1 :
		LCD_vidwritecommand(0b10000000);
    1962:	80 e8       	ldi	r24, 0x80	; 128
    1964:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    1968:	80 e1       	ldi	r24, 0x10	; 16
    196a:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    196e:	80 e1       	ldi	r24, 0x10	; 16
    1970:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		for (i=0;i<=column;i++)
    1974:	19 82       	std	Y+1, r1	; 0x01
    1976:	06 c0       	rjmp	.+12     	; 0x1984 <LCD_setcursorposition+0x56>
		{
			LCD_vidwritecommand(cursorright);
    1978:	84 e1       	ldi	r24, 0x14	; 20
    197a:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
	{
	case line1 :
		LCD_vidwritecommand(0b10000000);
		LCD_vidwritecommand(cursorleft);
		LCD_vidwritecommand(cursorleft);
		for (i=0;i<=column;i++)
    197e:	89 81       	ldd	r24, Y+1	; 0x01
    1980:	8f 5f       	subi	r24, 0xFF	; 255
    1982:	89 83       	std	Y+1, r24	; 0x01
    1984:	99 81       	ldd	r25, Y+1	; 0x01
    1986:	8b 81       	ldd	r24, Y+3	; 0x03
    1988:	89 17       	cp	r24, r25
    198a:	b0 f7       	brcc	.-20     	; 0x1978 <LCD_setcursorposition+0x4a>
    198c:	15 c0       	rjmp	.+42     	; 0x19b8 <LCD_setcursorposition+0x8a>
			LCD_vidwritecommand(cursorright);
		}
		break;
	case line2 :

		LCD_vidwritecommand(0b10000000|0x40);
    198e:	80 ec       	ldi	r24, 0xC0	; 192
    1990:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    1994:	80 e1       	ldi	r24, 0x10	; 16
    1996:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    199a:	80 e1       	ldi	r24, 0x10	; 16
    199c:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		for (i=0;i<=column;i++)
    19a0:	19 82       	std	Y+1, r1	; 0x01
    19a2:	06 c0       	rjmp	.+12     	; 0x19b0 <LCD_setcursorposition+0x82>
				{
					LCD_vidwritecommand(cursorright);
    19a4:	84 e1       	ldi	r24, 0x14	; 20
    19a6:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
	case line2 :

		LCD_vidwritecommand(0b10000000|0x40);
		LCD_vidwritecommand(cursorleft);
		LCD_vidwritecommand(cursorleft);
		for (i=0;i<=column;i++)
    19aa:	89 81       	ldd	r24, Y+1	; 0x01
    19ac:	8f 5f       	subi	r24, 0xFF	; 255
    19ae:	89 83       	std	Y+1, r24	; 0x01
    19b0:	99 81       	ldd	r25, Y+1	; 0x01
    19b2:	8b 81       	ldd	r24, Y+3	; 0x03
    19b4:	89 17       	cp	r24, r25
    19b6:	b0 f7       	brcc	.-20     	; 0x19a4 <LCD_setcursorposition+0x76>
		break;



	}
}
    19b8:	0f 90       	pop	r0
    19ba:	0f 90       	pop	r0
    19bc:	0f 90       	pop	r0
    19be:	0f 90       	pop	r0
    19c0:	0f 90       	pop	r0
    19c2:	cf 91       	pop	r28
    19c4:	df 91       	pop	r29
    19c6:	08 95       	ret

000019c8 <LCD_vidwritestring>:
extern void LCD_vidwritestring (u8 line,u8 column,u8 string[])
{
    19c8:	df 93       	push	r29
    19ca:	cf 93       	push	r28
    19cc:	cd b7       	in	r28, 0x3d	; 61
    19ce:	de b7       	in	r29, 0x3e	; 62
    19d0:	a1 97       	sbiw	r28, 0x21	; 33
    19d2:	0f b6       	in	r0, 0x3f	; 63
    19d4:	f8 94       	cli
    19d6:	de bf       	out	0x3e, r29	; 62
    19d8:	0f be       	out	0x3f, r0	; 63
    19da:	cd bf       	out	0x3d, r28	; 61
    19dc:	8e 8f       	std	Y+30, r24	; 0x1e
    19de:	6f 8f       	std	Y+31, r22	; 0x1f
    19e0:	59 a3       	std	Y+33, r21	; 0x21
    19e2:	48 a3       	std	Y+32, r20	; 0x20
	u8 i=0;
    19e4:	1d 8e       	std	Y+29, r1	; 0x1d
	LCD_setcursorposition(line,column);
    19e6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    19e8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    19ea:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
    19ee:	80 e0       	ldi	r24, 0x00	; 0
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	a0 e0       	ldi	r26, 0x00	; 0
    19f4:	b0 e4       	ldi	r27, 0x40	; 64
    19f6:	89 8f       	std	Y+25, r24	; 0x19
    19f8:	9a 8f       	std	Y+26, r25	; 0x1a
    19fa:	ab 8f       	std	Y+27, r26	; 0x1b
    19fc:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19fe:	69 8d       	ldd	r22, Y+25	; 0x19
    1a00:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a02:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a04:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a06:	20 e0       	ldi	r18, 0x00	; 0
    1a08:	30 e0       	ldi	r19, 0x00	; 0
    1a0a:	4a ef       	ldi	r20, 0xFA	; 250
    1a0c:	54 e4       	ldi	r21, 0x44	; 68
    1a0e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a12:	dc 01       	movw	r26, r24
    1a14:	cb 01       	movw	r24, r22
    1a16:	8d 8b       	std	Y+21, r24	; 0x15
    1a18:	9e 8b       	std	Y+22, r25	; 0x16
    1a1a:	af 8b       	std	Y+23, r26	; 0x17
    1a1c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1a1e:	6d 89       	ldd	r22, Y+21	; 0x15
    1a20:	7e 89       	ldd	r23, Y+22	; 0x16
    1a22:	8f 89       	ldd	r24, Y+23	; 0x17
    1a24:	98 8d       	ldd	r25, Y+24	; 0x18
    1a26:	20 e0       	ldi	r18, 0x00	; 0
    1a28:	30 e0       	ldi	r19, 0x00	; 0
    1a2a:	40 e8       	ldi	r20, 0x80	; 128
    1a2c:	5f e3       	ldi	r21, 0x3F	; 63
    1a2e:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a32:	88 23       	and	r24, r24
    1a34:	2c f4       	brge	.+10     	; 0x1a40 <LCD_vidwritestring+0x78>
		__ticks = 1;
    1a36:	81 e0       	ldi	r24, 0x01	; 1
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	9c 8b       	std	Y+20, r25	; 0x14
    1a3c:	8b 8b       	std	Y+19, r24	; 0x13
    1a3e:	3f c0       	rjmp	.+126    	; 0x1abe <LCD_vidwritestring+0xf6>
	else if (__tmp > 65535)
    1a40:	6d 89       	ldd	r22, Y+21	; 0x15
    1a42:	7e 89       	ldd	r23, Y+22	; 0x16
    1a44:	8f 89       	ldd	r24, Y+23	; 0x17
    1a46:	98 8d       	ldd	r25, Y+24	; 0x18
    1a48:	20 e0       	ldi	r18, 0x00	; 0
    1a4a:	3f ef       	ldi	r19, 0xFF	; 255
    1a4c:	4f e7       	ldi	r20, 0x7F	; 127
    1a4e:	57 e4       	ldi	r21, 0x47	; 71
    1a50:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a54:	18 16       	cp	r1, r24
    1a56:	4c f5       	brge	.+82     	; 0x1aaa <LCD_vidwritestring+0xe2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a58:	69 8d       	ldd	r22, Y+25	; 0x19
    1a5a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a5c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a5e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a60:	20 e0       	ldi	r18, 0x00	; 0
    1a62:	30 e0       	ldi	r19, 0x00	; 0
    1a64:	40 e2       	ldi	r20, 0x20	; 32
    1a66:	51 e4       	ldi	r21, 0x41	; 65
    1a68:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a6c:	dc 01       	movw	r26, r24
    1a6e:	cb 01       	movw	r24, r22
    1a70:	bc 01       	movw	r22, r24
    1a72:	cd 01       	movw	r24, r26
    1a74:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a78:	dc 01       	movw	r26, r24
    1a7a:	cb 01       	movw	r24, r22
    1a7c:	9c 8b       	std	Y+20, r25	; 0x14
    1a7e:	8b 8b       	std	Y+19, r24	; 0x13
    1a80:	0f c0       	rjmp	.+30     	; 0x1aa0 <LCD_vidwritestring+0xd8>
    1a82:	88 ec       	ldi	r24, 0xC8	; 200
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	9a 8b       	std	Y+18, r25	; 0x12
    1a88:	89 8b       	std	Y+17, r24	; 0x11
    1a8a:	89 89       	ldd	r24, Y+17	; 0x11
    1a8c:	9a 89       	ldd	r25, Y+18	; 0x12
    1a8e:	01 97       	sbiw	r24, 0x01	; 1
    1a90:	f1 f7       	brne	.-4      	; 0x1a8e <LCD_vidwritestring+0xc6>
    1a92:	9a 8b       	std	Y+18, r25	; 0x12
    1a94:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a96:	8b 89       	ldd	r24, Y+19	; 0x13
    1a98:	9c 89       	ldd	r25, Y+20	; 0x14
    1a9a:	01 97       	sbiw	r24, 0x01	; 1
    1a9c:	9c 8b       	std	Y+20, r25	; 0x14
    1a9e:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1aa0:	8b 89       	ldd	r24, Y+19	; 0x13
    1aa2:	9c 89       	ldd	r25, Y+20	; 0x14
    1aa4:	00 97       	sbiw	r24, 0x00	; 0
    1aa6:	69 f7       	brne	.-38     	; 0x1a82 <LCD_vidwritestring+0xba>
    1aa8:	95 c0       	rjmp	.+298    	; 0x1bd4 <LCD_vidwritestring+0x20c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1aaa:	6d 89       	ldd	r22, Y+21	; 0x15
    1aac:	7e 89       	ldd	r23, Y+22	; 0x16
    1aae:	8f 89       	ldd	r24, Y+23	; 0x17
    1ab0:	98 8d       	ldd	r25, Y+24	; 0x18
    1ab2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ab6:	dc 01       	movw	r26, r24
    1ab8:	cb 01       	movw	r24, r22
    1aba:	9c 8b       	std	Y+20, r25	; 0x14
    1abc:	8b 8b       	std	Y+19, r24	; 0x13
    1abe:	8b 89       	ldd	r24, Y+19	; 0x13
    1ac0:	9c 89       	ldd	r25, Y+20	; 0x14
    1ac2:	98 8b       	std	Y+16, r25	; 0x10
    1ac4:	8f 87       	std	Y+15, r24	; 0x0f
    1ac6:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ac8:	98 89       	ldd	r25, Y+16	; 0x10
    1aca:	01 97       	sbiw	r24, 0x01	; 1
    1acc:	f1 f7       	brne	.-4      	; 0x1aca <LCD_vidwritestring+0x102>
    1ace:	98 8b       	std	Y+16, r25	; 0x10
    1ad0:	8f 87       	std	Y+15, r24	; 0x0f
    1ad2:	80 c0       	rjmp	.+256    	; 0x1bd4 <LCD_vidwritestring+0x20c>
	_delay_ms(2);
	while (string[i]!= 0)
	{
		LCD_vidwritedata(string[i]);
    1ad4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ad6:	28 2f       	mov	r18, r24
    1ad8:	30 e0       	ldi	r19, 0x00	; 0
    1ada:	88 a1       	ldd	r24, Y+32	; 0x20
    1adc:	99 a1       	ldd	r25, Y+33	; 0x21
    1ade:	fc 01       	movw	r30, r24
    1ae0:	e2 0f       	add	r30, r18
    1ae2:	f3 1f       	adc	r31, r19
    1ae4:	80 81       	ld	r24, Z
    1ae6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    1aea:	80 e0       	ldi	r24, 0x00	; 0
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	a0 e0       	ldi	r26, 0x00	; 0
    1af0:	b0 e4       	ldi	r27, 0x40	; 64
    1af2:	8b 87       	std	Y+11, r24	; 0x0b
    1af4:	9c 87       	std	Y+12, r25	; 0x0c
    1af6:	ad 87       	std	Y+13, r26	; 0x0d
    1af8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1afa:	6b 85       	ldd	r22, Y+11	; 0x0b
    1afc:	7c 85       	ldd	r23, Y+12	; 0x0c
    1afe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b00:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b02:	20 e0       	ldi	r18, 0x00	; 0
    1b04:	30 e0       	ldi	r19, 0x00	; 0
    1b06:	4a ef       	ldi	r20, 0xFA	; 250
    1b08:	54 e4       	ldi	r21, 0x44	; 68
    1b0a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b0e:	dc 01       	movw	r26, r24
    1b10:	cb 01       	movw	r24, r22
    1b12:	8f 83       	std	Y+7, r24	; 0x07
    1b14:	98 87       	std	Y+8, r25	; 0x08
    1b16:	a9 87       	std	Y+9, r26	; 0x09
    1b18:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b1a:	6f 81       	ldd	r22, Y+7	; 0x07
    1b1c:	78 85       	ldd	r23, Y+8	; 0x08
    1b1e:	89 85       	ldd	r24, Y+9	; 0x09
    1b20:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	40 e8       	ldi	r20, 0x80	; 128
    1b28:	5f e3       	ldi	r21, 0x3F	; 63
    1b2a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1b2e:	88 23       	and	r24, r24
    1b30:	2c f4       	brge	.+10     	; 0x1b3c <LCD_vidwritestring+0x174>
		__ticks = 1;
    1b32:	81 e0       	ldi	r24, 0x01	; 1
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	9e 83       	std	Y+6, r25	; 0x06
    1b38:	8d 83       	std	Y+5, r24	; 0x05
    1b3a:	3f c0       	rjmp	.+126    	; 0x1bba <LCD_vidwritestring+0x1f2>
	else if (__tmp > 65535)
    1b3c:	6f 81       	ldd	r22, Y+7	; 0x07
    1b3e:	78 85       	ldd	r23, Y+8	; 0x08
    1b40:	89 85       	ldd	r24, Y+9	; 0x09
    1b42:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b44:	20 e0       	ldi	r18, 0x00	; 0
    1b46:	3f ef       	ldi	r19, 0xFF	; 255
    1b48:	4f e7       	ldi	r20, 0x7F	; 127
    1b4a:	57 e4       	ldi	r21, 0x47	; 71
    1b4c:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b50:	18 16       	cp	r1, r24
    1b52:	4c f5       	brge	.+82     	; 0x1ba6 <LCD_vidwritestring+0x1de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b54:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b56:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b58:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b5a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b5c:	20 e0       	ldi	r18, 0x00	; 0
    1b5e:	30 e0       	ldi	r19, 0x00	; 0
    1b60:	40 e2       	ldi	r20, 0x20	; 32
    1b62:	51 e4       	ldi	r21, 0x41	; 65
    1b64:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b68:	dc 01       	movw	r26, r24
    1b6a:	cb 01       	movw	r24, r22
    1b6c:	bc 01       	movw	r22, r24
    1b6e:	cd 01       	movw	r24, r26
    1b70:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b74:	dc 01       	movw	r26, r24
    1b76:	cb 01       	movw	r24, r22
    1b78:	9e 83       	std	Y+6, r25	; 0x06
    1b7a:	8d 83       	std	Y+5, r24	; 0x05
    1b7c:	0f c0       	rjmp	.+30     	; 0x1b9c <LCD_vidwritestring+0x1d4>
    1b7e:	88 ec       	ldi	r24, 0xC8	; 200
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	9c 83       	std	Y+4, r25	; 0x04
    1b84:	8b 83       	std	Y+3, r24	; 0x03
    1b86:	8b 81       	ldd	r24, Y+3	; 0x03
    1b88:	9c 81       	ldd	r25, Y+4	; 0x04
    1b8a:	01 97       	sbiw	r24, 0x01	; 1
    1b8c:	f1 f7       	brne	.-4      	; 0x1b8a <LCD_vidwritestring+0x1c2>
    1b8e:	9c 83       	std	Y+4, r25	; 0x04
    1b90:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b92:	8d 81       	ldd	r24, Y+5	; 0x05
    1b94:	9e 81       	ldd	r25, Y+6	; 0x06
    1b96:	01 97       	sbiw	r24, 0x01	; 1
    1b98:	9e 83       	std	Y+6, r25	; 0x06
    1b9a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b9c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9e:	9e 81       	ldd	r25, Y+6	; 0x06
    1ba0:	00 97       	sbiw	r24, 0x00	; 0
    1ba2:	69 f7       	brne	.-38     	; 0x1b7e <LCD_vidwritestring+0x1b6>
    1ba4:	14 c0       	rjmp	.+40     	; 0x1bce <LCD_vidwritestring+0x206>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ba6:	6f 81       	ldd	r22, Y+7	; 0x07
    1ba8:	78 85       	ldd	r23, Y+8	; 0x08
    1baa:	89 85       	ldd	r24, Y+9	; 0x09
    1bac:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bb2:	dc 01       	movw	r26, r24
    1bb4:	cb 01       	movw	r24, r22
    1bb6:	9e 83       	std	Y+6, r25	; 0x06
    1bb8:	8d 83       	std	Y+5, r24	; 0x05
    1bba:	8d 81       	ldd	r24, Y+5	; 0x05
    1bbc:	9e 81       	ldd	r25, Y+6	; 0x06
    1bbe:	9a 83       	std	Y+2, r25	; 0x02
    1bc0:	89 83       	std	Y+1, r24	; 0x01
    1bc2:	89 81       	ldd	r24, Y+1	; 0x01
    1bc4:	9a 81       	ldd	r25, Y+2	; 0x02
    1bc6:	01 97       	sbiw	r24, 0x01	; 1
    1bc8:	f1 f7       	brne	.-4      	; 0x1bc6 <LCD_vidwritestring+0x1fe>
    1bca:	9a 83       	std	Y+2, r25	; 0x02
    1bcc:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
				i++;
    1bce:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1bd0:	8f 5f       	subi	r24, 0xFF	; 255
    1bd2:	8d 8f       	std	Y+29, r24	; 0x1d
extern void LCD_vidwritestring (u8 line,u8 column,u8 string[])
{
	u8 i=0;
	LCD_setcursorposition(line,column);
	_delay_ms(2);
	while (string[i]!= 0)
    1bd4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1bd6:	28 2f       	mov	r18, r24
    1bd8:	30 e0       	ldi	r19, 0x00	; 0
    1bda:	88 a1       	ldd	r24, Y+32	; 0x20
    1bdc:	99 a1       	ldd	r25, Y+33	; 0x21
    1bde:	fc 01       	movw	r30, r24
    1be0:	e2 0f       	add	r30, r18
    1be2:	f3 1f       	adc	r31, r19
    1be4:	80 81       	ld	r24, Z
    1be6:	88 23       	and	r24, r24
    1be8:	09 f0       	breq	.+2      	; 0x1bec <LCD_vidwritestring+0x224>
    1bea:	74 cf       	rjmp	.-280    	; 0x1ad4 <LCD_vidwritestring+0x10c>
	{
		LCD_vidwritedata(string[i]);
		_delay_ms(2);
				i++;
	}
}
    1bec:	a1 96       	adiw	r28, 0x21	; 33
    1bee:	0f b6       	in	r0, 0x3f	; 63
    1bf0:	f8 94       	cli
    1bf2:	de bf       	out	0x3e, r29	; 62
    1bf4:	0f be       	out	0x3f, r0	; 63
    1bf6:	cd bf       	out	0x3d, r28	; 61
    1bf8:	cf 91       	pop	r28
    1bfa:	df 91       	pop	r29
    1bfc:	08 95       	ret

00001bfe <LCD_vidwritestringoncursor>:
extern void LCD_vidwritestringoncursor (u8 string[])
{
    1bfe:	df 93       	push	r29
    1c00:	cf 93       	push	r28
    1c02:	cd b7       	in	r28, 0x3d	; 61
    1c04:	de b7       	in	r29, 0x3e	; 62
    1c06:	6f 97       	sbiw	r28, 0x1f	; 31
    1c08:	0f b6       	in	r0, 0x3f	; 63
    1c0a:	f8 94       	cli
    1c0c:	de bf       	out	0x3e, r29	; 62
    1c0e:	0f be       	out	0x3f, r0	; 63
    1c10:	cd bf       	out	0x3d, r28	; 61
    1c12:	9f 8f       	std	Y+31, r25	; 0x1f
    1c14:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 i=0;
    1c16:	1d 8e       	std	Y+29, r1	; 0x1d
    1c18:	80 e0       	ldi	r24, 0x00	; 0
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	a0 e0       	ldi	r26, 0x00	; 0
    1c1e:	b0 e4       	ldi	r27, 0x40	; 64
    1c20:	89 8f       	std	Y+25, r24	; 0x19
    1c22:	9a 8f       	std	Y+26, r25	; 0x1a
    1c24:	ab 8f       	std	Y+27, r26	; 0x1b
    1c26:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c28:	69 8d       	ldd	r22, Y+25	; 0x19
    1c2a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c2c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c2e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c30:	20 e0       	ldi	r18, 0x00	; 0
    1c32:	30 e0       	ldi	r19, 0x00	; 0
    1c34:	4a ef       	ldi	r20, 0xFA	; 250
    1c36:	54 e4       	ldi	r21, 0x44	; 68
    1c38:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c3c:	dc 01       	movw	r26, r24
    1c3e:	cb 01       	movw	r24, r22
    1c40:	8d 8b       	std	Y+21, r24	; 0x15
    1c42:	9e 8b       	std	Y+22, r25	; 0x16
    1c44:	af 8b       	std	Y+23, r26	; 0x17
    1c46:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c48:	6d 89       	ldd	r22, Y+21	; 0x15
    1c4a:	7e 89       	ldd	r23, Y+22	; 0x16
    1c4c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c4e:	98 8d       	ldd	r25, Y+24	; 0x18
    1c50:	20 e0       	ldi	r18, 0x00	; 0
    1c52:	30 e0       	ldi	r19, 0x00	; 0
    1c54:	40 e8       	ldi	r20, 0x80	; 128
    1c56:	5f e3       	ldi	r21, 0x3F	; 63
    1c58:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1c5c:	88 23       	and	r24, r24
    1c5e:	2c f4       	brge	.+10     	; 0x1c6a <LCD_vidwritestringoncursor+0x6c>
		__ticks = 1;
    1c60:	81 e0       	ldi	r24, 0x01	; 1
    1c62:	90 e0       	ldi	r25, 0x00	; 0
    1c64:	9c 8b       	std	Y+20, r25	; 0x14
    1c66:	8b 8b       	std	Y+19, r24	; 0x13
    1c68:	3f c0       	rjmp	.+126    	; 0x1ce8 <LCD_vidwritestringoncursor+0xea>
	else if (__tmp > 65535)
    1c6a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c6c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c6e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c70:	98 8d       	ldd	r25, Y+24	; 0x18
    1c72:	20 e0       	ldi	r18, 0x00	; 0
    1c74:	3f ef       	ldi	r19, 0xFF	; 255
    1c76:	4f e7       	ldi	r20, 0x7F	; 127
    1c78:	57 e4       	ldi	r21, 0x47	; 71
    1c7a:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1c7e:	18 16       	cp	r1, r24
    1c80:	4c f5       	brge	.+82     	; 0x1cd4 <LCD_vidwritestringoncursor+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c82:	69 8d       	ldd	r22, Y+25	; 0x19
    1c84:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c86:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c88:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c8a:	20 e0       	ldi	r18, 0x00	; 0
    1c8c:	30 e0       	ldi	r19, 0x00	; 0
    1c8e:	40 e2       	ldi	r20, 0x20	; 32
    1c90:	51 e4       	ldi	r21, 0x41	; 65
    1c92:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c96:	dc 01       	movw	r26, r24
    1c98:	cb 01       	movw	r24, r22
    1c9a:	bc 01       	movw	r22, r24
    1c9c:	cd 01       	movw	r24, r26
    1c9e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	9c 8b       	std	Y+20, r25	; 0x14
    1ca8:	8b 8b       	std	Y+19, r24	; 0x13
    1caa:	0f c0       	rjmp	.+30     	; 0x1cca <LCD_vidwritestringoncursor+0xcc>
    1cac:	88 ec       	ldi	r24, 0xC8	; 200
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	9a 8b       	std	Y+18, r25	; 0x12
    1cb2:	89 8b       	std	Y+17, r24	; 0x11
    1cb4:	89 89       	ldd	r24, Y+17	; 0x11
    1cb6:	9a 89       	ldd	r25, Y+18	; 0x12
    1cb8:	01 97       	sbiw	r24, 0x01	; 1
    1cba:	f1 f7       	brne	.-4      	; 0x1cb8 <LCD_vidwritestringoncursor+0xba>
    1cbc:	9a 8b       	std	Y+18, r25	; 0x12
    1cbe:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cc0:	8b 89       	ldd	r24, Y+19	; 0x13
    1cc2:	9c 89       	ldd	r25, Y+20	; 0x14
    1cc4:	01 97       	sbiw	r24, 0x01	; 1
    1cc6:	9c 8b       	std	Y+20, r25	; 0x14
    1cc8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cca:	8b 89       	ldd	r24, Y+19	; 0x13
    1ccc:	9c 89       	ldd	r25, Y+20	; 0x14
    1cce:	00 97       	sbiw	r24, 0x00	; 0
    1cd0:	69 f7       	brne	.-38     	; 0x1cac <LCD_vidwritestringoncursor+0xae>
    1cd2:	95 c0       	rjmp	.+298    	; 0x1dfe <LCD_vidwritestringoncursor+0x200>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1cd4:	6d 89       	ldd	r22, Y+21	; 0x15
    1cd6:	7e 89       	ldd	r23, Y+22	; 0x16
    1cd8:	8f 89       	ldd	r24, Y+23	; 0x17
    1cda:	98 8d       	ldd	r25, Y+24	; 0x18
    1cdc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ce0:	dc 01       	movw	r26, r24
    1ce2:	cb 01       	movw	r24, r22
    1ce4:	9c 8b       	std	Y+20, r25	; 0x14
    1ce6:	8b 8b       	std	Y+19, r24	; 0x13
    1ce8:	8b 89       	ldd	r24, Y+19	; 0x13
    1cea:	9c 89       	ldd	r25, Y+20	; 0x14
    1cec:	98 8b       	std	Y+16, r25	; 0x10
    1cee:	8f 87       	std	Y+15, r24	; 0x0f
    1cf0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cf2:	98 89       	ldd	r25, Y+16	; 0x10
    1cf4:	01 97       	sbiw	r24, 0x01	; 1
    1cf6:	f1 f7       	brne	.-4      	; 0x1cf4 <LCD_vidwritestringoncursor+0xf6>
    1cf8:	98 8b       	std	Y+16, r25	; 0x10
    1cfa:	8f 87       	std	Y+15, r24	; 0x0f
    1cfc:	80 c0       	rjmp	.+256    	; 0x1dfe <LCD_vidwritestringoncursor+0x200>
	_delay_ms(2);
	while (string[i]!= 0)
	{
		LCD_vidwritedata(string[i]);
    1cfe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d00:	28 2f       	mov	r18, r24
    1d02:	30 e0       	ldi	r19, 0x00	; 0
    1d04:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1d06:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1d08:	fc 01       	movw	r30, r24
    1d0a:	e2 0f       	add	r30, r18
    1d0c:	f3 1f       	adc	r31, r19
    1d0e:	80 81       	ld	r24, Z
    1d10:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    1d14:	80 e0       	ldi	r24, 0x00	; 0
    1d16:	90 e0       	ldi	r25, 0x00	; 0
    1d18:	a0 e0       	ldi	r26, 0x00	; 0
    1d1a:	b0 e4       	ldi	r27, 0x40	; 64
    1d1c:	8b 87       	std	Y+11, r24	; 0x0b
    1d1e:	9c 87       	std	Y+12, r25	; 0x0c
    1d20:	ad 87       	std	Y+13, r26	; 0x0d
    1d22:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d24:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d26:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d28:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d2c:	20 e0       	ldi	r18, 0x00	; 0
    1d2e:	30 e0       	ldi	r19, 0x00	; 0
    1d30:	4a ef       	ldi	r20, 0xFA	; 250
    1d32:	54 e4       	ldi	r21, 0x44	; 68
    1d34:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d38:	dc 01       	movw	r26, r24
    1d3a:	cb 01       	movw	r24, r22
    1d3c:	8f 83       	std	Y+7, r24	; 0x07
    1d3e:	98 87       	std	Y+8, r25	; 0x08
    1d40:	a9 87       	std	Y+9, r26	; 0x09
    1d42:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1d44:	6f 81       	ldd	r22, Y+7	; 0x07
    1d46:	78 85       	ldd	r23, Y+8	; 0x08
    1d48:	89 85       	ldd	r24, Y+9	; 0x09
    1d4a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d4c:	20 e0       	ldi	r18, 0x00	; 0
    1d4e:	30 e0       	ldi	r19, 0x00	; 0
    1d50:	40 e8       	ldi	r20, 0x80	; 128
    1d52:	5f e3       	ldi	r21, 0x3F	; 63
    1d54:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1d58:	88 23       	and	r24, r24
    1d5a:	2c f4       	brge	.+10     	; 0x1d66 <LCD_vidwritestringoncursor+0x168>
		__ticks = 1;
    1d5c:	81 e0       	ldi	r24, 0x01	; 1
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	9e 83       	std	Y+6, r25	; 0x06
    1d62:	8d 83       	std	Y+5, r24	; 0x05
    1d64:	3f c0       	rjmp	.+126    	; 0x1de4 <LCD_vidwritestringoncursor+0x1e6>
	else if (__tmp > 65535)
    1d66:	6f 81       	ldd	r22, Y+7	; 0x07
    1d68:	78 85       	ldd	r23, Y+8	; 0x08
    1d6a:	89 85       	ldd	r24, Y+9	; 0x09
    1d6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	3f ef       	ldi	r19, 0xFF	; 255
    1d72:	4f e7       	ldi	r20, 0x7F	; 127
    1d74:	57 e4       	ldi	r21, 0x47	; 71
    1d76:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1d7a:	18 16       	cp	r1, r24
    1d7c:	4c f5       	brge	.+82     	; 0x1dd0 <LCD_vidwritestringoncursor+0x1d2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d7e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d80:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d82:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d84:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d86:	20 e0       	ldi	r18, 0x00	; 0
    1d88:	30 e0       	ldi	r19, 0x00	; 0
    1d8a:	40 e2       	ldi	r20, 0x20	; 32
    1d8c:	51 e4       	ldi	r21, 0x41	; 65
    1d8e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d92:	dc 01       	movw	r26, r24
    1d94:	cb 01       	movw	r24, r22
    1d96:	bc 01       	movw	r22, r24
    1d98:	cd 01       	movw	r24, r26
    1d9a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d9e:	dc 01       	movw	r26, r24
    1da0:	cb 01       	movw	r24, r22
    1da2:	9e 83       	std	Y+6, r25	; 0x06
    1da4:	8d 83       	std	Y+5, r24	; 0x05
    1da6:	0f c0       	rjmp	.+30     	; 0x1dc6 <LCD_vidwritestringoncursor+0x1c8>
    1da8:	88 ec       	ldi	r24, 0xC8	; 200
    1daa:	90 e0       	ldi	r25, 0x00	; 0
    1dac:	9c 83       	std	Y+4, r25	; 0x04
    1dae:	8b 83       	std	Y+3, r24	; 0x03
    1db0:	8b 81       	ldd	r24, Y+3	; 0x03
    1db2:	9c 81       	ldd	r25, Y+4	; 0x04
    1db4:	01 97       	sbiw	r24, 0x01	; 1
    1db6:	f1 f7       	brne	.-4      	; 0x1db4 <LCD_vidwritestringoncursor+0x1b6>
    1db8:	9c 83       	std	Y+4, r25	; 0x04
    1dba:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dbc:	8d 81       	ldd	r24, Y+5	; 0x05
    1dbe:	9e 81       	ldd	r25, Y+6	; 0x06
    1dc0:	01 97       	sbiw	r24, 0x01	; 1
    1dc2:	9e 83       	std	Y+6, r25	; 0x06
    1dc4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dc6:	8d 81       	ldd	r24, Y+5	; 0x05
    1dc8:	9e 81       	ldd	r25, Y+6	; 0x06
    1dca:	00 97       	sbiw	r24, 0x00	; 0
    1dcc:	69 f7       	brne	.-38     	; 0x1da8 <LCD_vidwritestringoncursor+0x1aa>
    1dce:	14 c0       	rjmp	.+40     	; 0x1df8 <LCD_vidwritestringoncursor+0x1fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dd0:	6f 81       	ldd	r22, Y+7	; 0x07
    1dd2:	78 85       	ldd	r23, Y+8	; 0x08
    1dd4:	89 85       	ldd	r24, Y+9	; 0x09
    1dd6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1dd8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1ddc:	dc 01       	movw	r26, r24
    1dde:	cb 01       	movw	r24, r22
    1de0:	9e 83       	std	Y+6, r25	; 0x06
    1de2:	8d 83       	std	Y+5, r24	; 0x05
    1de4:	8d 81       	ldd	r24, Y+5	; 0x05
    1de6:	9e 81       	ldd	r25, Y+6	; 0x06
    1de8:	9a 83       	std	Y+2, r25	; 0x02
    1dea:	89 83       	std	Y+1, r24	; 0x01
    1dec:	89 81       	ldd	r24, Y+1	; 0x01
    1dee:	9a 81       	ldd	r25, Y+2	; 0x02
    1df0:	01 97       	sbiw	r24, 0x01	; 1
    1df2:	f1 f7       	brne	.-4      	; 0x1df0 <LCD_vidwritestringoncursor+0x1f2>
    1df4:	9a 83       	std	Y+2, r25	; 0x02
    1df6:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);
				i++;
    1df8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1dfa:	8f 5f       	subi	r24, 0xFF	; 255
    1dfc:	8d 8f       	std	Y+29, r24	; 0x1d
}
extern void LCD_vidwritestringoncursor (u8 string[])
{
	u8 i=0;
	_delay_ms(2);
	while (string[i]!= 0)
    1dfe:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1e00:	28 2f       	mov	r18, r24
    1e02:	30 e0       	ldi	r19, 0x00	; 0
    1e04:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1e06:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1e08:	fc 01       	movw	r30, r24
    1e0a:	e2 0f       	add	r30, r18
    1e0c:	f3 1f       	adc	r31, r19
    1e0e:	80 81       	ld	r24, Z
    1e10:	88 23       	and	r24, r24
    1e12:	09 f0       	breq	.+2      	; 0x1e16 <LCD_vidwritestringoncursor+0x218>
    1e14:	74 cf       	rjmp	.-280    	; 0x1cfe <LCD_vidwritestringoncursor+0x100>
	{
		LCD_vidwritedata(string[i]);
		_delay_ms(2);
				i++;
	}
}
    1e16:	6f 96       	adiw	r28, 0x1f	; 31
    1e18:	0f b6       	in	r0, 0x3f	; 63
    1e1a:	f8 94       	cli
    1e1c:	de bf       	out	0x3e, r29	; 62
    1e1e:	0f be       	out	0x3f, r0	; 63
    1e20:	cd bf       	out	0x3d, r28	; 61
    1e22:	cf 91       	pop	r28
    1e24:	df 91       	pop	r29
    1e26:	08 95       	ret

00001e28 <LCD_viddisplayintegar>:
extern void LCD_viddisplayintegar (u8 line ,u8 column , u32 number)
{
    1e28:	df 93       	push	r29
    1e2a:	cf 93       	push	r28
    1e2c:	cd b7       	in	r28, 0x3d	; 61
    1e2e:	de b7       	in	r29, 0x3e	; 62
    1e30:	a6 97       	sbiw	r28, 0x26	; 38
    1e32:	0f b6       	in	r0, 0x3f	; 63
    1e34:	f8 94       	cli
    1e36:	de bf       	out	0x3e, r29	; 62
    1e38:	0f be       	out	0x3f, r0	; 63
    1e3a:	cd bf       	out	0x3d, r28	; 61
    1e3c:	89 a3       	std	Y+33, r24	; 0x21
    1e3e:	6a a3       	std	Y+34, r22	; 0x22
    1e40:	2b a3       	std	Y+35, r18	; 0x23
    1e42:	3c a3       	std	Y+36, r19	; 0x24
    1e44:	4d a3       	std	Y+37, r20	; 0x25
    1e46:	5e a3       	std	Y+38, r21	; 0x26
	u32 num1,num2,num3,num4,num5,num6,num7,num8;
	if (number<10)
    1e48:	8b a1       	ldd	r24, Y+35	; 0x23
    1e4a:	9c a1       	ldd	r25, Y+36	; 0x24
    1e4c:	ad a1       	ldd	r26, Y+37	; 0x25
    1e4e:	be a1       	ldd	r27, Y+38	; 0x26
    1e50:	8a 30       	cpi	r24, 0x0A	; 10
    1e52:	91 05       	cpc	r25, r1
    1e54:	a1 05       	cpc	r26, r1
    1e56:	b1 05       	cpc	r27, r1
    1e58:	48 f4       	brcc	.+18     	; 0x1e6c <LCD_viddisplayintegar+0x44>
	{
		LCD_setcursorposition(line,column);
    1e5a:	89 a1       	ldd	r24, Y+33	; 0x21
    1e5c:	6a a1       	ldd	r22, Y+34	; 0x22
    1e5e:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritedata(number+48);
    1e62:	8b a1       	ldd	r24, Y+35	; 0x23
    1e64:	80 5d       	subi	r24, 0xD0	; 208
    1e66:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    1e6a:	9d c5       	rjmp	.+2874   	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	}
	else if (number>=10 && number<100)
    1e6c:	8b a1       	ldd	r24, Y+35	; 0x23
    1e6e:	9c a1       	ldd	r25, Y+36	; 0x24
    1e70:	ad a1       	ldd	r26, Y+37	; 0x25
    1e72:	be a1       	ldd	r27, Y+38	; 0x26
    1e74:	8a 30       	cpi	r24, 0x0A	; 10
    1e76:	91 05       	cpc	r25, r1
    1e78:	a1 05       	cpc	r26, r1
    1e7a:	b1 05       	cpc	r27, r1
    1e7c:	e8 f1       	brcs	.+122    	; 0x1ef8 <LCD_viddisplayintegar+0xd0>
    1e7e:	8b a1       	ldd	r24, Y+35	; 0x23
    1e80:	9c a1       	ldd	r25, Y+36	; 0x24
    1e82:	ad a1       	ldd	r26, Y+37	; 0x25
    1e84:	be a1       	ldd	r27, Y+38	; 0x26
    1e86:	84 36       	cpi	r24, 0x64	; 100
    1e88:	91 05       	cpc	r25, r1
    1e8a:	a1 05       	cpc	r26, r1
    1e8c:	b1 05       	cpc	r27, r1
    1e8e:	a0 f5       	brcc	.+104    	; 0x1ef8 <LCD_viddisplayintegar+0xd0>
	{
     	LCD_setcursorposition(line ,column);
    1e90:	89 a1       	ldd	r24, Y+33	; 0x21
    1e92:	6a a1       	ldd	r22, Y+34	; 0x22
    1e94:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritecommand(cursorleft);
    1e98:	80 e1       	ldi	r24, 0x10	; 16
    1e9a:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		num1=number/10;
    1e9e:	8b a1       	ldd	r24, Y+35	; 0x23
    1ea0:	9c a1       	ldd	r25, Y+36	; 0x24
    1ea2:	ad a1       	ldd	r26, Y+37	; 0x25
    1ea4:	be a1       	ldd	r27, Y+38	; 0x26
    1ea6:	2a e0       	ldi	r18, 0x0A	; 10
    1ea8:	30 e0       	ldi	r19, 0x00	; 0
    1eaa:	40 e0       	ldi	r20, 0x00	; 0
    1eac:	50 e0       	ldi	r21, 0x00	; 0
    1eae:	bc 01       	movw	r22, r24
    1eb0:	cd 01       	movw	r24, r26
    1eb2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    1eb6:	da 01       	movw	r26, r20
    1eb8:	c9 01       	movw	r24, r18
    1eba:	8d 8f       	std	Y+29, r24	; 0x1d
    1ebc:	9e 8f       	std	Y+30, r25	; 0x1e
    1ebe:	af 8f       	std	Y+31, r26	; 0x1f
    1ec0:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    1ec2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ec4:	80 5d       	subi	r24, 0xD0	; 208
    1ec6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=number%10;
    1eca:	8b a1       	ldd	r24, Y+35	; 0x23
    1ecc:	9c a1       	ldd	r25, Y+36	; 0x24
    1ece:	ad a1       	ldd	r26, Y+37	; 0x25
    1ed0:	be a1       	ldd	r27, Y+38	; 0x26
    1ed2:	2a e0       	ldi	r18, 0x0A	; 10
    1ed4:	30 e0       	ldi	r19, 0x00	; 0
    1ed6:	40 e0       	ldi	r20, 0x00	; 0
    1ed8:	50 e0       	ldi	r21, 0x00	; 0
    1eda:	bc 01       	movw	r22, r24
    1edc:	cd 01       	movw	r24, r26
    1ede:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    1ee2:	dc 01       	movw	r26, r24
    1ee4:	cb 01       	movw	r24, r22
    1ee6:	89 8f       	std	Y+25, r24	; 0x19
    1ee8:	9a 8f       	std	Y+26, r25	; 0x1a
    1eea:	ab 8f       	std	Y+27, r26	; 0x1b
    1eec:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    1eee:	89 8d       	ldd	r24, Y+25	; 0x19
    1ef0:	80 5d       	subi	r24, 0xD0	; 208
    1ef2:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    1ef6:	57 c5       	rjmp	.+2734   	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	}
	else if (number>=100 && number < 1000)
    1ef8:	8b a1       	ldd	r24, Y+35	; 0x23
    1efa:	9c a1       	ldd	r25, Y+36	; 0x24
    1efc:	ad a1       	ldd	r26, Y+37	; 0x25
    1efe:	be a1       	ldd	r27, Y+38	; 0x26
    1f00:	84 36       	cpi	r24, 0x64	; 100
    1f02:	91 05       	cpc	r25, r1
    1f04:	a1 05       	cpc	r26, r1
    1f06:	b1 05       	cpc	r27, r1
    1f08:	08 f4       	brcc	.+2      	; 0x1f0c <LCD_viddisplayintegar+0xe4>
    1f0a:	6c c0       	rjmp	.+216    	; 0x1fe4 <LCD_viddisplayintegar+0x1bc>
    1f0c:	8b a1       	ldd	r24, Y+35	; 0x23
    1f0e:	9c a1       	ldd	r25, Y+36	; 0x24
    1f10:	ad a1       	ldd	r26, Y+37	; 0x25
    1f12:	be a1       	ldd	r27, Y+38	; 0x26
    1f14:	88 3e       	cpi	r24, 0xE8	; 232
    1f16:	23 e0       	ldi	r18, 0x03	; 3
    1f18:	92 07       	cpc	r25, r18
    1f1a:	20 e0       	ldi	r18, 0x00	; 0
    1f1c:	a2 07       	cpc	r26, r18
    1f1e:	20 e0       	ldi	r18, 0x00	; 0
    1f20:	b2 07       	cpc	r27, r18
    1f22:	08 f0       	brcs	.+2      	; 0x1f26 <LCD_viddisplayintegar+0xfe>
    1f24:	5f c0       	rjmp	.+190    	; 0x1fe4 <LCD_viddisplayintegar+0x1bc>
	{
		LCD_setcursorposition(line ,column);
    1f26:	89 a1       	ldd	r24, Y+33	; 0x21
    1f28:	6a a1       	ldd	r22, Y+34	; 0x22
    1f2a:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritecommand(cursorleft);
    1f2e:	80 e1       	ldi	r24, 0x10	; 16
    1f30:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    1f34:	80 e1       	ldi	r24, 0x10	; 16
    1f36:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		num1=number/100;
    1f3a:	8b a1       	ldd	r24, Y+35	; 0x23
    1f3c:	9c a1       	ldd	r25, Y+36	; 0x24
    1f3e:	ad a1       	ldd	r26, Y+37	; 0x25
    1f40:	be a1       	ldd	r27, Y+38	; 0x26
    1f42:	24 e6       	ldi	r18, 0x64	; 100
    1f44:	30 e0       	ldi	r19, 0x00	; 0
    1f46:	40 e0       	ldi	r20, 0x00	; 0
    1f48:	50 e0       	ldi	r21, 0x00	; 0
    1f4a:	bc 01       	movw	r22, r24
    1f4c:	cd 01       	movw	r24, r26
    1f4e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    1f52:	da 01       	movw	r26, r20
    1f54:	c9 01       	movw	r24, r18
    1f56:	8d 8f       	std	Y+29, r24	; 0x1d
    1f58:	9e 8f       	std	Y+30, r25	; 0x1e
    1f5a:	af 8f       	std	Y+31, r26	; 0x1f
    1f5c:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    1f5e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f60:	80 5d       	subi	r24, 0xD0	; 208
    1f62:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%100;
    1f66:	8b a1       	ldd	r24, Y+35	; 0x23
    1f68:	9c a1       	ldd	r25, Y+36	; 0x24
    1f6a:	ad a1       	ldd	r26, Y+37	; 0x25
    1f6c:	be a1       	ldd	r27, Y+38	; 0x26
    1f6e:	24 e6       	ldi	r18, 0x64	; 100
    1f70:	30 e0       	ldi	r19, 0x00	; 0
    1f72:	40 e0       	ldi	r20, 0x00	; 0
    1f74:	50 e0       	ldi	r21, 0x00	; 0
    1f76:	bc 01       	movw	r22, r24
    1f78:	cd 01       	movw	r24, r26
    1f7a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    1f7e:	dc 01       	movw	r26, r24
    1f80:	cb 01       	movw	r24, r22
    1f82:	8d 8f       	std	Y+29, r24	; 0x1d
    1f84:	9e 8f       	std	Y+30, r25	; 0x1e
    1f86:	af 8f       	std	Y+31, r26	; 0x1f
    1f88:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/10;
    1f8a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1f8c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1f8e:	af 8d       	ldd	r26, Y+31	; 0x1f
    1f90:	b8 a1       	ldd	r27, Y+32	; 0x20
    1f92:	2a e0       	ldi	r18, 0x0A	; 10
    1f94:	30 e0       	ldi	r19, 0x00	; 0
    1f96:	40 e0       	ldi	r20, 0x00	; 0
    1f98:	50 e0       	ldi	r21, 0x00	; 0
    1f9a:	bc 01       	movw	r22, r24
    1f9c:	cd 01       	movw	r24, r26
    1f9e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    1fa2:	da 01       	movw	r26, r20
    1fa4:	c9 01       	movw	r24, r18
    1fa6:	89 8f       	std	Y+25, r24	; 0x19
    1fa8:	9a 8f       	std	Y+26, r25	; 0x1a
    1faa:	ab 8f       	std	Y+27, r26	; 0x1b
    1fac:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    1fae:	89 8d       	ldd	r24, Y+25	; 0x19
    1fb0:	80 5d       	subi	r24, 0xD0	; 208
    1fb2:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%10;
    1fb6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1fb8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1fba:	af 8d       	ldd	r26, Y+31	; 0x1f
    1fbc:	b8 a1       	ldd	r27, Y+32	; 0x20
    1fbe:	2a e0       	ldi	r18, 0x0A	; 10
    1fc0:	30 e0       	ldi	r19, 0x00	; 0
    1fc2:	40 e0       	ldi	r20, 0x00	; 0
    1fc4:	50 e0       	ldi	r21, 0x00	; 0
    1fc6:	bc 01       	movw	r22, r24
    1fc8:	cd 01       	movw	r24, r26
    1fca:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    1fce:	dc 01       	movw	r26, r24
    1fd0:	cb 01       	movw	r24, r22
    1fd2:	89 8f       	std	Y+25, r24	; 0x19
    1fd4:	9a 8f       	std	Y+26, r25	; 0x1a
    1fd6:	ab 8f       	std	Y+27, r26	; 0x1b
    1fd8:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    1fda:	89 8d       	ldd	r24, Y+25	; 0x19
    1fdc:	80 5d       	subi	r24, 0xD0	; 208
    1fde:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    1fe2:	e1 c4       	rjmp	.+2498   	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	}
	else if (number>=1000 && number <10000)
    1fe4:	8b a1       	ldd	r24, Y+35	; 0x23
    1fe6:	9c a1       	ldd	r25, Y+36	; 0x24
    1fe8:	ad a1       	ldd	r26, Y+37	; 0x25
    1fea:	be a1       	ldd	r27, Y+38	; 0x26
    1fec:	88 3e       	cpi	r24, 0xE8	; 232
    1fee:	23 e0       	ldi	r18, 0x03	; 3
    1ff0:	92 07       	cpc	r25, r18
    1ff2:	20 e0       	ldi	r18, 0x00	; 0
    1ff4:	a2 07       	cpc	r26, r18
    1ff6:	20 e0       	ldi	r18, 0x00	; 0
    1ff8:	b2 07       	cpc	r27, r18
    1ffa:	08 f4       	brcc	.+2      	; 0x1ffe <LCD_viddisplayintegar+0x1d6>
    1ffc:	97 c0       	rjmp	.+302    	; 0x212c <LCD_viddisplayintegar+0x304>
    1ffe:	8b a1       	ldd	r24, Y+35	; 0x23
    2000:	9c a1       	ldd	r25, Y+36	; 0x24
    2002:	ad a1       	ldd	r26, Y+37	; 0x25
    2004:	be a1       	ldd	r27, Y+38	; 0x26
    2006:	80 31       	cpi	r24, 0x10	; 16
    2008:	27 e2       	ldi	r18, 0x27	; 39
    200a:	92 07       	cpc	r25, r18
    200c:	20 e0       	ldi	r18, 0x00	; 0
    200e:	a2 07       	cpc	r26, r18
    2010:	20 e0       	ldi	r18, 0x00	; 0
    2012:	b2 07       	cpc	r27, r18
    2014:	08 f0       	brcs	.+2      	; 0x2018 <LCD_viddisplayintegar+0x1f0>
    2016:	8a c0       	rjmp	.+276    	; 0x212c <LCD_viddisplayintegar+0x304>
	{
		LCD_setcursorposition(line ,column);
    2018:	89 a1       	ldd	r24, Y+33	; 0x21
    201a:	6a a1       	ldd	r22, Y+34	; 0x22
    201c:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritecommand(cursorleft);
    2020:	80 e1       	ldi	r24, 0x10	; 16
    2022:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2026:	80 e1       	ldi	r24, 0x10	; 16
    2028:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    202c:	80 e1       	ldi	r24, 0x10	; 16
    202e:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		num1=number/1000;
    2032:	8b a1       	ldd	r24, Y+35	; 0x23
    2034:	9c a1       	ldd	r25, Y+36	; 0x24
    2036:	ad a1       	ldd	r26, Y+37	; 0x25
    2038:	be a1       	ldd	r27, Y+38	; 0x26
    203a:	28 ee       	ldi	r18, 0xE8	; 232
    203c:	33 e0       	ldi	r19, 0x03	; 3
    203e:	40 e0       	ldi	r20, 0x00	; 0
    2040:	50 e0       	ldi	r21, 0x00	; 0
    2042:	bc 01       	movw	r22, r24
    2044:	cd 01       	movw	r24, r26
    2046:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    204a:	da 01       	movw	r26, r20
    204c:	c9 01       	movw	r24, r18
    204e:	8d 8f       	std	Y+29, r24	; 0x1d
    2050:	9e 8f       	std	Y+30, r25	; 0x1e
    2052:	af 8f       	std	Y+31, r26	; 0x1f
    2054:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2056:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2058:	80 5d       	subi	r24, 0xD0	; 208
    205a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=number%1000;
    205e:	8b a1       	ldd	r24, Y+35	; 0x23
    2060:	9c a1       	ldd	r25, Y+36	; 0x24
    2062:	ad a1       	ldd	r26, Y+37	; 0x25
    2064:	be a1       	ldd	r27, Y+38	; 0x26
    2066:	28 ee       	ldi	r18, 0xE8	; 232
    2068:	33 e0       	ldi	r19, 0x03	; 3
    206a:	40 e0       	ldi	r20, 0x00	; 0
    206c:	50 e0       	ldi	r21, 0x00	; 0
    206e:	bc 01       	movw	r22, r24
    2070:	cd 01       	movw	r24, r26
    2072:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2076:	dc 01       	movw	r26, r24
    2078:	cb 01       	movw	r24, r22
    207a:	89 8f       	std	Y+25, r24	; 0x19
    207c:	9a 8f       	std	Y+26, r25	; 0x1a
    207e:	ab 8f       	std	Y+27, r26	; 0x1b
    2080:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/100;
    2082:	89 8d       	ldd	r24, Y+25	; 0x19
    2084:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2086:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2088:	bc 8d       	ldd	r27, Y+28	; 0x1c
    208a:	24 e6       	ldi	r18, 0x64	; 100
    208c:	30 e0       	ldi	r19, 0x00	; 0
    208e:	40 e0       	ldi	r20, 0x00	; 0
    2090:	50 e0       	ldi	r21, 0x00	; 0
    2092:	bc 01       	movw	r22, r24
    2094:	cd 01       	movw	r24, r26
    2096:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    209a:	da 01       	movw	r26, r20
    209c:	c9 01       	movw	r24, r18
    209e:	8d 8b       	std	Y+21, r24	; 0x15
    20a0:	9e 8b       	std	Y+22, r25	; 0x16
    20a2:	af 8b       	std	Y+23, r26	; 0x17
    20a4:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    20a6:	8d 89       	ldd	r24, Y+21	; 0x15
    20a8:	80 5d       	subi	r24, 0xD0	; 208
    20aa:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num2%100;
    20ae:	89 8d       	ldd	r24, Y+25	; 0x19
    20b0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    20b2:	ab 8d       	ldd	r26, Y+27	; 0x1b
    20b4:	bc 8d       	ldd	r27, Y+28	; 0x1c
    20b6:	24 e6       	ldi	r18, 0x64	; 100
    20b8:	30 e0       	ldi	r19, 0x00	; 0
    20ba:	40 e0       	ldi	r20, 0x00	; 0
    20bc:	50 e0       	ldi	r21, 0x00	; 0
    20be:	bc 01       	movw	r22, r24
    20c0:	cd 01       	movw	r24, r26
    20c2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    20c6:	dc 01       	movw	r26, r24
    20c8:	cb 01       	movw	r24, r22
    20ca:	89 8b       	std	Y+17, r24	; 0x11
    20cc:	9a 8b       	std	Y+18, r25	; 0x12
    20ce:	ab 8b       	std	Y+19, r26	; 0x13
    20d0:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/10;
    20d2:	89 89       	ldd	r24, Y+17	; 0x11
    20d4:	9a 89       	ldd	r25, Y+18	; 0x12
    20d6:	ab 89       	ldd	r26, Y+19	; 0x13
    20d8:	bc 89       	ldd	r27, Y+20	; 0x14
    20da:	2a e0       	ldi	r18, 0x0A	; 10
    20dc:	30 e0       	ldi	r19, 0x00	; 0
    20de:	40 e0       	ldi	r20, 0x00	; 0
    20e0:	50 e0       	ldi	r21, 0x00	; 0
    20e2:	bc 01       	movw	r22, r24
    20e4:	cd 01       	movw	r24, r26
    20e6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    20ea:	da 01       	movw	r26, r20
    20ec:	c9 01       	movw	r24, r18
    20ee:	8d 87       	std	Y+13, r24	; 0x0d
    20f0:	9e 87       	std	Y+14, r25	; 0x0e
    20f2:	af 87       	std	Y+15, r26	; 0x0f
    20f4:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    20f6:	8d 85       	ldd	r24, Y+13	; 0x0d
    20f8:	80 5d       	subi	r24, 0xD0	; 208
    20fa:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num4%10;
    20fe:	89 89       	ldd	r24, Y+17	; 0x11
    2100:	9a 89       	ldd	r25, Y+18	; 0x12
    2102:	ab 89       	ldd	r26, Y+19	; 0x13
    2104:	bc 89       	ldd	r27, Y+20	; 0x14
    2106:	2a e0       	ldi	r18, 0x0A	; 10
    2108:	30 e0       	ldi	r19, 0x00	; 0
    210a:	40 e0       	ldi	r20, 0x00	; 0
    210c:	50 e0       	ldi	r21, 0x00	; 0
    210e:	bc 01       	movw	r22, r24
    2110:	cd 01       	movw	r24, r26
    2112:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2116:	dc 01       	movw	r26, r24
    2118:	cb 01       	movw	r24, r22
    211a:	89 87       	std	Y+9, r24	; 0x09
    211c:	9a 87       	std	Y+10, r25	; 0x0a
    211e:	ab 87       	std	Y+11, r26	; 0x0b
    2120:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    2122:	89 85       	ldd	r24, Y+9	; 0x09
    2124:	80 5d       	subi	r24, 0xD0	; 208
    2126:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    212a:	3d c4       	rjmp	.+2170   	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	}
	else if (number>=10000 && number <100000)
    212c:	8b a1       	ldd	r24, Y+35	; 0x23
    212e:	9c a1       	ldd	r25, Y+36	; 0x24
    2130:	ad a1       	ldd	r26, Y+37	; 0x25
    2132:	be a1       	ldd	r27, Y+38	; 0x26
    2134:	80 31       	cpi	r24, 0x10	; 16
    2136:	27 e2       	ldi	r18, 0x27	; 39
    2138:	92 07       	cpc	r25, r18
    213a:	20 e0       	ldi	r18, 0x00	; 0
    213c:	a2 07       	cpc	r26, r18
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	b2 07       	cpc	r27, r18
    2142:	08 f4       	brcc	.+2      	; 0x2146 <LCD_viddisplayintegar+0x31e>
    2144:	c2 c0       	rjmp	.+388    	; 0x22ca <LCD_viddisplayintegar+0x4a2>
    2146:	8b a1       	ldd	r24, Y+35	; 0x23
    2148:	9c a1       	ldd	r25, Y+36	; 0x24
    214a:	ad a1       	ldd	r26, Y+37	; 0x25
    214c:	be a1       	ldd	r27, Y+38	; 0x26
    214e:	80 3a       	cpi	r24, 0xA0	; 160
    2150:	26 e8       	ldi	r18, 0x86	; 134
    2152:	92 07       	cpc	r25, r18
    2154:	21 e0       	ldi	r18, 0x01	; 1
    2156:	a2 07       	cpc	r26, r18
    2158:	20 e0       	ldi	r18, 0x00	; 0
    215a:	b2 07       	cpc	r27, r18
    215c:	08 f0       	brcs	.+2      	; 0x2160 <LCD_viddisplayintegar+0x338>
    215e:	b5 c0       	rjmp	.+362    	; 0x22ca <LCD_viddisplayintegar+0x4a2>
	{

		LCD_setcursorposition(line ,column);
    2160:	89 a1       	ldd	r24, Y+33	; 0x21
    2162:	6a a1       	ldd	r22, Y+34	; 0x22
    2164:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritecommand(cursorleft);
    2168:	80 e1       	ldi	r24, 0x10	; 16
    216a:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    216e:	80 e1       	ldi	r24, 0x10	; 16
    2170:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2174:	80 e1       	ldi	r24, 0x10	; 16
    2176:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    217a:	80 e1       	ldi	r24, 0x10	; 16
    217c:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		num1=number/10000;
    2180:	8b a1       	ldd	r24, Y+35	; 0x23
    2182:	9c a1       	ldd	r25, Y+36	; 0x24
    2184:	ad a1       	ldd	r26, Y+37	; 0x25
    2186:	be a1       	ldd	r27, Y+38	; 0x26
    2188:	20 e1       	ldi	r18, 0x10	; 16
    218a:	37 e2       	ldi	r19, 0x27	; 39
    218c:	40 e0       	ldi	r20, 0x00	; 0
    218e:	50 e0       	ldi	r21, 0x00	; 0
    2190:	bc 01       	movw	r22, r24
    2192:	cd 01       	movw	r24, r26
    2194:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2198:	da 01       	movw	r26, r20
    219a:	c9 01       	movw	r24, r18
    219c:	8d 8f       	std	Y+29, r24	; 0x1d
    219e:	9e 8f       	std	Y+30, r25	; 0x1e
    21a0:	af 8f       	std	Y+31, r26	; 0x1f
    21a2:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    21a4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21a6:	80 5d       	subi	r24, 0xD0	; 208
    21a8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%10000;
    21ac:	8b a1       	ldd	r24, Y+35	; 0x23
    21ae:	9c a1       	ldd	r25, Y+36	; 0x24
    21b0:	ad a1       	ldd	r26, Y+37	; 0x25
    21b2:	be a1       	ldd	r27, Y+38	; 0x26
    21b4:	20 e1       	ldi	r18, 0x10	; 16
    21b6:	37 e2       	ldi	r19, 0x27	; 39
    21b8:	40 e0       	ldi	r20, 0x00	; 0
    21ba:	50 e0       	ldi	r21, 0x00	; 0
    21bc:	bc 01       	movw	r22, r24
    21be:	cd 01       	movw	r24, r26
    21c0:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    21c4:	dc 01       	movw	r26, r24
    21c6:	cb 01       	movw	r24, r22
    21c8:	8d 8f       	std	Y+29, r24	; 0x1d
    21ca:	9e 8f       	std	Y+30, r25	; 0x1e
    21cc:	af 8f       	std	Y+31, r26	; 0x1f
    21ce:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/1000;
    21d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21d2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    21d4:	af 8d       	ldd	r26, Y+31	; 0x1f
    21d6:	b8 a1       	ldd	r27, Y+32	; 0x20
    21d8:	28 ee       	ldi	r18, 0xE8	; 232
    21da:	33 e0       	ldi	r19, 0x03	; 3
    21dc:	40 e0       	ldi	r20, 0x00	; 0
    21de:	50 e0       	ldi	r21, 0x00	; 0
    21e0:	bc 01       	movw	r22, r24
    21e2:	cd 01       	movw	r24, r26
    21e4:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    21e8:	da 01       	movw	r26, r20
    21ea:	c9 01       	movw	r24, r18
    21ec:	89 8f       	std	Y+25, r24	; 0x19
    21ee:	9a 8f       	std	Y+26, r25	; 0x1a
    21f0:	ab 8f       	std	Y+27, r26	; 0x1b
    21f2:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    21f4:	89 8d       	ldd	r24, Y+25	; 0x19
    21f6:	80 5d       	subi	r24, 0xD0	; 208
    21f8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%1000;
    21fc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21fe:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2200:	af 8d       	ldd	r26, Y+31	; 0x1f
    2202:	b8 a1       	ldd	r27, Y+32	; 0x20
    2204:	28 ee       	ldi	r18, 0xE8	; 232
    2206:	33 e0       	ldi	r19, 0x03	; 3
    2208:	40 e0       	ldi	r20, 0x00	; 0
    220a:	50 e0       	ldi	r21, 0x00	; 0
    220c:	bc 01       	movw	r22, r24
    220e:	cd 01       	movw	r24, r26
    2210:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2214:	dc 01       	movw	r26, r24
    2216:	cb 01       	movw	r24, r22
    2218:	89 8f       	std	Y+25, r24	; 0x19
    221a:	9a 8f       	std	Y+26, r25	; 0x1a
    221c:	ab 8f       	std	Y+27, r26	; 0x1b
    221e:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/100;
    2220:	89 8d       	ldd	r24, Y+25	; 0x19
    2222:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2224:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2226:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2228:	24 e6       	ldi	r18, 0x64	; 100
    222a:	30 e0       	ldi	r19, 0x00	; 0
    222c:	40 e0       	ldi	r20, 0x00	; 0
    222e:	50 e0       	ldi	r21, 0x00	; 0
    2230:	bc 01       	movw	r22, r24
    2232:	cd 01       	movw	r24, r26
    2234:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2238:	da 01       	movw	r26, r20
    223a:	c9 01       	movw	r24, r18
    223c:	8d 8b       	std	Y+21, r24	; 0x15
    223e:	9e 8b       	std	Y+22, r25	; 0x16
    2240:	af 8b       	std	Y+23, r26	; 0x17
    2242:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    2244:	8d 89       	ldd	r24, Y+21	; 0x15
    2246:	80 5d       	subi	r24, 0xD0	; 208
    2248:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num2%100;
    224c:	89 8d       	ldd	r24, Y+25	; 0x19
    224e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2250:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2252:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2254:	24 e6       	ldi	r18, 0x64	; 100
    2256:	30 e0       	ldi	r19, 0x00	; 0
    2258:	40 e0       	ldi	r20, 0x00	; 0
    225a:	50 e0       	ldi	r21, 0x00	; 0
    225c:	bc 01       	movw	r22, r24
    225e:	cd 01       	movw	r24, r26
    2260:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2264:	dc 01       	movw	r26, r24
    2266:	cb 01       	movw	r24, r22
    2268:	89 8b       	std	Y+17, r24	; 0x11
    226a:	9a 8b       	std	Y+18, r25	; 0x12
    226c:	ab 8b       	std	Y+19, r26	; 0x13
    226e:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/10;
    2270:	89 89       	ldd	r24, Y+17	; 0x11
    2272:	9a 89       	ldd	r25, Y+18	; 0x12
    2274:	ab 89       	ldd	r26, Y+19	; 0x13
    2276:	bc 89       	ldd	r27, Y+20	; 0x14
    2278:	2a e0       	ldi	r18, 0x0A	; 10
    227a:	30 e0       	ldi	r19, 0x00	; 0
    227c:	40 e0       	ldi	r20, 0x00	; 0
    227e:	50 e0       	ldi	r21, 0x00	; 0
    2280:	bc 01       	movw	r22, r24
    2282:	cd 01       	movw	r24, r26
    2284:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2288:	da 01       	movw	r26, r20
    228a:	c9 01       	movw	r24, r18
    228c:	8d 87       	std	Y+13, r24	; 0x0d
    228e:	9e 87       	std	Y+14, r25	; 0x0e
    2290:	af 87       	std	Y+15, r26	; 0x0f
    2292:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    2294:	8d 85       	ldd	r24, Y+13	; 0x0d
    2296:	80 5d       	subi	r24, 0xD0	; 208
    2298:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num4%10;
    229c:	89 89       	ldd	r24, Y+17	; 0x11
    229e:	9a 89       	ldd	r25, Y+18	; 0x12
    22a0:	ab 89       	ldd	r26, Y+19	; 0x13
    22a2:	bc 89       	ldd	r27, Y+20	; 0x14
    22a4:	2a e0       	ldi	r18, 0x0A	; 10
    22a6:	30 e0       	ldi	r19, 0x00	; 0
    22a8:	40 e0       	ldi	r20, 0x00	; 0
    22aa:	50 e0       	ldi	r21, 0x00	; 0
    22ac:	bc 01       	movw	r22, r24
    22ae:	cd 01       	movw	r24, r26
    22b0:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    22b4:	dc 01       	movw	r26, r24
    22b6:	cb 01       	movw	r24, r22
    22b8:	89 87       	std	Y+9, r24	; 0x09
    22ba:	9a 87       	std	Y+10, r25	; 0x0a
    22bc:	ab 87       	std	Y+11, r26	; 0x0b
    22be:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    22c0:	89 85       	ldd	r24, Y+9	; 0x09
    22c2:	80 5d       	subi	r24, 0xD0	; 208
    22c4:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    22c8:	6e c3       	rjmp	.+1756   	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	}
	else if (number>=100000 && number <1000000)
    22ca:	8b a1       	ldd	r24, Y+35	; 0x23
    22cc:	9c a1       	ldd	r25, Y+36	; 0x24
    22ce:	ad a1       	ldd	r26, Y+37	; 0x25
    22d0:	be a1       	ldd	r27, Y+38	; 0x26
    22d2:	80 3a       	cpi	r24, 0xA0	; 160
    22d4:	26 e8       	ldi	r18, 0x86	; 134
    22d6:	92 07       	cpc	r25, r18
    22d8:	21 e0       	ldi	r18, 0x01	; 1
    22da:	a2 07       	cpc	r26, r18
    22dc:	20 e0       	ldi	r18, 0x00	; 0
    22de:	b2 07       	cpc	r27, r18
    22e0:	08 f4       	brcc	.+2      	; 0x22e4 <LCD_viddisplayintegar+0x4bc>
    22e2:	ed c0       	rjmp	.+474    	; 0x24be <LCD_viddisplayintegar+0x696>
    22e4:	8b a1       	ldd	r24, Y+35	; 0x23
    22e6:	9c a1       	ldd	r25, Y+36	; 0x24
    22e8:	ad a1       	ldd	r26, Y+37	; 0x25
    22ea:	be a1       	ldd	r27, Y+38	; 0x26
    22ec:	80 34       	cpi	r24, 0x40	; 64
    22ee:	22 e4       	ldi	r18, 0x42	; 66
    22f0:	92 07       	cpc	r25, r18
    22f2:	2f e0       	ldi	r18, 0x0F	; 15
    22f4:	a2 07       	cpc	r26, r18
    22f6:	20 e0       	ldi	r18, 0x00	; 0
    22f8:	b2 07       	cpc	r27, r18
    22fa:	08 f0       	brcs	.+2      	; 0x22fe <LCD_viddisplayintegar+0x4d6>
    22fc:	e0 c0       	rjmp	.+448    	; 0x24be <LCD_viddisplayintegar+0x696>
	{

		LCD_setcursorposition(line ,column);
    22fe:	89 a1       	ldd	r24, Y+33	; 0x21
    2300:	6a a1       	ldd	r22, Y+34	; 0x22
    2302:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritecommand(cursorleft);
    2306:	80 e1       	ldi	r24, 0x10	; 16
    2308:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    230c:	80 e1       	ldi	r24, 0x10	; 16
    230e:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2312:	80 e1       	ldi	r24, 0x10	; 16
    2314:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2318:	80 e1       	ldi	r24, 0x10	; 16
    231a:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    231e:	80 e1       	ldi	r24, 0x10	; 16
    2320:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		num1=number/100000;
    2324:	8b a1       	ldd	r24, Y+35	; 0x23
    2326:	9c a1       	ldd	r25, Y+36	; 0x24
    2328:	ad a1       	ldd	r26, Y+37	; 0x25
    232a:	be a1       	ldd	r27, Y+38	; 0x26
    232c:	20 ea       	ldi	r18, 0xA0	; 160
    232e:	36 e8       	ldi	r19, 0x86	; 134
    2330:	41 e0       	ldi	r20, 0x01	; 1
    2332:	50 e0       	ldi	r21, 0x00	; 0
    2334:	bc 01       	movw	r22, r24
    2336:	cd 01       	movw	r24, r26
    2338:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    233c:	da 01       	movw	r26, r20
    233e:	c9 01       	movw	r24, r18
    2340:	8d 8f       	std	Y+29, r24	; 0x1d
    2342:	9e 8f       	std	Y+30, r25	; 0x1e
    2344:	af 8f       	std	Y+31, r26	; 0x1f
    2346:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2348:	8d 8d       	ldd	r24, Y+29	; 0x1d
    234a:	80 5d       	subi	r24, 0xD0	; 208
    234c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%100000;
    2350:	8b a1       	ldd	r24, Y+35	; 0x23
    2352:	9c a1       	ldd	r25, Y+36	; 0x24
    2354:	ad a1       	ldd	r26, Y+37	; 0x25
    2356:	be a1       	ldd	r27, Y+38	; 0x26
    2358:	20 ea       	ldi	r18, 0xA0	; 160
    235a:	36 e8       	ldi	r19, 0x86	; 134
    235c:	41 e0       	ldi	r20, 0x01	; 1
    235e:	50 e0       	ldi	r21, 0x00	; 0
    2360:	bc 01       	movw	r22, r24
    2362:	cd 01       	movw	r24, r26
    2364:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2368:	dc 01       	movw	r26, r24
    236a:	cb 01       	movw	r24, r22
    236c:	8d 8f       	std	Y+29, r24	; 0x1d
    236e:	9e 8f       	std	Y+30, r25	; 0x1e
    2370:	af 8f       	std	Y+31, r26	; 0x1f
    2372:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/10000;
    2374:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2376:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2378:	af 8d       	ldd	r26, Y+31	; 0x1f
    237a:	b8 a1       	ldd	r27, Y+32	; 0x20
    237c:	20 e1       	ldi	r18, 0x10	; 16
    237e:	37 e2       	ldi	r19, 0x27	; 39
    2380:	40 e0       	ldi	r20, 0x00	; 0
    2382:	50 e0       	ldi	r21, 0x00	; 0
    2384:	bc 01       	movw	r22, r24
    2386:	cd 01       	movw	r24, r26
    2388:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    238c:	da 01       	movw	r26, r20
    238e:	c9 01       	movw	r24, r18
    2390:	89 8f       	std	Y+25, r24	; 0x19
    2392:	9a 8f       	std	Y+26, r25	; 0x1a
    2394:	ab 8f       	std	Y+27, r26	; 0x1b
    2396:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    2398:	89 8d       	ldd	r24, Y+25	; 0x19
    239a:	80 5d       	subi	r24, 0xD0	; 208
    239c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%10000;
    23a0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    23a2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    23a4:	af 8d       	ldd	r26, Y+31	; 0x1f
    23a6:	b8 a1       	ldd	r27, Y+32	; 0x20
    23a8:	20 e1       	ldi	r18, 0x10	; 16
    23aa:	37 e2       	ldi	r19, 0x27	; 39
    23ac:	40 e0       	ldi	r20, 0x00	; 0
    23ae:	50 e0       	ldi	r21, 0x00	; 0
    23b0:	bc 01       	movw	r22, r24
    23b2:	cd 01       	movw	r24, r26
    23b4:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    23b8:	dc 01       	movw	r26, r24
    23ba:	cb 01       	movw	r24, r22
    23bc:	89 8f       	std	Y+25, r24	; 0x19
    23be:	9a 8f       	std	Y+26, r25	; 0x1a
    23c0:	ab 8f       	std	Y+27, r26	; 0x1b
    23c2:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/1000;
    23c4:	89 8d       	ldd	r24, Y+25	; 0x19
    23c6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    23c8:	ab 8d       	ldd	r26, Y+27	; 0x1b
    23ca:	bc 8d       	ldd	r27, Y+28	; 0x1c
    23cc:	28 ee       	ldi	r18, 0xE8	; 232
    23ce:	33 e0       	ldi	r19, 0x03	; 3
    23d0:	40 e0       	ldi	r20, 0x00	; 0
    23d2:	50 e0       	ldi	r21, 0x00	; 0
    23d4:	bc 01       	movw	r22, r24
    23d6:	cd 01       	movw	r24, r26
    23d8:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    23dc:	da 01       	movw	r26, r20
    23de:	c9 01       	movw	r24, r18
    23e0:	8d 8b       	std	Y+21, r24	; 0x15
    23e2:	9e 8b       	std	Y+22, r25	; 0x16
    23e4:	af 8b       	std	Y+23, r26	; 0x17
    23e6:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    23e8:	8d 89       	ldd	r24, Y+21	; 0x15
    23ea:	80 5d       	subi	r24, 0xD0	; 208
    23ec:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num3=num2%1000;
    23f0:	89 8d       	ldd	r24, Y+25	; 0x19
    23f2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    23f4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    23f6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    23f8:	28 ee       	ldi	r18, 0xE8	; 232
    23fa:	33 e0       	ldi	r19, 0x03	; 3
    23fc:	40 e0       	ldi	r20, 0x00	; 0
    23fe:	50 e0       	ldi	r21, 0x00	; 0
    2400:	bc 01       	movw	r22, r24
    2402:	cd 01       	movw	r24, r26
    2404:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2408:	dc 01       	movw	r26, r24
    240a:	cb 01       	movw	r24, r22
    240c:	8d 8b       	std	Y+21, r24	; 0x15
    240e:	9e 8b       	std	Y+22, r25	; 0x16
    2410:	af 8b       	std	Y+23, r26	; 0x17
    2412:	b8 8f       	std	Y+24, r27	; 0x18
		num4=num3/100;
    2414:	8d 89       	ldd	r24, Y+21	; 0x15
    2416:	9e 89       	ldd	r25, Y+22	; 0x16
    2418:	af 89       	ldd	r26, Y+23	; 0x17
    241a:	b8 8d       	ldd	r27, Y+24	; 0x18
    241c:	24 e6       	ldi	r18, 0x64	; 100
    241e:	30 e0       	ldi	r19, 0x00	; 0
    2420:	40 e0       	ldi	r20, 0x00	; 0
    2422:	50 e0       	ldi	r21, 0x00	; 0
    2424:	bc 01       	movw	r22, r24
    2426:	cd 01       	movw	r24, r26
    2428:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    242c:	da 01       	movw	r26, r20
    242e:	c9 01       	movw	r24, r18
    2430:	89 8b       	std	Y+17, r24	; 0x11
    2432:	9a 8b       	std	Y+18, r25	; 0x12
    2434:	ab 8b       	std	Y+19, r26	; 0x13
    2436:	bc 8b       	std	Y+20, r27	; 0x14
		LCD_vidwritedata(num4+48);
    2438:	89 89       	ldd	r24, Y+17	; 0x11
    243a:	80 5d       	subi	r24, 0xD0	; 208
    243c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num3%100;
    2440:	8d 89       	ldd	r24, Y+21	; 0x15
    2442:	9e 89       	ldd	r25, Y+22	; 0x16
    2444:	af 89       	ldd	r26, Y+23	; 0x17
    2446:	b8 8d       	ldd	r27, Y+24	; 0x18
    2448:	24 e6       	ldi	r18, 0x64	; 100
    244a:	30 e0       	ldi	r19, 0x00	; 0
    244c:	40 e0       	ldi	r20, 0x00	; 0
    244e:	50 e0       	ldi	r21, 0x00	; 0
    2450:	bc 01       	movw	r22, r24
    2452:	cd 01       	movw	r24, r26
    2454:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2458:	dc 01       	movw	r26, r24
    245a:	cb 01       	movw	r24, r22
    245c:	89 8b       	std	Y+17, r24	; 0x11
    245e:	9a 8b       	std	Y+18, r25	; 0x12
    2460:	ab 8b       	std	Y+19, r26	; 0x13
    2462:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/10;
    2464:	89 89       	ldd	r24, Y+17	; 0x11
    2466:	9a 89       	ldd	r25, Y+18	; 0x12
    2468:	ab 89       	ldd	r26, Y+19	; 0x13
    246a:	bc 89       	ldd	r27, Y+20	; 0x14
    246c:	2a e0       	ldi	r18, 0x0A	; 10
    246e:	30 e0       	ldi	r19, 0x00	; 0
    2470:	40 e0       	ldi	r20, 0x00	; 0
    2472:	50 e0       	ldi	r21, 0x00	; 0
    2474:	bc 01       	movw	r22, r24
    2476:	cd 01       	movw	r24, r26
    2478:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    247c:	da 01       	movw	r26, r20
    247e:	c9 01       	movw	r24, r18
    2480:	8d 87       	std	Y+13, r24	; 0x0d
    2482:	9e 87       	std	Y+14, r25	; 0x0e
    2484:	af 87       	std	Y+15, r26	; 0x0f
    2486:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    2488:	8d 85       	ldd	r24, Y+13	; 0x0d
    248a:	80 5d       	subi	r24, 0xD0	; 208
    248c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num4%10;
    2490:	89 89       	ldd	r24, Y+17	; 0x11
    2492:	9a 89       	ldd	r25, Y+18	; 0x12
    2494:	ab 89       	ldd	r26, Y+19	; 0x13
    2496:	bc 89       	ldd	r27, Y+20	; 0x14
    2498:	2a e0       	ldi	r18, 0x0A	; 10
    249a:	30 e0       	ldi	r19, 0x00	; 0
    249c:	40 e0       	ldi	r20, 0x00	; 0
    249e:	50 e0       	ldi	r21, 0x00	; 0
    24a0:	bc 01       	movw	r22, r24
    24a2:	cd 01       	movw	r24, r26
    24a4:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    24a8:	dc 01       	movw	r26, r24
    24aa:	cb 01       	movw	r24, r22
    24ac:	89 87       	std	Y+9, r24	; 0x09
    24ae:	9a 87       	std	Y+10, r25	; 0x0a
    24b0:	ab 87       	std	Y+11, r26	; 0x0b
    24b2:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    24b4:	89 85       	ldd	r24, Y+9	; 0x09
    24b6:	80 5d       	subi	r24, 0xD0	; 208
    24b8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    24bc:	74 c2       	rjmp	.+1256   	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	}
	else if (number>=1000000 && number <10000000)
    24be:	8b a1       	ldd	r24, Y+35	; 0x23
    24c0:	9c a1       	ldd	r25, Y+36	; 0x24
    24c2:	ad a1       	ldd	r26, Y+37	; 0x25
    24c4:	be a1       	ldd	r27, Y+38	; 0x26
    24c6:	80 34       	cpi	r24, 0x40	; 64
    24c8:	22 e4       	ldi	r18, 0x42	; 66
    24ca:	92 07       	cpc	r25, r18
    24cc:	2f e0       	ldi	r18, 0x0F	; 15
    24ce:	a2 07       	cpc	r26, r18
    24d0:	20 e0       	ldi	r18, 0x00	; 0
    24d2:	b2 07       	cpc	r27, r18
    24d4:	08 f4       	brcc	.+2      	; 0x24d8 <LCD_viddisplayintegar+0x6b0>
    24d6:	18 c1       	rjmp	.+560    	; 0x2708 <LCD_viddisplayintegar+0x8e0>
    24d8:	8b a1       	ldd	r24, Y+35	; 0x23
    24da:	9c a1       	ldd	r25, Y+36	; 0x24
    24dc:	ad a1       	ldd	r26, Y+37	; 0x25
    24de:	be a1       	ldd	r27, Y+38	; 0x26
    24e0:	80 38       	cpi	r24, 0x80	; 128
    24e2:	26 e9       	ldi	r18, 0x96	; 150
    24e4:	92 07       	cpc	r25, r18
    24e6:	28 e9       	ldi	r18, 0x98	; 152
    24e8:	a2 07       	cpc	r26, r18
    24ea:	20 e0       	ldi	r18, 0x00	; 0
    24ec:	b2 07       	cpc	r27, r18
    24ee:	08 f0       	brcs	.+2      	; 0x24f2 <LCD_viddisplayintegar+0x6ca>
    24f0:	0b c1       	rjmp	.+534    	; 0x2708 <LCD_viddisplayintegar+0x8e0>
	{

		LCD_setcursorposition(line ,column);
    24f2:	89 a1       	ldd	r24, Y+33	; 0x21
    24f4:	6a a1       	ldd	r22, Y+34	; 0x22
    24f6:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritecommand(cursorleft);
    24fa:	80 e1       	ldi	r24, 0x10	; 16
    24fc:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2500:	80 e1       	ldi	r24, 0x10	; 16
    2502:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2506:	80 e1       	ldi	r24, 0x10	; 16
    2508:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    250c:	80 e1       	ldi	r24, 0x10	; 16
    250e:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2512:	80 e1       	ldi	r24, 0x10	; 16
    2514:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2518:	80 e1       	ldi	r24, 0x10	; 16
    251a:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		num1=number/1000000;
    251e:	8b a1       	ldd	r24, Y+35	; 0x23
    2520:	9c a1       	ldd	r25, Y+36	; 0x24
    2522:	ad a1       	ldd	r26, Y+37	; 0x25
    2524:	be a1       	ldd	r27, Y+38	; 0x26
    2526:	20 e4       	ldi	r18, 0x40	; 64
    2528:	32 e4       	ldi	r19, 0x42	; 66
    252a:	4f e0       	ldi	r20, 0x0F	; 15
    252c:	50 e0       	ldi	r21, 0x00	; 0
    252e:	bc 01       	movw	r22, r24
    2530:	cd 01       	movw	r24, r26
    2532:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2536:	da 01       	movw	r26, r20
    2538:	c9 01       	movw	r24, r18
    253a:	8d 8f       	std	Y+29, r24	; 0x1d
    253c:	9e 8f       	std	Y+30, r25	; 0x1e
    253e:	af 8f       	std	Y+31, r26	; 0x1f
    2540:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2542:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2544:	80 5d       	subi	r24, 0xD0	; 208
    2546:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%1000000;
    254a:	8b a1       	ldd	r24, Y+35	; 0x23
    254c:	9c a1       	ldd	r25, Y+36	; 0x24
    254e:	ad a1       	ldd	r26, Y+37	; 0x25
    2550:	be a1       	ldd	r27, Y+38	; 0x26
    2552:	20 e4       	ldi	r18, 0x40	; 64
    2554:	32 e4       	ldi	r19, 0x42	; 66
    2556:	4f e0       	ldi	r20, 0x0F	; 15
    2558:	50 e0       	ldi	r21, 0x00	; 0
    255a:	bc 01       	movw	r22, r24
    255c:	cd 01       	movw	r24, r26
    255e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2562:	dc 01       	movw	r26, r24
    2564:	cb 01       	movw	r24, r22
    2566:	8d 8f       	std	Y+29, r24	; 0x1d
    2568:	9e 8f       	std	Y+30, r25	; 0x1e
    256a:	af 8f       	std	Y+31, r26	; 0x1f
    256c:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/100000;
    256e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2570:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2572:	af 8d       	ldd	r26, Y+31	; 0x1f
    2574:	b8 a1       	ldd	r27, Y+32	; 0x20
    2576:	20 ea       	ldi	r18, 0xA0	; 160
    2578:	36 e8       	ldi	r19, 0x86	; 134
    257a:	41 e0       	ldi	r20, 0x01	; 1
    257c:	50 e0       	ldi	r21, 0x00	; 0
    257e:	bc 01       	movw	r22, r24
    2580:	cd 01       	movw	r24, r26
    2582:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2586:	da 01       	movw	r26, r20
    2588:	c9 01       	movw	r24, r18
    258a:	89 8f       	std	Y+25, r24	; 0x19
    258c:	9a 8f       	std	Y+26, r25	; 0x1a
    258e:	ab 8f       	std	Y+27, r26	; 0x1b
    2590:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    2592:	89 8d       	ldd	r24, Y+25	; 0x19
    2594:	80 5d       	subi	r24, 0xD0	; 208
    2596:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%100000;
    259a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    259c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    259e:	af 8d       	ldd	r26, Y+31	; 0x1f
    25a0:	b8 a1       	ldd	r27, Y+32	; 0x20
    25a2:	20 ea       	ldi	r18, 0xA0	; 160
    25a4:	36 e8       	ldi	r19, 0x86	; 134
    25a6:	41 e0       	ldi	r20, 0x01	; 1
    25a8:	50 e0       	ldi	r21, 0x00	; 0
    25aa:	bc 01       	movw	r22, r24
    25ac:	cd 01       	movw	r24, r26
    25ae:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    25b2:	dc 01       	movw	r26, r24
    25b4:	cb 01       	movw	r24, r22
    25b6:	89 8f       	std	Y+25, r24	; 0x19
    25b8:	9a 8f       	std	Y+26, r25	; 0x1a
    25ba:	ab 8f       	std	Y+27, r26	; 0x1b
    25bc:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/10000;
    25be:	89 8d       	ldd	r24, Y+25	; 0x19
    25c0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    25c2:	ab 8d       	ldd	r26, Y+27	; 0x1b
    25c4:	bc 8d       	ldd	r27, Y+28	; 0x1c
    25c6:	20 e1       	ldi	r18, 0x10	; 16
    25c8:	37 e2       	ldi	r19, 0x27	; 39
    25ca:	40 e0       	ldi	r20, 0x00	; 0
    25cc:	50 e0       	ldi	r21, 0x00	; 0
    25ce:	bc 01       	movw	r22, r24
    25d0:	cd 01       	movw	r24, r26
    25d2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    25d6:	da 01       	movw	r26, r20
    25d8:	c9 01       	movw	r24, r18
    25da:	8d 8b       	std	Y+21, r24	; 0x15
    25dc:	9e 8b       	std	Y+22, r25	; 0x16
    25de:	af 8b       	std	Y+23, r26	; 0x17
    25e0:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    25e2:	8d 89       	ldd	r24, Y+21	; 0x15
    25e4:	80 5d       	subi	r24, 0xD0	; 208
    25e6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num3=num2%10000;
    25ea:	89 8d       	ldd	r24, Y+25	; 0x19
    25ec:	9a 8d       	ldd	r25, Y+26	; 0x1a
    25ee:	ab 8d       	ldd	r26, Y+27	; 0x1b
    25f0:	bc 8d       	ldd	r27, Y+28	; 0x1c
    25f2:	20 e1       	ldi	r18, 0x10	; 16
    25f4:	37 e2       	ldi	r19, 0x27	; 39
    25f6:	40 e0       	ldi	r20, 0x00	; 0
    25f8:	50 e0       	ldi	r21, 0x00	; 0
    25fa:	bc 01       	movw	r22, r24
    25fc:	cd 01       	movw	r24, r26
    25fe:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2602:	dc 01       	movw	r26, r24
    2604:	cb 01       	movw	r24, r22
    2606:	8d 8b       	std	Y+21, r24	; 0x15
    2608:	9e 8b       	std	Y+22, r25	; 0x16
    260a:	af 8b       	std	Y+23, r26	; 0x17
    260c:	b8 8f       	std	Y+24, r27	; 0x18
		num4=num3/1000;
    260e:	8d 89       	ldd	r24, Y+21	; 0x15
    2610:	9e 89       	ldd	r25, Y+22	; 0x16
    2612:	af 89       	ldd	r26, Y+23	; 0x17
    2614:	b8 8d       	ldd	r27, Y+24	; 0x18
    2616:	28 ee       	ldi	r18, 0xE8	; 232
    2618:	33 e0       	ldi	r19, 0x03	; 3
    261a:	40 e0       	ldi	r20, 0x00	; 0
    261c:	50 e0       	ldi	r21, 0x00	; 0
    261e:	bc 01       	movw	r22, r24
    2620:	cd 01       	movw	r24, r26
    2622:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2626:	da 01       	movw	r26, r20
    2628:	c9 01       	movw	r24, r18
    262a:	89 8b       	std	Y+17, r24	; 0x11
    262c:	9a 8b       	std	Y+18, r25	; 0x12
    262e:	ab 8b       	std	Y+19, r26	; 0x13
    2630:	bc 8b       	std	Y+20, r27	; 0x14
		LCD_vidwritedata(num4+48);
    2632:	89 89       	ldd	r24, Y+17	; 0x11
    2634:	80 5d       	subi	r24, 0xD0	; 208
    2636:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num3%1000;
    263a:	8d 89       	ldd	r24, Y+21	; 0x15
    263c:	9e 89       	ldd	r25, Y+22	; 0x16
    263e:	af 89       	ldd	r26, Y+23	; 0x17
    2640:	b8 8d       	ldd	r27, Y+24	; 0x18
    2642:	28 ee       	ldi	r18, 0xE8	; 232
    2644:	33 e0       	ldi	r19, 0x03	; 3
    2646:	40 e0       	ldi	r20, 0x00	; 0
    2648:	50 e0       	ldi	r21, 0x00	; 0
    264a:	bc 01       	movw	r22, r24
    264c:	cd 01       	movw	r24, r26
    264e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2652:	dc 01       	movw	r26, r24
    2654:	cb 01       	movw	r24, r22
    2656:	89 8b       	std	Y+17, r24	; 0x11
    2658:	9a 8b       	std	Y+18, r25	; 0x12
    265a:	ab 8b       	std	Y+19, r26	; 0x13
    265c:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/100;
    265e:	89 89       	ldd	r24, Y+17	; 0x11
    2660:	9a 89       	ldd	r25, Y+18	; 0x12
    2662:	ab 89       	ldd	r26, Y+19	; 0x13
    2664:	bc 89       	ldd	r27, Y+20	; 0x14
    2666:	24 e6       	ldi	r18, 0x64	; 100
    2668:	30 e0       	ldi	r19, 0x00	; 0
    266a:	40 e0       	ldi	r20, 0x00	; 0
    266c:	50 e0       	ldi	r21, 0x00	; 0
    266e:	bc 01       	movw	r22, r24
    2670:	cd 01       	movw	r24, r26
    2672:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2676:	da 01       	movw	r26, r20
    2678:	c9 01       	movw	r24, r18
    267a:	8d 87       	std	Y+13, r24	; 0x0d
    267c:	9e 87       	std	Y+14, r25	; 0x0e
    267e:	af 87       	std	Y+15, r26	; 0x0f
    2680:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    2682:	8d 85       	ldd	r24, Y+13	; 0x0d
    2684:	80 5d       	subi	r24, 0xD0	; 208
    2686:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num5=num4%100;
    268a:	89 89       	ldd	r24, Y+17	; 0x11
    268c:	9a 89       	ldd	r25, Y+18	; 0x12
    268e:	ab 89       	ldd	r26, Y+19	; 0x13
    2690:	bc 89       	ldd	r27, Y+20	; 0x14
    2692:	24 e6       	ldi	r18, 0x64	; 100
    2694:	30 e0       	ldi	r19, 0x00	; 0
    2696:	40 e0       	ldi	r20, 0x00	; 0
    2698:	50 e0       	ldi	r21, 0x00	; 0
    269a:	bc 01       	movw	r22, r24
    269c:	cd 01       	movw	r24, r26
    269e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    26a2:	dc 01       	movw	r26, r24
    26a4:	cb 01       	movw	r24, r22
    26a6:	8d 87       	std	Y+13, r24	; 0x0d
    26a8:	9e 87       	std	Y+14, r25	; 0x0e
    26aa:	af 87       	std	Y+15, r26	; 0x0f
    26ac:	b8 8b       	std	Y+16, r27	; 0x10
		num6=num5/10;
    26ae:	8d 85       	ldd	r24, Y+13	; 0x0d
    26b0:	9e 85       	ldd	r25, Y+14	; 0x0e
    26b2:	af 85       	ldd	r26, Y+15	; 0x0f
    26b4:	b8 89       	ldd	r27, Y+16	; 0x10
    26b6:	2a e0       	ldi	r18, 0x0A	; 10
    26b8:	30 e0       	ldi	r19, 0x00	; 0
    26ba:	40 e0       	ldi	r20, 0x00	; 0
    26bc:	50 e0       	ldi	r21, 0x00	; 0
    26be:	bc 01       	movw	r22, r24
    26c0:	cd 01       	movw	r24, r26
    26c2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    26c6:	da 01       	movw	r26, r20
    26c8:	c9 01       	movw	r24, r18
    26ca:	89 87       	std	Y+9, r24	; 0x09
    26cc:	9a 87       	std	Y+10, r25	; 0x0a
    26ce:	ab 87       	std	Y+11, r26	; 0x0b
    26d0:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    26d2:	89 85       	ldd	r24, Y+9	; 0x09
    26d4:	80 5d       	subi	r24, 0xD0	; 208
    26d6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num5%10;
    26da:	8d 85       	ldd	r24, Y+13	; 0x0d
    26dc:	9e 85       	ldd	r25, Y+14	; 0x0e
    26de:	af 85       	ldd	r26, Y+15	; 0x0f
    26e0:	b8 89       	ldd	r27, Y+16	; 0x10
    26e2:	2a e0       	ldi	r18, 0x0A	; 10
    26e4:	30 e0       	ldi	r19, 0x00	; 0
    26e6:	40 e0       	ldi	r20, 0x00	; 0
    26e8:	50 e0       	ldi	r21, 0x00	; 0
    26ea:	bc 01       	movw	r22, r24
    26ec:	cd 01       	movw	r24, r26
    26ee:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    26f2:	dc 01       	movw	r26, r24
    26f4:	cb 01       	movw	r24, r22
    26f6:	89 87       	std	Y+9, r24	; 0x09
    26f8:	9a 87       	std	Y+10, r25	; 0x0a
    26fa:	ab 87       	std	Y+11, r26	; 0x0b
    26fc:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    26fe:	89 85       	ldd	r24, Y+9	; 0x09
    2700:	80 5d       	subi	r24, 0xD0	; 208
    2702:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    2706:	4f c1       	rjmp	.+670    	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	}
	else if (number>=10000000 && number <100000000)
    2708:	8b a1       	ldd	r24, Y+35	; 0x23
    270a:	9c a1       	ldd	r25, Y+36	; 0x24
    270c:	ad a1       	ldd	r26, Y+37	; 0x25
    270e:	be a1       	ldd	r27, Y+38	; 0x26
    2710:	80 38       	cpi	r24, 0x80	; 128
    2712:	26 e9       	ldi	r18, 0x96	; 150
    2714:	92 07       	cpc	r25, r18
    2716:	28 e9       	ldi	r18, 0x98	; 152
    2718:	a2 07       	cpc	r26, r18
    271a:	20 e0       	ldi	r18, 0x00	; 0
    271c:	b2 07       	cpc	r27, r18
    271e:	08 f4       	brcc	.+2      	; 0x2722 <LCD_viddisplayintegar+0x8fa>
    2720:	42 c1       	rjmp	.+644    	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
    2722:	8b a1       	ldd	r24, Y+35	; 0x23
    2724:	9c a1       	ldd	r25, Y+36	; 0x24
    2726:	ad a1       	ldd	r26, Y+37	; 0x25
    2728:	be a1       	ldd	r27, Y+38	; 0x26
    272a:	80 30       	cpi	r24, 0x00	; 0
    272c:	21 ee       	ldi	r18, 0xE1	; 225
    272e:	92 07       	cpc	r25, r18
    2730:	25 ef       	ldi	r18, 0xF5	; 245
    2732:	a2 07       	cpc	r26, r18
    2734:	25 e0       	ldi	r18, 0x05	; 5
    2736:	b2 07       	cpc	r27, r18
    2738:	08 f0       	brcs	.+2      	; 0x273c <LCD_viddisplayintegar+0x914>
    273a:	35 c1       	rjmp	.+618    	; 0x29a6 <LCD_viddisplayintegar+0xb7e>
	{

		LCD_setcursorposition(line ,column);
    273c:	89 a1       	ldd	r24, Y+33	; 0x21
    273e:	6a a1       	ldd	r22, Y+34	; 0x22
    2740:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritecommand(cursorleft);
    2744:	80 e1       	ldi	r24, 0x10	; 16
    2746:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    274a:	80 e1       	ldi	r24, 0x10	; 16
    274c:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2750:	80 e1       	ldi	r24, 0x10	; 16
    2752:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2756:	80 e1       	ldi	r24, 0x10	; 16
    2758:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    275c:	80 e1       	ldi	r24, 0x10	; 16
    275e:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2762:	80 e1       	ldi	r24, 0x10	; 16
    2764:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		LCD_vidwritecommand(cursorleft);
    2768:	80 e1       	ldi	r24, 0x10	; 16
    276a:	0e 94 ce 09 	call	0x139c	; 0x139c <LCD_vidwritecommand>
		num1=number/10000000;
    276e:	8b a1       	ldd	r24, Y+35	; 0x23
    2770:	9c a1       	ldd	r25, Y+36	; 0x24
    2772:	ad a1       	ldd	r26, Y+37	; 0x25
    2774:	be a1       	ldd	r27, Y+38	; 0x26
    2776:	20 e8       	ldi	r18, 0x80	; 128
    2778:	36 e9       	ldi	r19, 0x96	; 150
    277a:	48 e9       	ldi	r20, 0x98	; 152
    277c:	50 e0       	ldi	r21, 0x00	; 0
    277e:	bc 01       	movw	r22, r24
    2780:	cd 01       	movw	r24, r26
    2782:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2786:	da 01       	movw	r26, r20
    2788:	c9 01       	movw	r24, r18
    278a:	8d 8f       	std	Y+29, r24	; 0x1d
    278c:	9e 8f       	std	Y+30, r25	; 0x1e
    278e:	af 8f       	std	Y+31, r26	; 0x1f
    2790:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2792:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2794:	80 5d       	subi	r24, 0xD0	; 208
    2796:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%10000000;
    279a:	8b a1       	ldd	r24, Y+35	; 0x23
    279c:	9c a1       	ldd	r25, Y+36	; 0x24
    279e:	ad a1       	ldd	r26, Y+37	; 0x25
    27a0:	be a1       	ldd	r27, Y+38	; 0x26
    27a2:	20 e8       	ldi	r18, 0x80	; 128
    27a4:	36 e9       	ldi	r19, 0x96	; 150
    27a6:	48 e9       	ldi	r20, 0x98	; 152
    27a8:	50 e0       	ldi	r21, 0x00	; 0
    27aa:	bc 01       	movw	r22, r24
    27ac:	cd 01       	movw	r24, r26
    27ae:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    27b2:	dc 01       	movw	r26, r24
    27b4:	cb 01       	movw	r24, r22
    27b6:	8d 8f       	std	Y+29, r24	; 0x1d
    27b8:	9e 8f       	std	Y+30, r25	; 0x1e
    27ba:	af 8f       	std	Y+31, r26	; 0x1f
    27bc:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/1000000;
    27be:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27c0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    27c2:	af 8d       	ldd	r26, Y+31	; 0x1f
    27c4:	b8 a1       	ldd	r27, Y+32	; 0x20
    27c6:	20 e4       	ldi	r18, 0x40	; 64
    27c8:	32 e4       	ldi	r19, 0x42	; 66
    27ca:	4f e0       	ldi	r20, 0x0F	; 15
    27cc:	50 e0       	ldi	r21, 0x00	; 0
    27ce:	bc 01       	movw	r22, r24
    27d0:	cd 01       	movw	r24, r26
    27d2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    27d6:	da 01       	movw	r26, r20
    27d8:	c9 01       	movw	r24, r18
    27da:	89 8f       	std	Y+25, r24	; 0x19
    27dc:	9a 8f       	std	Y+26, r25	; 0x1a
    27de:	ab 8f       	std	Y+27, r26	; 0x1b
    27e0:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    27e2:	89 8d       	ldd	r24, Y+25	; 0x19
    27e4:	80 5d       	subi	r24, 0xD0	; 208
    27e6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%1000000;
    27ea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    27ec:	9e 8d       	ldd	r25, Y+30	; 0x1e
    27ee:	af 8d       	ldd	r26, Y+31	; 0x1f
    27f0:	b8 a1       	ldd	r27, Y+32	; 0x20
    27f2:	20 e4       	ldi	r18, 0x40	; 64
    27f4:	32 e4       	ldi	r19, 0x42	; 66
    27f6:	4f e0       	ldi	r20, 0x0F	; 15
    27f8:	50 e0       	ldi	r21, 0x00	; 0
    27fa:	bc 01       	movw	r22, r24
    27fc:	cd 01       	movw	r24, r26
    27fe:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2802:	dc 01       	movw	r26, r24
    2804:	cb 01       	movw	r24, r22
    2806:	89 8f       	std	Y+25, r24	; 0x19
    2808:	9a 8f       	std	Y+26, r25	; 0x1a
    280a:	ab 8f       	std	Y+27, r26	; 0x1b
    280c:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num3/100000;
    280e:	8d 89       	ldd	r24, Y+21	; 0x15
    2810:	9e 89       	ldd	r25, Y+22	; 0x16
    2812:	af 89       	ldd	r26, Y+23	; 0x17
    2814:	b8 8d       	ldd	r27, Y+24	; 0x18
    2816:	20 ea       	ldi	r18, 0xA0	; 160
    2818:	36 e8       	ldi	r19, 0x86	; 134
    281a:	41 e0       	ldi	r20, 0x01	; 1
    281c:	50 e0       	ldi	r21, 0x00	; 0
    281e:	bc 01       	movw	r22, r24
    2820:	cd 01       	movw	r24, r26
    2822:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2826:	da 01       	movw	r26, r20
    2828:	c9 01       	movw	r24, r18
    282a:	8d 8b       	std	Y+21, r24	; 0x15
    282c:	9e 8b       	std	Y+22, r25	; 0x16
    282e:	af 8b       	std	Y+23, r26	; 0x17
    2830:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    2832:	8d 89       	ldd	r24, Y+21	; 0x15
    2834:	80 5d       	subi	r24, 0xD0	; 208
    2836:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num3=num2%100000;
    283a:	89 8d       	ldd	r24, Y+25	; 0x19
    283c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    283e:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2840:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2842:	20 ea       	ldi	r18, 0xA0	; 160
    2844:	36 e8       	ldi	r19, 0x86	; 134
    2846:	41 e0       	ldi	r20, 0x01	; 1
    2848:	50 e0       	ldi	r21, 0x00	; 0
    284a:	bc 01       	movw	r22, r24
    284c:	cd 01       	movw	r24, r26
    284e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2852:	dc 01       	movw	r26, r24
    2854:	cb 01       	movw	r24, r22
    2856:	8d 8b       	std	Y+21, r24	; 0x15
    2858:	9e 8b       	std	Y+22, r25	; 0x16
    285a:	af 8b       	std	Y+23, r26	; 0x17
    285c:	b8 8f       	std	Y+24, r27	; 0x18
		num4=num3/10000;
    285e:	8d 89       	ldd	r24, Y+21	; 0x15
    2860:	9e 89       	ldd	r25, Y+22	; 0x16
    2862:	af 89       	ldd	r26, Y+23	; 0x17
    2864:	b8 8d       	ldd	r27, Y+24	; 0x18
    2866:	20 e1       	ldi	r18, 0x10	; 16
    2868:	37 e2       	ldi	r19, 0x27	; 39
    286a:	40 e0       	ldi	r20, 0x00	; 0
    286c:	50 e0       	ldi	r21, 0x00	; 0
    286e:	bc 01       	movw	r22, r24
    2870:	cd 01       	movw	r24, r26
    2872:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2876:	da 01       	movw	r26, r20
    2878:	c9 01       	movw	r24, r18
    287a:	89 8b       	std	Y+17, r24	; 0x11
    287c:	9a 8b       	std	Y+18, r25	; 0x12
    287e:	ab 8b       	std	Y+19, r26	; 0x13
    2880:	bc 8b       	std	Y+20, r27	; 0x14
		LCD_vidwritedata(num4+48);
    2882:	89 89       	ldd	r24, Y+17	; 0x11
    2884:	80 5d       	subi	r24, 0xD0	; 208
    2886:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num3%10000;
    288a:	8d 89       	ldd	r24, Y+21	; 0x15
    288c:	9e 89       	ldd	r25, Y+22	; 0x16
    288e:	af 89       	ldd	r26, Y+23	; 0x17
    2890:	b8 8d       	ldd	r27, Y+24	; 0x18
    2892:	20 e1       	ldi	r18, 0x10	; 16
    2894:	37 e2       	ldi	r19, 0x27	; 39
    2896:	40 e0       	ldi	r20, 0x00	; 0
    2898:	50 e0       	ldi	r21, 0x00	; 0
    289a:	bc 01       	movw	r22, r24
    289c:	cd 01       	movw	r24, r26
    289e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    28a2:	dc 01       	movw	r26, r24
    28a4:	cb 01       	movw	r24, r22
    28a6:	89 8b       	std	Y+17, r24	; 0x11
    28a8:	9a 8b       	std	Y+18, r25	; 0x12
    28aa:	ab 8b       	std	Y+19, r26	; 0x13
    28ac:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/1000;
    28ae:	89 89       	ldd	r24, Y+17	; 0x11
    28b0:	9a 89       	ldd	r25, Y+18	; 0x12
    28b2:	ab 89       	ldd	r26, Y+19	; 0x13
    28b4:	bc 89       	ldd	r27, Y+20	; 0x14
    28b6:	28 ee       	ldi	r18, 0xE8	; 232
    28b8:	33 e0       	ldi	r19, 0x03	; 3
    28ba:	40 e0       	ldi	r20, 0x00	; 0
    28bc:	50 e0       	ldi	r21, 0x00	; 0
    28be:	bc 01       	movw	r22, r24
    28c0:	cd 01       	movw	r24, r26
    28c2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    28c6:	da 01       	movw	r26, r20
    28c8:	c9 01       	movw	r24, r18
    28ca:	8d 87       	std	Y+13, r24	; 0x0d
    28cc:	9e 87       	std	Y+14, r25	; 0x0e
    28ce:	af 87       	std	Y+15, r26	; 0x0f
    28d0:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    28d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    28d4:	80 5d       	subi	r24, 0xD0	; 208
    28d6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num5=num4%1000;
    28da:	89 89       	ldd	r24, Y+17	; 0x11
    28dc:	9a 89       	ldd	r25, Y+18	; 0x12
    28de:	ab 89       	ldd	r26, Y+19	; 0x13
    28e0:	bc 89       	ldd	r27, Y+20	; 0x14
    28e2:	28 ee       	ldi	r18, 0xE8	; 232
    28e4:	33 e0       	ldi	r19, 0x03	; 3
    28e6:	40 e0       	ldi	r20, 0x00	; 0
    28e8:	50 e0       	ldi	r21, 0x00	; 0
    28ea:	bc 01       	movw	r22, r24
    28ec:	cd 01       	movw	r24, r26
    28ee:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    28f2:	dc 01       	movw	r26, r24
    28f4:	cb 01       	movw	r24, r22
    28f6:	8d 87       	std	Y+13, r24	; 0x0d
    28f8:	9e 87       	std	Y+14, r25	; 0x0e
    28fa:	af 87       	std	Y+15, r26	; 0x0f
    28fc:	b8 8b       	std	Y+16, r27	; 0x10
		num6=num5/100;
    28fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    2900:	9e 85       	ldd	r25, Y+14	; 0x0e
    2902:	af 85       	ldd	r26, Y+15	; 0x0f
    2904:	b8 89       	ldd	r27, Y+16	; 0x10
    2906:	24 e6       	ldi	r18, 0x64	; 100
    2908:	30 e0       	ldi	r19, 0x00	; 0
    290a:	40 e0       	ldi	r20, 0x00	; 0
    290c:	50 e0       	ldi	r21, 0x00	; 0
    290e:	bc 01       	movw	r22, r24
    2910:	cd 01       	movw	r24, r26
    2912:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2916:	da 01       	movw	r26, r20
    2918:	c9 01       	movw	r24, r18
    291a:	89 87       	std	Y+9, r24	; 0x09
    291c:	9a 87       	std	Y+10, r25	; 0x0a
    291e:	ab 87       	std	Y+11, r26	; 0x0b
    2920:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    2922:	89 85       	ldd	r24, Y+9	; 0x09
    2924:	80 5d       	subi	r24, 0xD0	; 208
    2926:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num5%100;
    292a:	8d 85       	ldd	r24, Y+13	; 0x0d
    292c:	9e 85       	ldd	r25, Y+14	; 0x0e
    292e:	af 85       	ldd	r26, Y+15	; 0x0f
    2930:	b8 89       	ldd	r27, Y+16	; 0x10
    2932:	24 e6       	ldi	r18, 0x64	; 100
    2934:	30 e0       	ldi	r19, 0x00	; 0
    2936:	40 e0       	ldi	r20, 0x00	; 0
    2938:	50 e0       	ldi	r21, 0x00	; 0
    293a:	bc 01       	movw	r22, r24
    293c:	cd 01       	movw	r24, r26
    293e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2942:	dc 01       	movw	r26, r24
    2944:	cb 01       	movw	r24, r22
    2946:	89 87       	std	Y+9, r24	; 0x09
    2948:	9a 87       	std	Y+10, r25	; 0x0a
    294a:	ab 87       	std	Y+11, r26	; 0x0b
    294c:	bc 87       	std	Y+12, r27	; 0x0c
		num7=num6/10;
    294e:	89 85       	ldd	r24, Y+9	; 0x09
    2950:	9a 85       	ldd	r25, Y+10	; 0x0a
    2952:	ab 85       	ldd	r26, Y+11	; 0x0b
    2954:	bc 85       	ldd	r27, Y+12	; 0x0c
    2956:	2a e0       	ldi	r18, 0x0A	; 10
    2958:	30 e0       	ldi	r19, 0x00	; 0
    295a:	40 e0       	ldi	r20, 0x00	; 0
    295c:	50 e0       	ldi	r21, 0x00	; 0
    295e:	bc 01       	movw	r22, r24
    2960:	cd 01       	movw	r24, r26
    2962:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2966:	da 01       	movw	r26, r20
    2968:	c9 01       	movw	r24, r18
    296a:	8d 83       	std	Y+5, r24	; 0x05
    296c:	9e 83       	std	Y+6, r25	; 0x06
    296e:	af 83       	std	Y+7, r26	; 0x07
    2970:	b8 87       	std	Y+8, r27	; 0x08
		LCD_vidwritedata(num7+48);
    2972:	8d 81       	ldd	r24, Y+5	; 0x05
    2974:	80 5d       	subi	r24, 0xD0	; 208
    2976:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num7=num6%10;
    297a:	89 85       	ldd	r24, Y+9	; 0x09
    297c:	9a 85       	ldd	r25, Y+10	; 0x0a
    297e:	ab 85       	ldd	r26, Y+11	; 0x0b
    2980:	bc 85       	ldd	r27, Y+12	; 0x0c
    2982:	2a e0       	ldi	r18, 0x0A	; 10
    2984:	30 e0       	ldi	r19, 0x00	; 0
    2986:	40 e0       	ldi	r20, 0x00	; 0
    2988:	50 e0       	ldi	r21, 0x00	; 0
    298a:	bc 01       	movw	r22, r24
    298c:	cd 01       	movw	r24, r26
    298e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2992:	dc 01       	movw	r26, r24
    2994:	cb 01       	movw	r24, r22
    2996:	8d 83       	std	Y+5, r24	; 0x05
    2998:	9e 83       	std	Y+6, r25	; 0x06
    299a:	af 83       	std	Y+7, r26	; 0x07
    299c:	b8 87       	std	Y+8, r27	; 0x08
		LCD_vidwritedata(num7+48);
    299e:	8d 81       	ldd	r24, Y+5	; 0x05
    29a0:	80 5d       	subi	r24, 0xD0	; 208
    29a2:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
	}
}
    29a6:	a6 96       	adiw	r28, 0x26	; 38
    29a8:	0f b6       	in	r0, 0x3f	; 63
    29aa:	f8 94       	cli
    29ac:	de bf       	out	0x3e, r29	; 62
    29ae:	0f be       	out	0x3f, r0	; 63
    29b0:	cd bf       	out	0x3d, r28	; 61
    29b2:	cf 91       	pop	r28
    29b4:	df 91       	pop	r29
    29b6:	08 95       	ret

000029b8 <LCD_viddisplayintegar2>:
extern void LCD_viddisplayintegar2 (u8 line ,u8 column , u32 number)
{
    29b8:	df 93       	push	r29
    29ba:	cf 93       	push	r28
    29bc:	cd b7       	in	r28, 0x3d	; 61
    29be:	de b7       	in	r29, 0x3e	; 62
    29c0:	a6 97       	sbiw	r28, 0x26	; 38
    29c2:	0f b6       	in	r0, 0x3f	; 63
    29c4:	f8 94       	cli
    29c6:	de bf       	out	0x3e, r29	; 62
    29c8:	0f be       	out	0x3f, r0	; 63
    29ca:	cd bf       	out	0x3d, r28	; 61
    29cc:	89 a3       	std	Y+33, r24	; 0x21
    29ce:	6a a3       	std	Y+34, r22	; 0x22
    29d0:	2b a3       	std	Y+35, r18	; 0x23
    29d2:	3c a3       	std	Y+36, r19	; 0x24
    29d4:	4d a3       	std	Y+37, r20	; 0x25
    29d6:	5e a3       	std	Y+38, r21	; 0x26
	u32 num1,num2,num3,num4,num5,num6,num7,num8;
	if (number<10)
    29d8:	8b a1       	ldd	r24, Y+35	; 0x23
    29da:	9c a1       	ldd	r25, Y+36	; 0x24
    29dc:	ad a1       	ldd	r26, Y+37	; 0x25
    29de:	be a1       	ldd	r27, Y+38	; 0x26
    29e0:	8a 30       	cpi	r24, 0x0A	; 10
    29e2:	91 05       	cpc	r25, r1
    29e4:	a1 05       	cpc	r26, r1
    29e6:	b1 05       	cpc	r27, r1
    29e8:	48 f4       	brcc	.+18     	; 0x29fc <LCD_viddisplayintegar2+0x44>
	{
		LCD_setcursorposition(line,column);
    29ea:	89 a1       	ldd	r24, Y+33	; 0x21
    29ec:	6a a1       	ldd	r22, Y+34	; 0x22
    29ee:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritedata(number+48);
    29f2:	8b a1       	ldd	r24, Y+35	; 0x23
    29f4:	80 5d       	subi	r24, 0xD0	; 208
    29f6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    29fa:	49 c5       	rjmp	.+2706   	; 0x348e <LCD_viddisplayintegar2+0xad6>
	}
	else if (number>=10 && number<100)
    29fc:	8b a1       	ldd	r24, Y+35	; 0x23
    29fe:	9c a1       	ldd	r25, Y+36	; 0x24
    2a00:	ad a1       	ldd	r26, Y+37	; 0x25
    2a02:	be a1       	ldd	r27, Y+38	; 0x26
    2a04:	8a 30       	cpi	r24, 0x0A	; 10
    2a06:	91 05       	cpc	r25, r1
    2a08:	a1 05       	cpc	r26, r1
    2a0a:	b1 05       	cpc	r27, r1
    2a0c:	d0 f1       	brcs	.+116    	; 0x2a82 <LCD_viddisplayintegar2+0xca>
    2a0e:	8b a1       	ldd	r24, Y+35	; 0x23
    2a10:	9c a1       	ldd	r25, Y+36	; 0x24
    2a12:	ad a1       	ldd	r26, Y+37	; 0x25
    2a14:	be a1       	ldd	r27, Y+38	; 0x26
    2a16:	84 36       	cpi	r24, 0x64	; 100
    2a18:	91 05       	cpc	r25, r1
    2a1a:	a1 05       	cpc	r26, r1
    2a1c:	b1 05       	cpc	r27, r1
    2a1e:	88 f5       	brcc	.+98     	; 0x2a82 <LCD_viddisplayintegar2+0xca>
	{
     	LCD_setcursorposition(line ,column);
    2a20:	89 a1       	ldd	r24, Y+33	; 0x21
    2a22:	6a a1       	ldd	r22, Y+34	; 0x22
    2a24:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		num1=number/10;
    2a28:	8b a1       	ldd	r24, Y+35	; 0x23
    2a2a:	9c a1       	ldd	r25, Y+36	; 0x24
    2a2c:	ad a1       	ldd	r26, Y+37	; 0x25
    2a2e:	be a1       	ldd	r27, Y+38	; 0x26
    2a30:	2a e0       	ldi	r18, 0x0A	; 10
    2a32:	30 e0       	ldi	r19, 0x00	; 0
    2a34:	40 e0       	ldi	r20, 0x00	; 0
    2a36:	50 e0       	ldi	r21, 0x00	; 0
    2a38:	bc 01       	movw	r22, r24
    2a3a:	cd 01       	movw	r24, r26
    2a3c:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2a40:	da 01       	movw	r26, r20
    2a42:	c9 01       	movw	r24, r18
    2a44:	8d 8f       	std	Y+29, r24	; 0x1d
    2a46:	9e 8f       	std	Y+30, r25	; 0x1e
    2a48:	af 8f       	std	Y+31, r26	; 0x1f
    2a4a:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2a4c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2a4e:	80 5d       	subi	r24, 0xD0	; 208
    2a50:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=number%10;
    2a54:	8b a1       	ldd	r24, Y+35	; 0x23
    2a56:	9c a1       	ldd	r25, Y+36	; 0x24
    2a58:	ad a1       	ldd	r26, Y+37	; 0x25
    2a5a:	be a1       	ldd	r27, Y+38	; 0x26
    2a5c:	2a e0       	ldi	r18, 0x0A	; 10
    2a5e:	30 e0       	ldi	r19, 0x00	; 0
    2a60:	40 e0       	ldi	r20, 0x00	; 0
    2a62:	50 e0       	ldi	r21, 0x00	; 0
    2a64:	bc 01       	movw	r22, r24
    2a66:	cd 01       	movw	r24, r26
    2a68:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2a6c:	dc 01       	movw	r26, r24
    2a6e:	cb 01       	movw	r24, r22
    2a70:	89 8f       	std	Y+25, r24	; 0x19
    2a72:	9a 8f       	std	Y+26, r25	; 0x1a
    2a74:	ab 8f       	std	Y+27, r26	; 0x1b
    2a76:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    2a78:	89 8d       	ldd	r24, Y+25	; 0x19
    2a7a:	80 5d       	subi	r24, 0xD0	; 208
    2a7c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    2a80:	06 c5       	rjmp	.+2572   	; 0x348e <LCD_viddisplayintegar2+0xad6>
	}
	else if (number>=100 && number < 1000)
    2a82:	8b a1       	ldd	r24, Y+35	; 0x23
    2a84:	9c a1       	ldd	r25, Y+36	; 0x24
    2a86:	ad a1       	ldd	r26, Y+37	; 0x25
    2a88:	be a1       	ldd	r27, Y+38	; 0x26
    2a8a:	84 36       	cpi	r24, 0x64	; 100
    2a8c:	91 05       	cpc	r25, r1
    2a8e:	a1 05       	cpc	r26, r1
    2a90:	b1 05       	cpc	r27, r1
    2a92:	08 f4       	brcc	.+2      	; 0x2a96 <LCD_viddisplayintegar2+0xde>
    2a94:	66 c0       	rjmp	.+204    	; 0x2b62 <LCD_viddisplayintegar2+0x1aa>
    2a96:	8b a1       	ldd	r24, Y+35	; 0x23
    2a98:	9c a1       	ldd	r25, Y+36	; 0x24
    2a9a:	ad a1       	ldd	r26, Y+37	; 0x25
    2a9c:	be a1       	ldd	r27, Y+38	; 0x26
    2a9e:	88 3e       	cpi	r24, 0xE8	; 232
    2aa0:	23 e0       	ldi	r18, 0x03	; 3
    2aa2:	92 07       	cpc	r25, r18
    2aa4:	20 e0       	ldi	r18, 0x00	; 0
    2aa6:	a2 07       	cpc	r26, r18
    2aa8:	20 e0       	ldi	r18, 0x00	; 0
    2aaa:	b2 07       	cpc	r27, r18
    2aac:	08 f0       	brcs	.+2      	; 0x2ab0 <LCD_viddisplayintegar2+0xf8>
    2aae:	59 c0       	rjmp	.+178    	; 0x2b62 <LCD_viddisplayintegar2+0x1aa>
	{
		LCD_setcursorposition(line ,column);
    2ab0:	89 a1       	ldd	r24, Y+33	; 0x21
    2ab2:	6a a1       	ldd	r22, Y+34	; 0x22
    2ab4:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		num1=number/100;
    2ab8:	8b a1       	ldd	r24, Y+35	; 0x23
    2aba:	9c a1       	ldd	r25, Y+36	; 0x24
    2abc:	ad a1       	ldd	r26, Y+37	; 0x25
    2abe:	be a1       	ldd	r27, Y+38	; 0x26
    2ac0:	24 e6       	ldi	r18, 0x64	; 100
    2ac2:	30 e0       	ldi	r19, 0x00	; 0
    2ac4:	40 e0       	ldi	r20, 0x00	; 0
    2ac6:	50 e0       	ldi	r21, 0x00	; 0
    2ac8:	bc 01       	movw	r22, r24
    2aca:	cd 01       	movw	r24, r26
    2acc:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2ad0:	da 01       	movw	r26, r20
    2ad2:	c9 01       	movw	r24, r18
    2ad4:	8d 8f       	std	Y+29, r24	; 0x1d
    2ad6:	9e 8f       	std	Y+30, r25	; 0x1e
    2ad8:	af 8f       	std	Y+31, r26	; 0x1f
    2ada:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2adc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ade:	80 5d       	subi	r24, 0xD0	; 208
    2ae0:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%100;
    2ae4:	8b a1       	ldd	r24, Y+35	; 0x23
    2ae6:	9c a1       	ldd	r25, Y+36	; 0x24
    2ae8:	ad a1       	ldd	r26, Y+37	; 0x25
    2aea:	be a1       	ldd	r27, Y+38	; 0x26
    2aec:	24 e6       	ldi	r18, 0x64	; 100
    2aee:	30 e0       	ldi	r19, 0x00	; 0
    2af0:	40 e0       	ldi	r20, 0x00	; 0
    2af2:	50 e0       	ldi	r21, 0x00	; 0
    2af4:	bc 01       	movw	r22, r24
    2af6:	cd 01       	movw	r24, r26
    2af8:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2afc:	dc 01       	movw	r26, r24
    2afe:	cb 01       	movw	r24, r22
    2b00:	8d 8f       	std	Y+29, r24	; 0x1d
    2b02:	9e 8f       	std	Y+30, r25	; 0x1e
    2b04:	af 8f       	std	Y+31, r26	; 0x1f
    2b06:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/10;
    2b08:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b0a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2b0c:	af 8d       	ldd	r26, Y+31	; 0x1f
    2b0e:	b8 a1       	ldd	r27, Y+32	; 0x20
    2b10:	2a e0       	ldi	r18, 0x0A	; 10
    2b12:	30 e0       	ldi	r19, 0x00	; 0
    2b14:	40 e0       	ldi	r20, 0x00	; 0
    2b16:	50 e0       	ldi	r21, 0x00	; 0
    2b18:	bc 01       	movw	r22, r24
    2b1a:	cd 01       	movw	r24, r26
    2b1c:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2b20:	da 01       	movw	r26, r20
    2b22:	c9 01       	movw	r24, r18
    2b24:	89 8f       	std	Y+25, r24	; 0x19
    2b26:	9a 8f       	std	Y+26, r25	; 0x1a
    2b28:	ab 8f       	std	Y+27, r26	; 0x1b
    2b2a:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    2b2c:	89 8d       	ldd	r24, Y+25	; 0x19
    2b2e:	80 5d       	subi	r24, 0xD0	; 208
    2b30:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%10;
    2b34:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2b36:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2b38:	af 8d       	ldd	r26, Y+31	; 0x1f
    2b3a:	b8 a1       	ldd	r27, Y+32	; 0x20
    2b3c:	2a e0       	ldi	r18, 0x0A	; 10
    2b3e:	30 e0       	ldi	r19, 0x00	; 0
    2b40:	40 e0       	ldi	r20, 0x00	; 0
    2b42:	50 e0       	ldi	r21, 0x00	; 0
    2b44:	bc 01       	movw	r22, r24
    2b46:	cd 01       	movw	r24, r26
    2b48:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2b4c:	dc 01       	movw	r26, r24
    2b4e:	cb 01       	movw	r24, r22
    2b50:	89 8f       	std	Y+25, r24	; 0x19
    2b52:	9a 8f       	std	Y+26, r25	; 0x1a
    2b54:	ab 8f       	std	Y+27, r26	; 0x1b
    2b56:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    2b58:	89 8d       	ldd	r24, Y+25	; 0x19
    2b5a:	80 5d       	subi	r24, 0xD0	; 208
    2b5c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    2b60:	96 c4       	rjmp	.+2348   	; 0x348e <LCD_viddisplayintegar2+0xad6>
	}
	else if (number>=1000 && number <10000)
    2b62:	8b a1       	ldd	r24, Y+35	; 0x23
    2b64:	9c a1       	ldd	r25, Y+36	; 0x24
    2b66:	ad a1       	ldd	r26, Y+37	; 0x25
    2b68:	be a1       	ldd	r27, Y+38	; 0x26
    2b6a:	88 3e       	cpi	r24, 0xE8	; 232
    2b6c:	23 e0       	ldi	r18, 0x03	; 3
    2b6e:	92 07       	cpc	r25, r18
    2b70:	20 e0       	ldi	r18, 0x00	; 0
    2b72:	a2 07       	cpc	r26, r18
    2b74:	20 e0       	ldi	r18, 0x00	; 0
    2b76:	b2 07       	cpc	r27, r18
    2b78:	08 f4       	brcc	.+2      	; 0x2b7c <LCD_viddisplayintegar2+0x1c4>
    2b7a:	8e c0       	rjmp	.+284    	; 0x2c98 <LCD_viddisplayintegar2+0x2e0>
    2b7c:	8b a1       	ldd	r24, Y+35	; 0x23
    2b7e:	9c a1       	ldd	r25, Y+36	; 0x24
    2b80:	ad a1       	ldd	r26, Y+37	; 0x25
    2b82:	be a1       	ldd	r27, Y+38	; 0x26
    2b84:	80 31       	cpi	r24, 0x10	; 16
    2b86:	27 e2       	ldi	r18, 0x27	; 39
    2b88:	92 07       	cpc	r25, r18
    2b8a:	20 e0       	ldi	r18, 0x00	; 0
    2b8c:	a2 07       	cpc	r26, r18
    2b8e:	20 e0       	ldi	r18, 0x00	; 0
    2b90:	b2 07       	cpc	r27, r18
    2b92:	08 f0       	brcs	.+2      	; 0x2b96 <LCD_viddisplayintegar2+0x1de>
    2b94:	81 c0       	rjmp	.+258    	; 0x2c98 <LCD_viddisplayintegar2+0x2e0>
	{
		LCD_setcursorposition(line ,column);
    2b96:	89 a1       	ldd	r24, Y+33	; 0x21
    2b98:	6a a1       	ldd	r22, Y+34	; 0x22
    2b9a:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		num1=number/1000;
    2b9e:	8b a1       	ldd	r24, Y+35	; 0x23
    2ba0:	9c a1       	ldd	r25, Y+36	; 0x24
    2ba2:	ad a1       	ldd	r26, Y+37	; 0x25
    2ba4:	be a1       	ldd	r27, Y+38	; 0x26
    2ba6:	28 ee       	ldi	r18, 0xE8	; 232
    2ba8:	33 e0       	ldi	r19, 0x03	; 3
    2baa:	40 e0       	ldi	r20, 0x00	; 0
    2bac:	50 e0       	ldi	r21, 0x00	; 0
    2bae:	bc 01       	movw	r22, r24
    2bb0:	cd 01       	movw	r24, r26
    2bb2:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2bb6:	da 01       	movw	r26, r20
    2bb8:	c9 01       	movw	r24, r18
    2bba:	8d 8f       	std	Y+29, r24	; 0x1d
    2bbc:	9e 8f       	std	Y+30, r25	; 0x1e
    2bbe:	af 8f       	std	Y+31, r26	; 0x1f
    2bc0:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2bc2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2bc4:	80 5d       	subi	r24, 0xD0	; 208
    2bc6:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=number%1000;
    2bca:	8b a1       	ldd	r24, Y+35	; 0x23
    2bcc:	9c a1       	ldd	r25, Y+36	; 0x24
    2bce:	ad a1       	ldd	r26, Y+37	; 0x25
    2bd0:	be a1       	ldd	r27, Y+38	; 0x26
    2bd2:	28 ee       	ldi	r18, 0xE8	; 232
    2bd4:	33 e0       	ldi	r19, 0x03	; 3
    2bd6:	40 e0       	ldi	r20, 0x00	; 0
    2bd8:	50 e0       	ldi	r21, 0x00	; 0
    2bda:	bc 01       	movw	r22, r24
    2bdc:	cd 01       	movw	r24, r26
    2bde:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2be2:	dc 01       	movw	r26, r24
    2be4:	cb 01       	movw	r24, r22
    2be6:	89 8f       	std	Y+25, r24	; 0x19
    2be8:	9a 8f       	std	Y+26, r25	; 0x1a
    2bea:	ab 8f       	std	Y+27, r26	; 0x1b
    2bec:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/100;
    2bee:	89 8d       	ldd	r24, Y+25	; 0x19
    2bf0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2bf2:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2bf4:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2bf6:	24 e6       	ldi	r18, 0x64	; 100
    2bf8:	30 e0       	ldi	r19, 0x00	; 0
    2bfa:	40 e0       	ldi	r20, 0x00	; 0
    2bfc:	50 e0       	ldi	r21, 0x00	; 0
    2bfe:	bc 01       	movw	r22, r24
    2c00:	cd 01       	movw	r24, r26
    2c02:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2c06:	da 01       	movw	r26, r20
    2c08:	c9 01       	movw	r24, r18
    2c0a:	8d 8b       	std	Y+21, r24	; 0x15
    2c0c:	9e 8b       	std	Y+22, r25	; 0x16
    2c0e:	af 8b       	std	Y+23, r26	; 0x17
    2c10:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    2c12:	8d 89       	ldd	r24, Y+21	; 0x15
    2c14:	80 5d       	subi	r24, 0xD0	; 208
    2c16:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num2%100;
    2c1a:	89 8d       	ldd	r24, Y+25	; 0x19
    2c1c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2c1e:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2c20:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2c22:	24 e6       	ldi	r18, 0x64	; 100
    2c24:	30 e0       	ldi	r19, 0x00	; 0
    2c26:	40 e0       	ldi	r20, 0x00	; 0
    2c28:	50 e0       	ldi	r21, 0x00	; 0
    2c2a:	bc 01       	movw	r22, r24
    2c2c:	cd 01       	movw	r24, r26
    2c2e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2c32:	dc 01       	movw	r26, r24
    2c34:	cb 01       	movw	r24, r22
    2c36:	89 8b       	std	Y+17, r24	; 0x11
    2c38:	9a 8b       	std	Y+18, r25	; 0x12
    2c3a:	ab 8b       	std	Y+19, r26	; 0x13
    2c3c:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/10;
    2c3e:	89 89       	ldd	r24, Y+17	; 0x11
    2c40:	9a 89       	ldd	r25, Y+18	; 0x12
    2c42:	ab 89       	ldd	r26, Y+19	; 0x13
    2c44:	bc 89       	ldd	r27, Y+20	; 0x14
    2c46:	2a e0       	ldi	r18, 0x0A	; 10
    2c48:	30 e0       	ldi	r19, 0x00	; 0
    2c4a:	40 e0       	ldi	r20, 0x00	; 0
    2c4c:	50 e0       	ldi	r21, 0x00	; 0
    2c4e:	bc 01       	movw	r22, r24
    2c50:	cd 01       	movw	r24, r26
    2c52:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2c56:	da 01       	movw	r26, r20
    2c58:	c9 01       	movw	r24, r18
    2c5a:	8d 87       	std	Y+13, r24	; 0x0d
    2c5c:	9e 87       	std	Y+14, r25	; 0x0e
    2c5e:	af 87       	std	Y+15, r26	; 0x0f
    2c60:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    2c62:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c64:	80 5d       	subi	r24, 0xD0	; 208
    2c66:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num4%10;
    2c6a:	89 89       	ldd	r24, Y+17	; 0x11
    2c6c:	9a 89       	ldd	r25, Y+18	; 0x12
    2c6e:	ab 89       	ldd	r26, Y+19	; 0x13
    2c70:	bc 89       	ldd	r27, Y+20	; 0x14
    2c72:	2a e0       	ldi	r18, 0x0A	; 10
    2c74:	30 e0       	ldi	r19, 0x00	; 0
    2c76:	40 e0       	ldi	r20, 0x00	; 0
    2c78:	50 e0       	ldi	r21, 0x00	; 0
    2c7a:	bc 01       	movw	r22, r24
    2c7c:	cd 01       	movw	r24, r26
    2c7e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2c82:	dc 01       	movw	r26, r24
    2c84:	cb 01       	movw	r24, r22
    2c86:	89 87       	std	Y+9, r24	; 0x09
    2c88:	9a 87       	std	Y+10, r25	; 0x0a
    2c8a:	ab 87       	std	Y+11, r26	; 0x0b
    2c8c:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    2c8e:	89 85       	ldd	r24, Y+9	; 0x09
    2c90:	80 5d       	subi	r24, 0xD0	; 208
    2c92:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    2c96:	fb c3       	rjmp	.+2038   	; 0x348e <LCD_viddisplayintegar2+0xad6>
	}
	else if (number>=10000 && number <100000)
    2c98:	8b a1       	ldd	r24, Y+35	; 0x23
    2c9a:	9c a1       	ldd	r25, Y+36	; 0x24
    2c9c:	ad a1       	ldd	r26, Y+37	; 0x25
    2c9e:	be a1       	ldd	r27, Y+38	; 0x26
    2ca0:	80 31       	cpi	r24, 0x10	; 16
    2ca2:	27 e2       	ldi	r18, 0x27	; 39
    2ca4:	92 07       	cpc	r25, r18
    2ca6:	20 e0       	ldi	r18, 0x00	; 0
    2ca8:	a2 07       	cpc	r26, r18
    2caa:	20 e0       	ldi	r18, 0x00	; 0
    2cac:	b2 07       	cpc	r27, r18
    2cae:	08 f4       	brcc	.+2      	; 0x2cb2 <LCD_viddisplayintegar2+0x2fa>
    2cb0:	b6 c0       	rjmp	.+364    	; 0x2e1e <LCD_viddisplayintegar2+0x466>
    2cb2:	8b a1       	ldd	r24, Y+35	; 0x23
    2cb4:	9c a1       	ldd	r25, Y+36	; 0x24
    2cb6:	ad a1       	ldd	r26, Y+37	; 0x25
    2cb8:	be a1       	ldd	r27, Y+38	; 0x26
    2cba:	80 3a       	cpi	r24, 0xA0	; 160
    2cbc:	26 e8       	ldi	r18, 0x86	; 134
    2cbe:	92 07       	cpc	r25, r18
    2cc0:	21 e0       	ldi	r18, 0x01	; 1
    2cc2:	a2 07       	cpc	r26, r18
    2cc4:	20 e0       	ldi	r18, 0x00	; 0
    2cc6:	b2 07       	cpc	r27, r18
    2cc8:	08 f0       	brcs	.+2      	; 0x2ccc <LCD_viddisplayintegar2+0x314>
    2cca:	a9 c0       	rjmp	.+338    	; 0x2e1e <LCD_viddisplayintegar2+0x466>
	{

		LCD_setcursorposition(line ,column);
    2ccc:	89 a1       	ldd	r24, Y+33	; 0x21
    2cce:	6a a1       	ldd	r22, Y+34	; 0x22
    2cd0:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		num1=number/10000;
    2cd4:	8b a1       	ldd	r24, Y+35	; 0x23
    2cd6:	9c a1       	ldd	r25, Y+36	; 0x24
    2cd8:	ad a1       	ldd	r26, Y+37	; 0x25
    2cda:	be a1       	ldd	r27, Y+38	; 0x26
    2cdc:	20 e1       	ldi	r18, 0x10	; 16
    2cde:	37 e2       	ldi	r19, 0x27	; 39
    2ce0:	40 e0       	ldi	r20, 0x00	; 0
    2ce2:	50 e0       	ldi	r21, 0x00	; 0
    2ce4:	bc 01       	movw	r22, r24
    2ce6:	cd 01       	movw	r24, r26
    2ce8:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2cec:	da 01       	movw	r26, r20
    2cee:	c9 01       	movw	r24, r18
    2cf0:	8d 8f       	std	Y+29, r24	; 0x1d
    2cf2:	9e 8f       	std	Y+30, r25	; 0x1e
    2cf4:	af 8f       	std	Y+31, r26	; 0x1f
    2cf6:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2cf8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2cfa:	80 5d       	subi	r24, 0xD0	; 208
    2cfc:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%10000;
    2d00:	8b a1       	ldd	r24, Y+35	; 0x23
    2d02:	9c a1       	ldd	r25, Y+36	; 0x24
    2d04:	ad a1       	ldd	r26, Y+37	; 0x25
    2d06:	be a1       	ldd	r27, Y+38	; 0x26
    2d08:	20 e1       	ldi	r18, 0x10	; 16
    2d0a:	37 e2       	ldi	r19, 0x27	; 39
    2d0c:	40 e0       	ldi	r20, 0x00	; 0
    2d0e:	50 e0       	ldi	r21, 0x00	; 0
    2d10:	bc 01       	movw	r22, r24
    2d12:	cd 01       	movw	r24, r26
    2d14:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2d18:	dc 01       	movw	r26, r24
    2d1a:	cb 01       	movw	r24, r22
    2d1c:	8d 8f       	std	Y+29, r24	; 0x1d
    2d1e:	9e 8f       	std	Y+30, r25	; 0x1e
    2d20:	af 8f       	std	Y+31, r26	; 0x1f
    2d22:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/1000;
    2d24:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2d26:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2d28:	af 8d       	ldd	r26, Y+31	; 0x1f
    2d2a:	b8 a1       	ldd	r27, Y+32	; 0x20
    2d2c:	28 ee       	ldi	r18, 0xE8	; 232
    2d2e:	33 e0       	ldi	r19, 0x03	; 3
    2d30:	40 e0       	ldi	r20, 0x00	; 0
    2d32:	50 e0       	ldi	r21, 0x00	; 0
    2d34:	bc 01       	movw	r22, r24
    2d36:	cd 01       	movw	r24, r26
    2d38:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2d3c:	da 01       	movw	r26, r20
    2d3e:	c9 01       	movw	r24, r18
    2d40:	89 8f       	std	Y+25, r24	; 0x19
    2d42:	9a 8f       	std	Y+26, r25	; 0x1a
    2d44:	ab 8f       	std	Y+27, r26	; 0x1b
    2d46:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    2d48:	89 8d       	ldd	r24, Y+25	; 0x19
    2d4a:	80 5d       	subi	r24, 0xD0	; 208
    2d4c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%1000;
    2d50:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2d52:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2d54:	af 8d       	ldd	r26, Y+31	; 0x1f
    2d56:	b8 a1       	ldd	r27, Y+32	; 0x20
    2d58:	28 ee       	ldi	r18, 0xE8	; 232
    2d5a:	33 e0       	ldi	r19, 0x03	; 3
    2d5c:	40 e0       	ldi	r20, 0x00	; 0
    2d5e:	50 e0       	ldi	r21, 0x00	; 0
    2d60:	bc 01       	movw	r22, r24
    2d62:	cd 01       	movw	r24, r26
    2d64:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2d68:	dc 01       	movw	r26, r24
    2d6a:	cb 01       	movw	r24, r22
    2d6c:	89 8f       	std	Y+25, r24	; 0x19
    2d6e:	9a 8f       	std	Y+26, r25	; 0x1a
    2d70:	ab 8f       	std	Y+27, r26	; 0x1b
    2d72:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/100;
    2d74:	89 8d       	ldd	r24, Y+25	; 0x19
    2d76:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2d78:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2d7a:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2d7c:	24 e6       	ldi	r18, 0x64	; 100
    2d7e:	30 e0       	ldi	r19, 0x00	; 0
    2d80:	40 e0       	ldi	r20, 0x00	; 0
    2d82:	50 e0       	ldi	r21, 0x00	; 0
    2d84:	bc 01       	movw	r22, r24
    2d86:	cd 01       	movw	r24, r26
    2d88:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2d8c:	da 01       	movw	r26, r20
    2d8e:	c9 01       	movw	r24, r18
    2d90:	8d 8b       	std	Y+21, r24	; 0x15
    2d92:	9e 8b       	std	Y+22, r25	; 0x16
    2d94:	af 8b       	std	Y+23, r26	; 0x17
    2d96:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    2d98:	8d 89       	ldd	r24, Y+21	; 0x15
    2d9a:	80 5d       	subi	r24, 0xD0	; 208
    2d9c:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num2%100;
    2da0:	89 8d       	ldd	r24, Y+25	; 0x19
    2da2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2da4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2da6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2da8:	24 e6       	ldi	r18, 0x64	; 100
    2daa:	30 e0       	ldi	r19, 0x00	; 0
    2dac:	40 e0       	ldi	r20, 0x00	; 0
    2dae:	50 e0       	ldi	r21, 0x00	; 0
    2db0:	bc 01       	movw	r22, r24
    2db2:	cd 01       	movw	r24, r26
    2db4:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2db8:	dc 01       	movw	r26, r24
    2dba:	cb 01       	movw	r24, r22
    2dbc:	89 8b       	std	Y+17, r24	; 0x11
    2dbe:	9a 8b       	std	Y+18, r25	; 0x12
    2dc0:	ab 8b       	std	Y+19, r26	; 0x13
    2dc2:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/10;
    2dc4:	89 89       	ldd	r24, Y+17	; 0x11
    2dc6:	9a 89       	ldd	r25, Y+18	; 0x12
    2dc8:	ab 89       	ldd	r26, Y+19	; 0x13
    2dca:	bc 89       	ldd	r27, Y+20	; 0x14
    2dcc:	2a e0       	ldi	r18, 0x0A	; 10
    2dce:	30 e0       	ldi	r19, 0x00	; 0
    2dd0:	40 e0       	ldi	r20, 0x00	; 0
    2dd2:	50 e0       	ldi	r21, 0x00	; 0
    2dd4:	bc 01       	movw	r22, r24
    2dd6:	cd 01       	movw	r24, r26
    2dd8:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2ddc:	da 01       	movw	r26, r20
    2dde:	c9 01       	movw	r24, r18
    2de0:	8d 87       	std	Y+13, r24	; 0x0d
    2de2:	9e 87       	std	Y+14, r25	; 0x0e
    2de4:	af 87       	std	Y+15, r26	; 0x0f
    2de6:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    2de8:	8d 85       	ldd	r24, Y+13	; 0x0d
    2dea:	80 5d       	subi	r24, 0xD0	; 208
    2dec:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num4%10;
    2df0:	89 89       	ldd	r24, Y+17	; 0x11
    2df2:	9a 89       	ldd	r25, Y+18	; 0x12
    2df4:	ab 89       	ldd	r26, Y+19	; 0x13
    2df6:	bc 89       	ldd	r27, Y+20	; 0x14
    2df8:	2a e0       	ldi	r18, 0x0A	; 10
    2dfa:	30 e0       	ldi	r19, 0x00	; 0
    2dfc:	40 e0       	ldi	r20, 0x00	; 0
    2dfe:	50 e0       	ldi	r21, 0x00	; 0
    2e00:	bc 01       	movw	r22, r24
    2e02:	cd 01       	movw	r24, r26
    2e04:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2e08:	dc 01       	movw	r26, r24
    2e0a:	cb 01       	movw	r24, r22
    2e0c:	89 87       	std	Y+9, r24	; 0x09
    2e0e:	9a 87       	std	Y+10, r25	; 0x0a
    2e10:	ab 87       	std	Y+11, r26	; 0x0b
    2e12:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    2e14:	89 85       	ldd	r24, Y+9	; 0x09
    2e16:	80 5d       	subi	r24, 0xD0	; 208
    2e18:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    2e1c:	38 c3       	rjmp	.+1648   	; 0x348e <LCD_viddisplayintegar2+0xad6>
	}
	else if (number>=100000 && number <1000000)
    2e1e:	8b a1       	ldd	r24, Y+35	; 0x23
    2e20:	9c a1       	ldd	r25, Y+36	; 0x24
    2e22:	ad a1       	ldd	r26, Y+37	; 0x25
    2e24:	be a1       	ldd	r27, Y+38	; 0x26
    2e26:	80 3a       	cpi	r24, 0xA0	; 160
    2e28:	26 e8       	ldi	r18, 0x86	; 134
    2e2a:	92 07       	cpc	r25, r18
    2e2c:	21 e0       	ldi	r18, 0x01	; 1
    2e2e:	a2 07       	cpc	r26, r18
    2e30:	20 e0       	ldi	r18, 0x00	; 0
    2e32:	b2 07       	cpc	r27, r18
    2e34:	08 f4       	brcc	.+2      	; 0x2e38 <LCD_viddisplayintegar2+0x480>
    2e36:	de c0       	rjmp	.+444    	; 0x2ff4 <LCD_viddisplayintegar2+0x63c>
    2e38:	8b a1       	ldd	r24, Y+35	; 0x23
    2e3a:	9c a1       	ldd	r25, Y+36	; 0x24
    2e3c:	ad a1       	ldd	r26, Y+37	; 0x25
    2e3e:	be a1       	ldd	r27, Y+38	; 0x26
    2e40:	80 34       	cpi	r24, 0x40	; 64
    2e42:	22 e4       	ldi	r18, 0x42	; 66
    2e44:	92 07       	cpc	r25, r18
    2e46:	2f e0       	ldi	r18, 0x0F	; 15
    2e48:	a2 07       	cpc	r26, r18
    2e4a:	20 e0       	ldi	r18, 0x00	; 0
    2e4c:	b2 07       	cpc	r27, r18
    2e4e:	08 f0       	brcs	.+2      	; 0x2e52 <LCD_viddisplayintegar2+0x49a>
    2e50:	d1 c0       	rjmp	.+418    	; 0x2ff4 <LCD_viddisplayintegar2+0x63c>
	{

		LCD_setcursorposition(line ,column);
    2e52:	89 a1       	ldd	r24, Y+33	; 0x21
    2e54:	6a a1       	ldd	r22, Y+34	; 0x22
    2e56:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		num1=number/100000;
    2e5a:	8b a1       	ldd	r24, Y+35	; 0x23
    2e5c:	9c a1       	ldd	r25, Y+36	; 0x24
    2e5e:	ad a1       	ldd	r26, Y+37	; 0x25
    2e60:	be a1       	ldd	r27, Y+38	; 0x26
    2e62:	20 ea       	ldi	r18, 0xA0	; 160
    2e64:	36 e8       	ldi	r19, 0x86	; 134
    2e66:	41 e0       	ldi	r20, 0x01	; 1
    2e68:	50 e0       	ldi	r21, 0x00	; 0
    2e6a:	bc 01       	movw	r22, r24
    2e6c:	cd 01       	movw	r24, r26
    2e6e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2e72:	da 01       	movw	r26, r20
    2e74:	c9 01       	movw	r24, r18
    2e76:	8d 8f       	std	Y+29, r24	; 0x1d
    2e78:	9e 8f       	std	Y+30, r25	; 0x1e
    2e7a:	af 8f       	std	Y+31, r26	; 0x1f
    2e7c:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    2e7e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e80:	80 5d       	subi	r24, 0xD0	; 208
    2e82:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%100000;
    2e86:	8b a1       	ldd	r24, Y+35	; 0x23
    2e88:	9c a1       	ldd	r25, Y+36	; 0x24
    2e8a:	ad a1       	ldd	r26, Y+37	; 0x25
    2e8c:	be a1       	ldd	r27, Y+38	; 0x26
    2e8e:	20 ea       	ldi	r18, 0xA0	; 160
    2e90:	36 e8       	ldi	r19, 0x86	; 134
    2e92:	41 e0       	ldi	r20, 0x01	; 1
    2e94:	50 e0       	ldi	r21, 0x00	; 0
    2e96:	bc 01       	movw	r22, r24
    2e98:	cd 01       	movw	r24, r26
    2e9a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2e9e:	dc 01       	movw	r26, r24
    2ea0:	cb 01       	movw	r24, r22
    2ea2:	8d 8f       	std	Y+29, r24	; 0x1d
    2ea4:	9e 8f       	std	Y+30, r25	; 0x1e
    2ea6:	af 8f       	std	Y+31, r26	; 0x1f
    2ea8:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/10000;
    2eaa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2eac:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2eae:	af 8d       	ldd	r26, Y+31	; 0x1f
    2eb0:	b8 a1       	ldd	r27, Y+32	; 0x20
    2eb2:	20 e1       	ldi	r18, 0x10	; 16
    2eb4:	37 e2       	ldi	r19, 0x27	; 39
    2eb6:	40 e0       	ldi	r20, 0x00	; 0
    2eb8:	50 e0       	ldi	r21, 0x00	; 0
    2eba:	bc 01       	movw	r22, r24
    2ebc:	cd 01       	movw	r24, r26
    2ebe:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2ec2:	da 01       	movw	r26, r20
    2ec4:	c9 01       	movw	r24, r18
    2ec6:	89 8f       	std	Y+25, r24	; 0x19
    2ec8:	9a 8f       	std	Y+26, r25	; 0x1a
    2eca:	ab 8f       	std	Y+27, r26	; 0x1b
    2ecc:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    2ece:	89 8d       	ldd	r24, Y+25	; 0x19
    2ed0:	80 5d       	subi	r24, 0xD0	; 208
    2ed2:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%10000;
    2ed6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ed8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2eda:	af 8d       	ldd	r26, Y+31	; 0x1f
    2edc:	b8 a1       	ldd	r27, Y+32	; 0x20
    2ede:	20 e1       	ldi	r18, 0x10	; 16
    2ee0:	37 e2       	ldi	r19, 0x27	; 39
    2ee2:	40 e0       	ldi	r20, 0x00	; 0
    2ee4:	50 e0       	ldi	r21, 0x00	; 0
    2ee6:	bc 01       	movw	r22, r24
    2ee8:	cd 01       	movw	r24, r26
    2eea:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2eee:	dc 01       	movw	r26, r24
    2ef0:	cb 01       	movw	r24, r22
    2ef2:	89 8f       	std	Y+25, r24	; 0x19
    2ef4:	9a 8f       	std	Y+26, r25	; 0x1a
    2ef6:	ab 8f       	std	Y+27, r26	; 0x1b
    2ef8:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/1000;
    2efa:	89 8d       	ldd	r24, Y+25	; 0x19
    2efc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2efe:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2f00:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2f02:	28 ee       	ldi	r18, 0xE8	; 232
    2f04:	33 e0       	ldi	r19, 0x03	; 3
    2f06:	40 e0       	ldi	r20, 0x00	; 0
    2f08:	50 e0       	ldi	r21, 0x00	; 0
    2f0a:	bc 01       	movw	r22, r24
    2f0c:	cd 01       	movw	r24, r26
    2f0e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2f12:	da 01       	movw	r26, r20
    2f14:	c9 01       	movw	r24, r18
    2f16:	8d 8b       	std	Y+21, r24	; 0x15
    2f18:	9e 8b       	std	Y+22, r25	; 0x16
    2f1a:	af 8b       	std	Y+23, r26	; 0x17
    2f1c:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    2f1e:	8d 89       	ldd	r24, Y+21	; 0x15
    2f20:	80 5d       	subi	r24, 0xD0	; 208
    2f22:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num3=num2%1000;
    2f26:	89 8d       	ldd	r24, Y+25	; 0x19
    2f28:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2f2a:	ab 8d       	ldd	r26, Y+27	; 0x1b
    2f2c:	bc 8d       	ldd	r27, Y+28	; 0x1c
    2f2e:	28 ee       	ldi	r18, 0xE8	; 232
    2f30:	33 e0       	ldi	r19, 0x03	; 3
    2f32:	40 e0       	ldi	r20, 0x00	; 0
    2f34:	50 e0       	ldi	r21, 0x00	; 0
    2f36:	bc 01       	movw	r22, r24
    2f38:	cd 01       	movw	r24, r26
    2f3a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2f3e:	dc 01       	movw	r26, r24
    2f40:	cb 01       	movw	r24, r22
    2f42:	8d 8b       	std	Y+21, r24	; 0x15
    2f44:	9e 8b       	std	Y+22, r25	; 0x16
    2f46:	af 8b       	std	Y+23, r26	; 0x17
    2f48:	b8 8f       	std	Y+24, r27	; 0x18
		num4=num3/100;
    2f4a:	8d 89       	ldd	r24, Y+21	; 0x15
    2f4c:	9e 89       	ldd	r25, Y+22	; 0x16
    2f4e:	af 89       	ldd	r26, Y+23	; 0x17
    2f50:	b8 8d       	ldd	r27, Y+24	; 0x18
    2f52:	24 e6       	ldi	r18, 0x64	; 100
    2f54:	30 e0       	ldi	r19, 0x00	; 0
    2f56:	40 e0       	ldi	r20, 0x00	; 0
    2f58:	50 e0       	ldi	r21, 0x00	; 0
    2f5a:	bc 01       	movw	r22, r24
    2f5c:	cd 01       	movw	r24, r26
    2f5e:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2f62:	da 01       	movw	r26, r20
    2f64:	c9 01       	movw	r24, r18
    2f66:	89 8b       	std	Y+17, r24	; 0x11
    2f68:	9a 8b       	std	Y+18, r25	; 0x12
    2f6a:	ab 8b       	std	Y+19, r26	; 0x13
    2f6c:	bc 8b       	std	Y+20, r27	; 0x14
		LCD_vidwritedata(num4+48);
    2f6e:	89 89       	ldd	r24, Y+17	; 0x11
    2f70:	80 5d       	subi	r24, 0xD0	; 208
    2f72:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num3%100;
    2f76:	8d 89       	ldd	r24, Y+21	; 0x15
    2f78:	9e 89       	ldd	r25, Y+22	; 0x16
    2f7a:	af 89       	ldd	r26, Y+23	; 0x17
    2f7c:	b8 8d       	ldd	r27, Y+24	; 0x18
    2f7e:	24 e6       	ldi	r18, 0x64	; 100
    2f80:	30 e0       	ldi	r19, 0x00	; 0
    2f82:	40 e0       	ldi	r20, 0x00	; 0
    2f84:	50 e0       	ldi	r21, 0x00	; 0
    2f86:	bc 01       	movw	r22, r24
    2f88:	cd 01       	movw	r24, r26
    2f8a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2f8e:	dc 01       	movw	r26, r24
    2f90:	cb 01       	movw	r24, r22
    2f92:	89 8b       	std	Y+17, r24	; 0x11
    2f94:	9a 8b       	std	Y+18, r25	; 0x12
    2f96:	ab 8b       	std	Y+19, r26	; 0x13
    2f98:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/10;
    2f9a:	89 89       	ldd	r24, Y+17	; 0x11
    2f9c:	9a 89       	ldd	r25, Y+18	; 0x12
    2f9e:	ab 89       	ldd	r26, Y+19	; 0x13
    2fa0:	bc 89       	ldd	r27, Y+20	; 0x14
    2fa2:	2a e0       	ldi	r18, 0x0A	; 10
    2fa4:	30 e0       	ldi	r19, 0x00	; 0
    2fa6:	40 e0       	ldi	r20, 0x00	; 0
    2fa8:	50 e0       	ldi	r21, 0x00	; 0
    2faa:	bc 01       	movw	r22, r24
    2fac:	cd 01       	movw	r24, r26
    2fae:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2fb2:	da 01       	movw	r26, r20
    2fb4:	c9 01       	movw	r24, r18
    2fb6:	8d 87       	std	Y+13, r24	; 0x0d
    2fb8:	9e 87       	std	Y+14, r25	; 0x0e
    2fba:	af 87       	std	Y+15, r26	; 0x0f
    2fbc:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    2fbe:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fc0:	80 5d       	subi	r24, 0xD0	; 208
    2fc2:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num4%10;
    2fc6:	89 89       	ldd	r24, Y+17	; 0x11
    2fc8:	9a 89       	ldd	r25, Y+18	; 0x12
    2fca:	ab 89       	ldd	r26, Y+19	; 0x13
    2fcc:	bc 89       	ldd	r27, Y+20	; 0x14
    2fce:	2a e0       	ldi	r18, 0x0A	; 10
    2fd0:	30 e0       	ldi	r19, 0x00	; 0
    2fd2:	40 e0       	ldi	r20, 0x00	; 0
    2fd4:	50 e0       	ldi	r21, 0x00	; 0
    2fd6:	bc 01       	movw	r22, r24
    2fd8:	cd 01       	movw	r24, r26
    2fda:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    2fde:	dc 01       	movw	r26, r24
    2fe0:	cb 01       	movw	r24, r22
    2fe2:	89 87       	std	Y+9, r24	; 0x09
    2fe4:	9a 87       	std	Y+10, r25	; 0x0a
    2fe6:	ab 87       	std	Y+11, r26	; 0x0b
    2fe8:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    2fea:	89 85       	ldd	r24, Y+9	; 0x09
    2fec:	80 5d       	subi	r24, 0xD0	; 208
    2fee:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    2ff2:	4d c2       	rjmp	.+1178   	; 0x348e <LCD_viddisplayintegar2+0xad6>
	}
	else if (number>=1000000 && number <10000000)
    2ff4:	8b a1       	ldd	r24, Y+35	; 0x23
    2ff6:	9c a1       	ldd	r25, Y+36	; 0x24
    2ff8:	ad a1       	ldd	r26, Y+37	; 0x25
    2ffa:	be a1       	ldd	r27, Y+38	; 0x26
    2ffc:	80 34       	cpi	r24, 0x40	; 64
    2ffe:	22 e4       	ldi	r18, 0x42	; 66
    3000:	92 07       	cpc	r25, r18
    3002:	2f e0       	ldi	r18, 0x0F	; 15
    3004:	a2 07       	cpc	r26, r18
    3006:	20 e0       	ldi	r18, 0x00	; 0
    3008:	b2 07       	cpc	r27, r18
    300a:	08 f4       	brcc	.+2      	; 0x300e <LCD_viddisplayintegar2+0x656>
    300c:	06 c1       	rjmp	.+524    	; 0x321a <LCD_viddisplayintegar2+0x862>
    300e:	8b a1       	ldd	r24, Y+35	; 0x23
    3010:	9c a1       	ldd	r25, Y+36	; 0x24
    3012:	ad a1       	ldd	r26, Y+37	; 0x25
    3014:	be a1       	ldd	r27, Y+38	; 0x26
    3016:	80 38       	cpi	r24, 0x80	; 128
    3018:	26 e9       	ldi	r18, 0x96	; 150
    301a:	92 07       	cpc	r25, r18
    301c:	28 e9       	ldi	r18, 0x98	; 152
    301e:	a2 07       	cpc	r26, r18
    3020:	20 e0       	ldi	r18, 0x00	; 0
    3022:	b2 07       	cpc	r27, r18
    3024:	08 f0       	brcs	.+2      	; 0x3028 <LCD_viddisplayintegar2+0x670>
    3026:	f9 c0       	rjmp	.+498    	; 0x321a <LCD_viddisplayintegar2+0x862>
	{

		LCD_setcursorposition(line ,column);
    3028:	89 a1       	ldd	r24, Y+33	; 0x21
    302a:	6a a1       	ldd	r22, Y+34	; 0x22
    302c:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		num1=number/1000000;
    3030:	8b a1       	ldd	r24, Y+35	; 0x23
    3032:	9c a1       	ldd	r25, Y+36	; 0x24
    3034:	ad a1       	ldd	r26, Y+37	; 0x25
    3036:	be a1       	ldd	r27, Y+38	; 0x26
    3038:	20 e4       	ldi	r18, 0x40	; 64
    303a:	32 e4       	ldi	r19, 0x42	; 66
    303c:	4f e0       	ldi	r20, 0x0F	; 15
    303e:	50 e0       	ldi	r21, 0x00	; 0
    3040:	bc 01       	movw	r22, r24
    3042:	cd 01       	movw	r24, r26
    3044:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3048:	da 01       	movw	r26, r20
    304a:	c9 01       	movw	r24, r18
    304c:	8d 8f       	std	Y+29, r24	; 0x1d
    304e:	9e 8f       	std	Y+30, r25	; 0x1e
    3050:	af 8f       	std	Y+31, r26	; 0x1f
    3052:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    3054:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3056:	80 5d       	subi	r24, 0xD0	; 208
    3058:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%1000000;
    305c:	8b a1       	ldd	r24, Y+35	; 0x23
    305e:	9c a1       	ldd	r25, Y+36	; 0x24
    3060:	ad a1       	ldd	r26, Y+37	; 0x25
    3062:	be a1       	ldd	r27, Y+38	; 0x26
    3064:	20 e4       	ldi	r18, 0x40	; 64
    3066:	32 e4       	ldi	r19, 0x42	; 66
    3068:	4f e0       	ldi	r20, 0x0F	; 15
    306a:	50 e0       	ldi	r21, 0x00	; 0
    306c:	bc 01       	movw	r22, r24
    306e:	cd 01       	movw	r24, r26
    3070:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3074:	dc 01       	movw	r26, r24
    3076:	cb 01       	movw	r24, r22
    3078:	8d 8f       	std	Y+29, r24	; 0x1d
    307a:	9e 8f       	std	Y+30, r25	; 0x1e
    307c:	af 8f       	std	Y+31, r26	; 0x1f
    307e:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/100000;
    3080:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3082:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3084:	af 8d       	ldd	r26, Y+31	; 0x1f
    3086:	b8 a1       	ldd	r27, Y+32	; 0x20
    3088:	20 ea       	ldi	r18, 0xA0	; 160
    308a:	36 e8       	ldi	r19, 0x86	; 134
    308c:	41 e0       	ldi	r20, 0x01	; 1
    308e:	50 e0       	ldi	r21, 0x00	; 0
    3090:	bc 01       	movw	r22, r24
    3092:	cd 01       	movw	r24, r26
    3094:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3098:	da 01       	movw	r26, r20
    309a:	c9 01       	movw	r24, r18
    309c:	89 8f       	std	Y+25, r24	; 0x19
    309e:	9a 8f       	std	Y+26, r25	; 0x1a
    30a0:	ab 8f       	std	Y+27, r26	; 0x1b
    30a2:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    30a4:	89 8d       	ldd	r24, Y+25	; 0x19
    30a6:	80 5d       	subi	r24, 0xD0	; 208
    30a8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%100000;
    30ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
    30ae:	9e 8d       	ldd	r25, Y+30	; 0x1e
    30b0:	af 8d       	ldd	r26, Y+31	; 0x1f
    30b2:	b8 a1       	ldd	r27, Y+32	; 0x20
    30b4:	20 ea       	ldi	r18, 0xA0	; 160
    30b6:	36 e8       	ldi	r19, 0x86	; 134
    30b8:	41 e0       	ldi	r20, 0x01	; 1
    30ba:	50 e0       	ldi	r21, 0x00	; 0
    30bc:	bc 01       	movw	r22, r24
    30be:	cd 01       	movw	r24, r26
    30c0:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    30c4:	dc 01       	movw	r26, r24
    30c6:	cb 01       	movw	r24, r22
    30c8:	89 8f       	std	Y+25, r24	; 0x19
    30ca:	9a 8f       	std	Y+26, r25	; 0x1a
    30cc:	ab 8f       	std	Y+27, r26	; 0x1b
    30ce:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num2/10000;
    30d0:	89 8d       	ldd	r24, Y+25	; 0x19
    30d2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    30d4:	ab 8d       	ldd	r26, Y+27	; 0x1b
    30d6:	bc 8d       	ldd	r27, Y+28	; 0x1c
    30d8:	20 e1       	ldi	r18, 0x10	; 16
    30da:	37 e2       	ldi	r19, 0x27	; 39
    30dc:	40 e0       	ldi	r20, 0x00	; 0
    30de:	50 e0       	ldi	r21, 0x00	; 0
    30e0:	bc 01       	movw	r22, r24
    30e2:	cd 01       	movw	r24, r26
    30e4:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    30e8:	da 01       	movw	r26, r20
    30ea:	c9 01       	movw	r24, r18
    30ec:	8d 8b       	std	Y+21, r24	; 0x15
    30ee:	9e 8b       	std	Y+22, r25	; 0x16
    30f0:	af 8b       	std	Y+23, r26	; 0x17
    30f2:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    30f4:	8d 89       	ldd	r24, Y+21	; 0x15
    30f6:	80 5d       	subi	r24, 0xD0	; 208
    30f8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num3=num2%10000;
    30fc:	89 8d       	ldd	r24, Y+25	; 0x19
    30fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3100:	ab 8d       	ldd	r26, Y+27	; 0x1b
    3102:	bc 8d       	ldd	r27, Y+28	; 0x1c
    3104:	20 e1       	ldi	r18, 0x10	; 16
    3106:	37 e2       	ldi	r19, 0x27	; 39
    3108:	40 e0       	ldi	r20, 0x00	; 0
    310a:	50 e0       	ldi	r21, 0x00	; 0
    310c:	bc 01       	movw	r22, r24
    310e:	cd 01       	movw	r24, r26
    3110:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3114:	dc 01       	movw	r26, r24
    3116:	cb 01       	movw	r24, r22
    3118:	8d 8b       	std	Y+21, r24	; 0x15
    311a:	9e 8b       	std	Y+22, r25	; 0x16
    311c:	af 8b       	std	Y+23, r26	; 0x17
    311e:	b8 8f       	std	Y+24, r27	; 0x18
		num4=num3/1000;
    3120:	8d 89       	ldd	r24, Y+21	; 0x15
    3122:	9e 89       	ldd	r25, Y+22	; 0x16
    3124:	af 89       	ldd	r26, Y+23	; 0x17
    3126:	b8 8d       	ldd	r27, Y+24	; 0x18
    3128:	28 ee       	ldi	r18, 0xE8	; 232
    312a:	33 e0       	ldi	r19, 0x03	; 3
    312c:	40 e0       	ldi	r20, 0x00	; 0
    312e:	50 e0       	ldi	r21, 0x00	; 0
    3130:	bc 01       	movw	r22, r24
    3132:	cd 01       	movw	r24, r26
    3134:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3138:	da 01       	movw	r26, r20
    313a:	c9 01       	movw	r24, r18
    313c:	89 8b       	std	Y+17, r24	; 0x11
    313e:	9a 8b       	std	Y+18, r25	; 0x12
    3140:	ab 8b       	std	Y+19, r26	; 0x13
    3142:	bc 8b       	std	Y+20, r27	; 0x14
		LCD_vidwritedata(num4+48);
    3144:	89 89       	ldd	r24, Y+17	; 0x11
    3146:	80 5d       	subi	r24, 0xD0	; 208
    3148:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num3%1000;
    314c:	8d 89       	ldd	r24, Y+21	; 0x15
    314e:	9e 89       	ldd	r25, Y+22	; 0x16
    3150:	af 89       	ldd	r26, Y+23	; 0x17
    3152:	b8 8d       	ldd	r27, Y+24	; 0x18
    3154:	28 ee       	ldi	r18, 0xE8	; 232
    3156:	33 e0       	ldi	r19, 0x03	; 3
    3158:	40 e0       	ldi	r20, 0x00	; 0
    315a:	50 e0       	ldi	r21, 0x00	; 0
    315c:	bc 01       	movw	r22, r24
    315e:	cd 01       	movw	r24, r26
    3160:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3164:	dc 01       	movw	r26, r24
    3166:	cb 01       	movw	r24, r22
    3168:	89 8b       	std	Y+17, r24	; 0x11
    316a:	9a 8b       	std	Y+18, r25	; 0x12
    316c:	ab 8b       	std	Y+19, r26	; 0x13
    316e:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/100;
    3170:	89 89       	ldd	r24, Y+17	; 0x11
    3172:	9a 89       	ldd	r25, Y+18	; 0x12
    3174:	ab 89       	ldd	r26, Y+19	; 0x13
    3176:	bc 89       	ldd	r27, Y+20	; 0x14
    3178:	24 e6       	ldi	r18, 0x64	; 100
    317a:	30 e0       	ldi	r19, 0x00	; 0
    317c:	40 e0       	ldi	r20, 0x00	; 0
    317e:	50 e0       	ldi	r21, 0x00	; 0
    3180:	bc 01       	movw	r22, r24
    3182:	cd 01       	movw	r24, r26
    3184:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3188:	da 01       	movw	r26, r20
    318a:	c9 01       	movw	r24, r18
    318c:	8d 87       	std	Y+13, r24	; 0x0d
    318e:	9e 87       	std	Y+14, r25	; 0x0e
    3190:	af 87       	std	Y+15, r26	; 0x0f
    3192:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    3194:	8d 85       	ldd	r24, Y+13	; 0x0d
    3196:	80 5d       	subi	r24, 0xD0	; 208
    3198:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num5=num4%100;
    319c:	89 89       	ldd	r24, Y+17	; 0x11
    319e:	9a 89       	ldd	r25, Y+18	; 0x12
    31a0:	ab 89       	ldd	r26, Y+19	; 0x13
    31a2:	bc 89       	ldd	r27, Y+20	; 0x14
    31a4:	24 e6       	ldi	r18, 0x64	; 100
    31a6:	30 e0       	ldi	r19, 0x00	; 0
    31a8:	40 e0       	ldi	r20, 0x00	; 0
    31aa:	50 e0       	ldi	r21, 0x00	; 0
    31ac:	bc 01       	movw	r22, r24
    31ae:	cd 01       	movw	r24, r26
    31b0:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    31b4:	dc 01       	movw	r26, r24
    31b6:	cb 01       	movw	r24, r22
    31b8:	8d 87       	std	Y+13, r24	; 0x0d
    31ba:	9e 87       	std	Y+14, r25	; 0x0e
    31bc:	af 87       	std	Y+15, r26	; 0x0f
    31be:	b8 8b       	std	Y+16, r27	; 0x10
		num6=num5/10;
    31c0:	8d 85       	ldd	r24, Y+13	; 0x0d
    31c2:	9e 85       	ldd	r25, Y+14	; 0x0e
    31c4:	af 85       	ldd	r26, Y+15	; 0x0f
    31c6:	b8 89       	ldd	r27, Y+16	; 0x10
    31c8:	2a e0       	ldi	r18, 0x0A	; 10
    31ca:	30 e0       	ldi	r19, 0x00	; 0
    31cc:	40 e0       	ldi	r20, 0x00	; 0
    31ce:	50 e0       	ldi	r21, 0x00	; 0
    31d0:	bc 01       	movw	r22, r24
    31d2:	cd 01       	movw	r24, r26
    31d4:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    31d8:	da 01       	movw	r26, r20
    31da:	c9 01       	movw	r24, r18
    31dc:	89 87       	std	Y+9, r24	; 0x09
    31de:	9a 87       	std	Y+10, r25	; 0x0a
    31e0:	ab 87       	std	Y+11, r26	; 0x0b
    31e2:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    31e4:	89 85       	ldd	r24, Y+9	; 0x09
    31e6:	80 5d       	subi	r24, 0xD0	; 208
    31e8:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num5%10;
    31ec:	8d 85       	ldd	r24, Y+13	; 0x0d
    31ee:	9e 85       	ldd	r25, Y+14	; 0x0e
    31f0:	af 85       	ldd	r26, Y+15	; 0x0f
    31f2:	b8 89       	ldd	r27, Y+16	; 0x10
    31f4:	2a e0       	ldi	r18, 0x0A	; 10
    31f6:	30 e0       	ldi	r19, 0x00	; 0
    31f8:	40 e0       	ldi	r20, 0x00	; 0
    31fa:	50 e0       	ldi	r21, 0x00	; 0
    31fc:	bc 01       	movw	r22, r24
    31fe:	cd 01       	movw	r24, r26
    3200:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    3204:	dc 01       	movw	r26, r24
    3206:	cb 01       	movw	r24, r22
    3208:	89 87       	std	Y+9, r24	; 0x09
    320a:	9a 87       	std	Y+10, r25	; 0x0a
    320c:	ab 87       	std	Y+11, r26	; 0x0b
    320e:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    3210:	89 85       	ldd	r24, Y+9	; 0x09
    3212:	80 5d       	subi	r24, 0xD0	; 208
    3214:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
    3218:	3a c1       	rjmp	.+628    	; 0x348e <LCD_viddisplayintegar2+0xad6>
	}
	else if (number>=10000000 && number <100000000)
    321a:	8b a1       	ldd	r24, Y+35	; 0x23
    321c:	9c a1       	ldd	r25, Y+36	; 0x24
    321e:	ad a1       	ldd	r26, Y+37	; 0x25
    3220:	be a1       	ldd	r27, Y+38	; 0x26
    3222:	80 38       	cpi	r24, 0x80	; 128
    3224:	26 e9       	ldi	r18, 0x96	; 150
    3226:	92 07       	cpc	r25, r18
    3228:	28 e9       	ldi	r18, 0x98	; 152
    322a:	a2 07       	cpc	r26, r18
    322c:	20 e0       	ldi	r18, 0x00	; 0
    322e:	b2 07       	cpc	r27, r18
    3230:	08 f4       	brcc	.+2      	; 0x3234 <LCD_viddisplayintegar2+0x87c>
    3232:	2d c1       	rjmp	.+602    	; 0x348e <LCD_viddisplayintegar2+0xad6>
    3234:	8b a1       	ldd	r24, Y+35	; 0x23
    3236:	9c a1       	ldd	r25, Y+36	; 0x24
    3238:	ad a1       	ldd	r26, Y+37	; 0x25
    323a:	be a1       	ldd	r27, Y+38	; 0x26
    323c:	80 30       	cpi	r24, 0x00	; 0
    323e:	21 ee       	ldi	r18, 0xE1	; 225
    3240:	92 07       	cpc	r25, r18
    3242:	25 ef       	ldi	r18, 0xF5	; 245
    3244:	a2 07       	cpc	r26, r18
    3246:	25 e0       	ldi	r18, 0x05	; 5
    3248:	b2 07       	cpc	r27, r18
    324a:	08 f0       	brcs	.+2      	; 0x324e <LCD_viddisplayintegar2+0x896>
    324c:	20 c1       	rjmp	.+576    	; 0x348e <LCD_viddisplayintegar2+0xad6>
	{

		LCD_setcursorposition(line ,column);
    324e:	89 a1       	ldd	r24, Y+33	; 0x21
    3250:	6a a1       	ldd	r22, Y+34	; 0x22
    3252:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		num1=number/10000000;
    3256:	8b a1       	ldd	r24, Y+35	; 0x23
    3258:	9c a1       	ldd	r25, Y+36	; 0x24
    325a:	ad a1       	ldd	r26, Y+37	; 0x25
    325c:	be a1       	ldd	r27, Y+38	; 0x26
    325e:	20 e8       	ldi	r18, 0x80	; 128
    3260:	36 e9       	ldi	r19, 0x96	; 150
    3262:	48 e9       	ldi	r20, 0x98	; 152
    3264:	50 e0       	ldi	r21, 0x00	; 0
    3266:	bc 01       	movw	r22, r24
    3268:	cd 01       	movw	r24, r26
    326a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    326e:	da 01       	movw	r26, r20
    3270:	c9 01       	movw	r24, r18
    3272:	8d 8f       	std	Y+29, r24	; 0x1d
    3274:	9e 8f       	std	Y+30, r25	; 0x1e
    3276:	af 8f       	std	Y+31, r26	; 0x1f
    3278:	b8 a3       	std	Y+32, r27	; 0x20
		LCD_vidwritedata(num1+48);
    327a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    327c:	80 5d       	subi	r24, 0xD0	; 208
    327e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num1=number%10000000;
    3282:	8b a1       	ldd	r24, Y+35	; 0x23
    3284:	9c a1       	ldd	r25, Y+36	; 0x24
    3286:	ad a1       	ldd	r26, Y+37	; 0x25
    3288:	be a1       	ldd	r27, Y+38	; 0x26
    328a:	20 e8       	ldi	r18, 0x80	; 128
    328c:	36 e9       	ldi	r19, 0x96	; 150
    328e:	48 e9       	ldi	r20, 0x98	; 152
    3290:	50 e0       	ldi	r21, 0x00	; 0
    3292:	bc 01       	movw	r22, r24
    3294:	cd 01       	movw	r24, r26
    3296:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    329a:	dc 01       	movw	r26, r24
    329c:	cb 01       	movw	r24, r22
    329e:	8d 8f       	std	Y+29, r24	; 0x1d
    32a0:	9e 8f       	std	Y+30, r25	; 0x1e
    32a2:	af 8f       	std	Y+31, r26	; 0x1f
    32a4:	b8 a3       	std	Y+32, r27	; 0x20
		num2=num1/1000000;
    32a6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    32a8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    32aa:	af 8d       	ldd	r26, Y+31	; 0x1f
    32ac:	b8 a1       	ldd	r27, Y+32	; 0x20
    32ae:	20 e4       	ldi	r18, 0x40	; 64
    32b0:	32 e4       	ldi	r19, 0x42	; 66
    32b2:	4f e0       	ldi	r20, 0x0F	; 15
    32b4:	50 e0       	ldi	r21, 0x00	; 0
    32b6:	bc 01       	movw	r22, r24
    32b8:	cd 01       	movw	r24, r26
    32ba:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    32be:	da 01       	movw	r26, r20
    32c0:	c9 01       	movw	r24, r18
    32c2:	89 8f       	std	Y+25, r24	; 0x19
    32c4:	9a 8f       	std	Y+26, r25	; 0x1a
    32c6:	ab 8f       	std	Y+27, r26	; 0x1b
    32c8:	bc 8f       	std	Y+28, r27	; 0x1c
		LCD_vidwritedata(num2+48);
    32ca:	89 8d       	ldd	r24, Y+25	; 0x19
    32cc:	80 5d       	subi	r24, 0xD0	; 208
    32ce:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num2=num1%1000000;
    32d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    32d4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    32d6:	af 8d       	ldd	r26, Y+31	; 0x1f
    32d8:	b8 a1       	ldd	r27, Y+32	; 0x20
    32da:	20 e4       	ldi	r18, 0x40	; 64
    32dc:	32 e4       	ldi	r19, 0x42	; 66
    32de:	4f e0       	ldi	r20, 0x0F	; 15
    32e0:	50 e0       	ldi	r21, 0x00	; 0
    32e2:	bc 01       	movw	r22, r24
    32e4:	cd 01       	movw	r24, r26
    32e6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    32ea:	dc 01       	movw	r26, r24
    32ec:	cb 01       	movw	r24, r22
    32ee:	89 8f       	std	Y+25, r24	; 0x19
    32f0:	9a 8f       	std	Y+26, r25	; 0x1a
    32f2:	ab 8f       	std	Y+27, r26	; 0x1b
    32f4:	bc 8f       	std	Y+28, r27	; 0x1c
		num3=num3/100000;
    32f6:	8d 89       	ldd	r24, Y+21	; 0x15
    32f8:	9e 89       	ldd	r25, Y+22	; 0x16
    32fa:	af 89       	ldd	r26, Y+23	; 0x17
    32fc:	b8 8d       	ldd	r27, Y+24	; 0x18
    32fe:	20 ea       	ldi	r18, 0xA0	; 160
    3300:	36 e8       	ldi	r19, 0x86	; 134
    3302:	41 e0       	ldi	r20, 0x01	; 1
    3304:	50 e0       	ldi	r21, 0x00	; 0
    3306:	bc 01       	movw	r22, r24
    3308:	cd 01       	movw	r24, r26
    330a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    330e:	da 01       	movw	r26, r20
    3310:	c9 01       	movw	r24, r18
    3312:	8d 8b       	std	Y+21, r24	; 0x15
    3314:	9e 8b       	std	Y+22, r25	; 0x16
    3316:	af 8b       	std	Y+23, r26	; 0x17
    3318:	b8 8f       	std	Y+24, r27	; 0x18
		LCD_vidwritedata(num3+48);
    331a:	8d 89       	ldd	r24, Y+21	; 0x15
    331c:	80 5d       	subi	r24, 0xD0	; 208
    331e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num3=num2%100000;
    3322:	89 8d       	ldd	r24, Y+25	; 0x19
    3324:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3326:	ab 8d       	ldd	r26, Y+27	; 0x1b
    3328:	bc 8d       	ldd	r27, Y+28	; 0x1c
    332a:	20 ea       	ldi	r18, 0xA0	; 160
    332c:	36 e8       	ldi	r19, 0x86	; 134
    332e:	41 e0       	ldi	r20, 0x01	; 1
    3330:	50 e0       	ldi	r21, 0x00	; 0
    3332:	bc 01       	movw	r22, r24
    3334:	cd 01       	movw	r24, r26
    3336:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    333a:	dc 01       	movw	r26, r24
    333c:	cb 01       	movw	r24, r22
    333e:	8d 8b       	std	Y+21, r24	; 0x15
    3340:	9e 8b       	std	Y+22, r25	; 0x16
    3342:	af 8b       	std	Y+23, r26	; 0x17
    3344:	b8 8f       	std	Y+24, r27	; 0x18
		num4=num3/10000;
    3346:	8d 89       	ldd	r24, Y+21	; 0x15
    3348:	9e 89       	ldd	r25, Y+22	; 0x16
    334a:	af 89       	ldd	r26, Y+23	; 0x17
    334c:	b8 8d       	ldd	r27, Y+24	; 0x18
    334e:	20 e1       	ldi	r18, 0x10	; 16
    3350:	37 e2       	ldi	r19, 0x27	; 39
    3352:	40 e0       	ldi	r20, 0x00	; 0
    3354:	50 e0       	ldi	r21, 0x00	; 0
    3356:	bc 01       	movw	r22, r24
    3358:	cd 01       	movw	r24, r26
    335a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    335e:	da 01       	movw	r26, r20
    3360:	c9 01       	movw	r24, r18
    3362:	89 8b       	std	Y+17, r24	; 0x11
    3364:	9a 8b       	std	Y+18, r25	; 0x12
    3366:	ab 8b       	std	Y+19, r26	; 0x13
    3368:	bc 8b       	std	Y+20, r27	; 0x14
		LCD_vidwritedata(num4+48);
    336a:	89 89       	ldd	r24, Y+17	; 0x11
    336c:	80 5d       	subi	r24, 0xD0	; 208
    336e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num4=num3%10000;
    3372:	8d 89       	ldd	r24, Y+21	; 0x15
    3374:	9e 89       	ldd	r25, Y+22	; 0x16
    3376:	af 89       	ldd	r26, Y+23	; 0x17
    3378:	b8 8d       	ldd	r27, Y+24	; 0x18
    337a:	20 e1       	ldi	r18, 0x10	; 16
    337c:	37 e2       	ldi	r19, 0x27	; 39
    337e:	40 e0       	ldi	r20, 0x00	; 0
    3380:	50 e0       	ldi	r21, 0x00	; 0
    3382:	bc 01       	movw	r22, r24
    3384:	cd 01       	movw	r24, r26
    3386:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    338a:	dc 01       	movw	r26, r24
    338c:	cb 01       	movw	r24, r22
    338e:	89 8b       	std	Y+17, r24	; 0x11
    3390:	9a 8b       	std	Y+18, r25	; 0x12
    3392:	ab 8b       	std	Y+19, r26	; 0x13
    3394:	bc 8b       	std	Y+20, r27	; 0x14
		num5=num4/1000;
    3396:	89 89       	ldd	r24, Y+17	; 0x11
    3398:	9a 89       	ldd	r25, Y+18	; 0x12
    339a:	ab 89       	ldd	r26, Y+19	; 0x13
    339c:	bc 89       	ldd	r27, Y+20	; 0x14
    339e:	28 ee       	ldi	r18, 0xE8	; 232
    33a0:	33 e0       	ldi	r19, 0x03	; 3
    33a2:	40 e0       	ldi	r20, 0x00	; 0
    33a4:	50 e0       	ldi	r21, 0x00	; 0
    33a6:	bc 01       	movw	r22, r24
    33a8:	cd 01       	movw	r24, r26
    33aa:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    33ae:	da 01       	movw	r26, r20
    33b0:	c9 01       	movw	r24, r18
    33b2:	8d 87       	std	Y+13, r24	; 0x0d
    33b4:	9e 87       	std	Y+14, r25	; 0x0e
    33b6:	af 87       	std	Y+15, r26	; 0x0f
    33b8:	b8 8b       	std	Y+16, r27	; 0x10
		LCD_vidwritedata(num5+48);
    33ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    33bc:	80 5d       	subi	r24, 0xD0	; 208
    33be:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num5=num4%1000;
    33c2:	89 89       	ldd	r24, Y+17	; 0x11
    33c4:	9a 89       	ldd	r25, Y+18	; 0x12
    33c6:	ab 89       	ldd	r26, Y+19	; 0x13
    33c8:	bc 89       	ldd	r27, Y+20	; 0x14
    33ca:	28 ee       	ldi	r18, 0xE8	; 232
    33cc:	33 e0       	ldi	r19, 0x03	; 3
    33ce:	40 e0       	ldi	r20, 0x00	; 0
    33d0:	50 e0       	ldi	r21, 0x00	; 0
    33d2:	bc 01       	movw	r22, r24
    33d4:	cd 01       	movw	r24, r26
    33d6:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    33da:	dc 01       	movw	r26, r24
    33dc:	cb 01       	movw	r24, r22
    33de:	8d 87       	std	Y+13, r24	; 0x0d
    33e0:	9e 87       	std	Y+14, r25	; 0x0e
    33e2:	af 87       	std	Y+15, r26	; 0x0f
    33e4:	b8 8b       	std	Y+16, r27	; 0x10
		num6=num5/100;
    33e6:	8d 85       	ldd	r24, Y+13	; 0x0d
    33e8:	9e 85       	ldd	r25, Y+14	; 0x0e
    33ea:	af 85       	ldd	r26, Y+15	; 0x0f
    33ec:	b8 89       	ldd	r27, Y+16	; 0x10
    33ee:	24 e6       	ldi	r18, 0x64	; 100
    33f0:	30 e0       	ldi	r19, 0x00	; 0
    33f2:	40 e0       	ldi	r20, 0x00	; 0
    33f4:	50 e0       	ldi	r21, 0x00	; 0
    33f6:	bc 01       	movw	r22, r24
    33f8:	cd 01       	movw	r24, r26
    33fa:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    33fe:	da 01       	movw	r26, r20
    3400:	c9 01       	movw	r24, r18
    3402:	89 87       	std	Y+9, r24	; 0x09
    3404:	9a 87       	std	Y+10, r25	; 0x0a
    3406:	ab 87       	std	Y+11, r26	; 0x0b
    3408:	bc 87       	std	Y+12, r27	; 0x0c
		LCD_vidwritedata(num6+48);
    340a:	89 85       	ldd	r24, Y+9	; 0x09
    340c:	80 5d       	subi	r24, 0xD0	; 208
    340e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num6=num5%100;
    3412:	8d 85       	ldd	r24, Y+13	; 0x0d
    3414:	9e 85       	ldd	r25, Y+14	; 0x0e
    3416:	af 85       	ldd	r26, Y+15	; 0x0f
    3418:	b8 89       	ldd	r27, Y+16	; 0x10
    341a:	24 e6       	ldi	r18, 0x64	; 100
    341c:	30 e0       	ldi	r19, 0x00	; 0
    341e:	40 e0       	ldi	r20, 0x00	; 0
    3420:	50 e0       	ldi	r21, 0x00	; 0
    3422:	bc 01       	movw	r22, r24
    3424:	cd 01       	movw	r24, r26
    3426:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    342a:	dc 01       	movw	r26, r24
    342c:	cb 01       	movw	r24, r22
    342e:	89 87       	std	Y+9, r24	; 0x09
    3430:	9a 87       	std	Y+10, r25	; 0x0a
    3432:	ab 87       	std	Y+11, r26	; 0x0b
    3434:	bc 87       	std	Y+12, r27	; 0x0c
		num7=num6/10;
    3436:	89 85       	ldd	r24, Y+9	; 0x09
    3438:	9a 85       	ldd	r25, Y+10	; 0x0a
    343a:	ab 85       	ldd	r26, Y+11	; 0x0b
    343c:	bc 85       	ldd	r27, Y+12	; 0x0c
    343e:	2a e0       	ldi	r18, 0x0A	; 10
    3440:	30 e0       	ldi	r19, 0x00	; 0
    3442:	40 e0       	ldi	r20, 0x00	; 0
    3444:	50 e0       	ldi	r21, 0x00	; 0
    3446:	bc 01       	movw	r22, r24
    3448:	cd 01       	movw	r24, r26
    344a:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    344e:	da 01       	movw	r26, r20
    3450:	c9 01       	movw	r24, r18
    3452:	8d 83       	std	Y+5, r24	; 0x05
    3454:	9e 83       	std	Y+6, r25	; 0x06
    3456:	af 83       	std	Y+7, r26	; 0x07
    3458:	b8 87       	std	Y+8, r27	; 0x08
		LCD_vidwritedata(num7+48);
    345a:	8d 81       	ldd	r24, Y+5	; 0x05
    345c:	80 5d       	subi	r24, 0xD0	; 208
    345e:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		num7=num6%10;
    3462:	89 85       	ldd	r24, Y+9	; 0x09
    3464:	9a 85       	ldd	r25, Y+10	; 0x0a
    3466:	ab 85       	ldd	r26, Y+11	; 0x0b
    3468:	bc 85       	ldd	r27, Y+12	; 0x0c
    346a:	2a e0       	ldi	r18, 0x0A	; 10
    346c:	30 e0       	ldi	r19, 0x00	; 0
    346e:	40 e0       	ldi	r20, 0x00	; 0
    3470:	50 e0       	ldi	r21, 0x00	; 0
    3472:	bc 01       	movw	r22, r24
    3474:	cd 01       	movw	r24, r26
    3476:	0e 94 1f 1d 	call	0x3a3e	; 0x3a3e <__udivmodsi4>
    347a:	dc 01       	movw	r26, r24
    347c:	cb 01       	movw	r24, r22
    347e:	8d 83       	std	Y+5, r24	; 0x05
    3480:	9e 83       	std	Y+6, r25	; 0x06
    3482:	af 83       	std	Y+7, r26	; 0x07
    3484:	b8 87       	std	Y+8, r27	; 0x08
		LCD_vidwritedata(num7+48);
    3486:	8d 81       	ldd	r24, Y+5	; 0x05
    3488:	80 5d       	subi	r24, 0xD0	; 208
    348a:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
	}
}
    348e:	a6 96       	adiw	r28, 0x26	; 38
    3490:	0f b6       	in	r0, 0x3f	; 63
    3492:	f8 94       	cli
    3494:	de bf       	out	0x3e, r29	; 62
    3496:	0f be       	out	0x3f, r0	; 63
    3498:	cd bf       	out	0x3d, r28	; 61
    349a:	cf 91       	pop	r28
    349c:	df 91       	pop	r29
    349e:	08 95       	ret

000034a0 <LCD_viddisplayfloat>:

extern void LCD_viddisplayfloat(u8 line,u8 column,f32 number)
{
    34a0:	1f 93       	push	r17
    34a2:	df 93       	push	r29
    34a4:	cf 93       	push	r28
    34a6:	cd b7       	in	r28, 0x3d	; 61
    34a8:	de b7       	in	r29, 0x3e	; 62
    34aa:	2e 97       	sbiw	r28, 0x0e	; 14
    34ac:	0f b6       	in	r0, 0x3f	; 63
    34ae:	f8 94       	cli
    34b0:	de bf       	out	0x3e, r29	; 62
    34b2:	0f be       	out	0x3f, r0	; 63
    34b4:	cd bf       	out	0x3d, r28	; 61
    34b6:	89 87       	std	Y+9, r24	; 0x09
    34b8:	6a 87       	std	Y+10, r22	; 0x0a
    34ba:	2b 87       	std	Y+11, r18	; 0x0b
    34bc:	3c 87       	std	Y+12, r19	; 0x0c
    34be:	4d 87       	std	Y+13, r20	; 0x0d
    34c0:	5e 87       	std	Y+14, r21	; 0x0e
	f32 decimal;
	u32 num;
    num=number;
    34c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    34c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    34c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    34c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    34ca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    34ce:	dc 01       	movw	r26, r24
    34d0:	cb 01       	movw	r24, r22
    34d2:	89 83       	std	Y+1, r24	; 0x01
    34d4:	9a 83       	std	Y+2, r25	; 0x02
    34d6:	ab 83       	std	Y+3, r26	; 0x03
    34d8:	bc 83       	std	Y+4, r27	; 0x04
	decimal=number-(f32) num;
    34da:	69 81       	ldd	r22, Y+1	; 0x01
    34dc:	7a 81       	ldd	r23, Y+2	; 0x02
    34de:	8b 81       	ldd	r24, Y+3	; 0x03
    34e0:	9c 81       	ldd	r25, Y+4	; 0x04
    34e2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__floatunsisf>
    34e6:	9b 01       	movw	r18, r22
    34e8:	ac 01       	movw	r20, r24
    34ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    34ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    34ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    34f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    34f2:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
    34f6:	dc 01       	movw	r26, r24
    34f8:	cb 01       	movw	r24, r22
    34fa:	8d 83       	std	Y+5, r24	; 0x05
    34fc:	9e 83       	std	Y+6, r25	; 0x06
    34fe:	af 83       	std	Y+7, r26	; 0x07
    3500:	b8 87       	std	Y+8, r27	; 0x08
	LCD_viddisplayintegar2(line,column,num);
    3502:	29 81       	ldd	r18, Y+1	; 0x01
    3504:	3a 81       	ldd	r19, Y+2	; 0x02
    3506:	4b 81       	ldd	r20, Y+3	; 0x03
    3508:	5c 81       	ldd	r21, Y+4	; 0x04
    350a:	89 85       	ldd	r24, Y+9	; 0x09
    350c:	6a 85       	ldd	r22, Y+10	; 0x0a
    350e:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	if (decimal <1 && decimal>=0.1)
    3512:	6d 81       	ldd	r22, Y+5	; 0x05
    3514:	7e 81       	ldd	r23, Y+6	; 0x06
    3516:	8f 81       	ldd	r24, Y+7	; 0x07
    3518:	98 85       	ldd	r25, Y+8	; 0x08
    351a:	20 e0       	ldi	r18, 0x00	; 0
    351c:	30 e0       	ldi	r19, 0x00	; 0
    351e:	40 e8       	ldi	r20, 0x80	; 128
    3520:	5f e3       	ldi	r21, 0x3F	; 63
    3522:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3526:	88 23       	and	r24, r24
    3528:	ac f5       	brge	.+106    	; 0x3594 <LCD_viddisplayfloat+0xf4>
    352a:	6d 81       	ldd	r22, Y+5	; 0x05
    352c:	7e 81       	ldd	r23, Y+6	; 0x06
    352e:	8f 81       	ldd	r24, Y+7	; 0x07
    3530:	98 85       	ldd	r25, Y+8	; 0x08
    3532:	2d ec       	ldi	r18, 0xCD	; 205
    3534:	3c ec       	ldi	r19, 0xCC	; 204
    3536:	4c ec       	ldi	r20, 0xCC	; 204
    3538:	5d e3       	ldi	r21, 0x3D	; 61
    353a:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
    353e:	88 23       	and	r24, r24
    3540:	4c f1       	brlt	.+82     	; 0x3594 <LCD_viddisplayfloat+0xf4>
	{
		decimal = decimal*10;
    3542:	6d 81       	ldd	r22, Y+5	; 0x05
    3544:	7e 81       	ldd	r23, Y+6	; 0x06
    3546:	8f 81       	ldd	r24, Y+7	; 0x07
    3548:	98 85       	ldd	r25, Y+8	; 0x08
    354a:	20 e0       	ldi	r18, 0x00	; 0
    354c:	30 e0       	ldi	r19, 0x00	; 0
    354e:	40 e2       	ldi	r20, 0x20	; 32
    3550:	51 e4       	ldi	r21, 0x41	; 65
    3552:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3556:	dc 01       	movw	r26, r24
    3558:	cb 01       	movw	r24, r22
    355a:	8d 83       	std	Y+5, r24	; 0x05
    355c:	9e 83       	std	Y+6, r25	; 0x06
    355e:	af 83       	std	Y+7, r26	; 0x07
    3560:	b8 87       	std	Y+8, r27	; 0x08
		LCD_setcursorposition(line,column+1);
    3562:	8a 85       	ldd	r24, Y+10	; 0x0a
    3564:	98 2f       	mov	r25, r24
    3566:	9f 5f       	subi	r25, 0xFF	; 255
    3568:	89 85       	ldd	r24, Y+9	; 0x09
    356a:	69 2f       	mov	r22, r25
    356c:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritedata('.');
    3570:	8e e2       	ldi	r24, 0x2E	; 46
    3572:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <LCD_vidwritedata>
		LCD_viddisplayintegar2(line,column+2,decimal);
    3576:	8a 85       	ldd	r24, Y+10	; 0x0a
    3578:	18 2f       	mov	r17, r24
    357a:	1e 5f       	subi	r17, 0xFE	; 254
    357c:	6d 81       	ldd	r22, Y+5	; 0x05
    357e:	7e 81       	ldd	r23, Y+6	; 0x06
    3580:	8f 81       	ldd	r24, Y+7	; 0x07
    3582:	98 85       	ldd	r25, Y+8	; 0x08
    3584:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3588:	9b 01       	movw	r18, r22
    358a:	ac 01       	movw	r20, r24
    358c:	89 85       	ldd	r24, Y+9	; 0x09
    358e:	61 2f       	mov	r22, r17
    3590:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	}
	if (decimal<0.1 && decimal>=0.01)
    3594:	6d 81       	ldd	r22, Y+5	; 0x05
    3596:	7e 81       	ldd	r23, Y+6	; 0x06
    3598:	8f 81       	ldd	r24, Y+7	; 0x07
    359a:	98 85       	ldd	r25, Y+8	; 0x08
    359c:	2d ec       	ldi	r18, 0xCD	; 205
    359e:	3c ec       	ldi	r19, 0xCC	; 204
    35a0:	4c ec       	ldi	r20, 0xCC	; 204
    35a2:	5d e3       	ldi	r21, 0x3D	; 61
    35a4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    35a8:	88 23       	and	r24, r24
    35aa:	b4 f5       	brge	.+108    	; 0x3618 <LCD_viddisplayfloat+0x178>
    35ac:	6d 81       	ldd	r22, Y+5	; 0x05
    35ae:	7e 81       	ldd	r23, Y+6	; 0x06
    35b0:	8f 81       	ldd	r24, Y+7	; 0x07
    35b2:	98 85       	ldd	r25, Y+8	; 0x08
    35b4:	2a e0       	ldi	r18, 0x0A	; 10
    35b6:	37 ed       	ldi	r19, 0xD7	; 215
    35b8:	43 e2       	ldi	r20, 0x23	; 35
    35ba:	5c e3       	ldi	r21, 0x3C	; 60
    35bc:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
    35c0:	88 23       	and	r24, r24
    35c2:	54 f1       	brlt	.+84     	; 0x3618 <LCD_viddisplayfloat+0x178>
	{
		decimal = decimal*100;
    35c4:	6d 81       	ldd	r22, Y+5	; 0x05
    35c6:	7e 81       	ldd	r23, Y+6	; 0x06
    35c8:	8f 81       	ldd	r24, Y+7	; 0x07
    35ca:	98 85       	ldd	r25, Y+8	; 0x08
    35cc:	20 e0       	ldi	r18, 0x00	; 0
    35ce:	30 e0       	ldi	r19, 0x00	; 0
    35d0:	48 ec       	ldi	r20, 0xC8	; 200
    35d2:	52 e4       	ldi	r21, 0x42	; 66
    35d4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    35d8:	dc 01       	movw	r26, r24
    35da:	cb 01       	movw	r24, r22
    35dc:	8d 83       	std	Y+5, r24	; 0x05
    35de:	9e 83       	std	Y+6, r25	; 0x06
    35e0:	af 83       	std	Y+7, r26	; 0x07
    35e2:	b8 87       	std	Y+8, r27	; 0x08
		LCD_setcursorposition(line,column+1);
    35e4:	8a 85       	ldd	r24, Y+10	; 0x0a
    35e6:	98 2f       	mov	r25, r24
    35e8:	9f 5f       	subi	r25, 0xFF	; 255
    35ea:	89 85       	ldd	r24, Y+9	; 0x09
    35ec:	69 2f       	mov	r22, r25
    35ee:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritestringoncursor(".0");
    35f2:	80 e6       	ldi	r24, 0x60	; 96
    35f4:	90 e0       	ldi	r25, 0x00	; 0
    35f6:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <LCD_vidwritestringoncursor>
		LCD_viddisplayintegar2(line,column+3,decimal);
    35fa:	8a 85       	ldd	r24, Y+10	; 0x0a
    35fc:	18 2f       	mov	r17, r24
    35fe:	1d 5f       	subi	r17, 0xFD	; 253
    3600:	6d 81       	ldd	r22, Y+5	; 0x05
    3602:	7e 81       	ldd	r23, Y+6	; 0x06
    3604:	8f 81       	ldd	r24, Y+7	; 0x07
    3606:	98 85       	ldd	r25, Y+8	; 0x08
    3608:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    360c:	9b 01       	movw	r18, r22
    360e:	ac 01       	movw	r20, r24
    3610:	89 85       	ldd	r24, Y+9	; 0x09
    3612:	61 2f       	mov	r22, r17
    3614:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	}
	if (decimal<0.01 && decimal>=0.001)
    3618:	6d 81       	ldd	r22, Y+5	; 0x05
    361a:	7e 81       	ldd	r23, Y+6	; 0x06
    361c:	8f 81       	ldd	r24, Y+7	; 0x07
    361e:	98 85       	ldd	r25, Y+8	; 0x08
    3620:	2a e0       	ldi	r18, 0x0A	; 10
    3622:	37 ed       	ldi	r19, 0xD7	; 215
    3624:	43 e2       	ldi	r20, 0x23	; 35
    3626:	5c e3       	ldi	r21, 0x3C	; 60
    3628:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    362c:	88 23       	and	r24, r24
    362e:	b4 f5       	brge	.+108    	; 0x369c <LCD_viddisplayfloat+0x1fc>
    3630:	6d 81       	ldd	r22, Y+5	; 0x05
    3632:	7e 81       	ldd	r23, Y+6	; 0x06
    3634:	8f 81       	ldd	r24, Y+7	; 0x07
    3636:	98 85       	ldd	r25, Y+8	; 0x08
    3638:	2f e6       	ldi	r18, 0x6F	; 111
    363a:	32 e1       	ldi	r19, 0x12	; 18
    363c:	43 e8       	ldi	r20, 0x83	; 131
    363e:	5a e3       	ldi	r21, 0x3A	; 58
    3640:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
    3644:	88 23       	and	r24, r24
    3646:	54 f1       	brlt	.+84     	; 0x369c <LCD_viddisplayfloat+0x1fc>
	{
		decimal = decimal*1000;
    3648:	6d 81       	ldd	r22, Y+5	; 0x05
    364a:	7e 81       	ldd	r23, Y+6	; 0x06
    364c:	8f 81       	ldd	r24, Y+7	; 0x07
    364e:	98 85       	ldd	r25, Y+8	; 0x08
    3650:	20 e0       	ldi	r18, 0x00	; 0
    3652:	30 e0       	ldi	r19, 0x00	; 0
    3654:	4a e7       	ldi	r20, 0x7A	; 122
    3656:	54 e4       	ldi	r21, 0x44	; 68
    3658:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    365c:	dc 01       	movw	r26, r24
    365e:	cb 01       	movw	r24, r22
    3660:	8d 83       	std	Y+5, r24	; 0x05
    3662:	9e 83       	std	Y+6, r25	; 0x06
    3664:	af 83       	std	Y+7, r26	; 0x07
    3666:	b8 87       	std	Y+8, r27	; 0x08
		LCD_setcursorposition(line,column+1);
    3668:	8a 85       	ldd	r24, Y+10	; 0x0a
    366a:	98 2f       	mov	r25, r24
    366c:	9f 5f       	subi	r25, 0xFF	; 255
    366e:	89 85       	ldd	r24, Y+9	; 0x09
    3670:	69 2f       	mov	r22, r25
    3672:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritestringoncursor(".00");
    3676:	83 e6       	ldi	r24, 0x63	; 99
    3678:	90 e0       	ldi	r25, 0x00	; 0
    367a:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <LCD_vidwritestringoncursor>
		LCD_viddisplayintegar2(line,column+4,decimal);
    367e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3680:	18 2f       	mov	r17, r24
    3682:	1c 5f       	subi	r17, 0xFC	; 252
    3684:	6d 81       	ldd	r22, Y+5	; 0x05
    3686:	7e 81       	ldd	r23, Y+6	; 0x06
    3688:	8f 81       	ldd	r24, Y+7	; 0x07
    368a:	98 85       	ldd	r25, Y+8	; 0x08
    368c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3690:	9b 01       	movw	r18, r22
    3692:	ac 01       	movw	r20, r24
    3694:	89 85       	ldd	r24, Y+9	; 0x09
    3696:	61 2f       	mov	r22, r17
    3698:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	}
	if (decimal<0.001 && decimal>=0.0001)
    369c:	6d 81       	ldd	r22, Y+5	; 0x05
    369e:	7e 81       	ldd	r23, Y+6	; 0x06
    36a0:	8f 81       	ldd	r24, Y+7	; 0x07
    36a2:	98 85       	ldd	r25, Y+8	; 0x08
    36a4:	2f e6       	ldi	r18, 0x6F	; 111
    36a6:	32 e1       	ldi	r19, 0x12	; 18
    36a8:	43 e8       	ldi	r20, 0x83	; 131
    36aa:	5a e3       	ldi	r21, 0x3A	; 58
    36ac:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    36b0:	88 23       	and	r24, r24
    36b2:	b4 f5       	brge	.+108    	; 0x3720 <LCD_viddisplayfloat+0x280>
    36b4:	6d 81       	ldd	r22, Y+5	; 0x05
    36b6:	7e 81       	ldd	r23, Y+6	; 0x06
    36b8:	8f 81       	ldd	r24, Y+7	; 0x07
    36ba:	98 85       	ldd	r25, Y+8	; 0x08
    36bc:	27 e1       	ldi	r18, 0x17	; 23
    36be:	37 eb       	ldi	r19, 0xB7	; 183
    36c0:	41 ed       	ldi	r20, 0xD1	; 209
    36c2:	58 e3       	ldi	r21, 0x38	; 56
    36c4:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
    36c8:	88 23       	and	r24, r24
    36ca:	54 f1       	brlt	.+84     	; 0x3720 <LCD_viddisplayfloat+0x280>
	{
		decimal = decimal*100000;
    36cc:	6d 81       	ldd	r22, Y+5	; 0x05
    36ce:	7e 81       	ldd	r23, Y+6	; 0x06
    36d0:	8f 81       	ldd	r24, Y+7	; 0x07
    36d2:	98 85       	ldd	r25, Y+8	; 0x08
    36d4:	20 e0       	ldi	r18, 0x00	; 0
    36d6:	30 e5       	ldi	r19, 0x50	; 80
    36d8:	43 ec       	ldi	r20, 0xC3	; 195
    36da:	57 e4       	ldi	r21, 0x47	; 71
    36dc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    36e0:	dc 01       	movw	r26, r24
    36e2:	cb 01       	movw	r24, r22
    36e4:	8d 83       	std	Y+5, r24	; 0x05
    36e6:	9e 83       	std	Y+6, r25	; 0x06
    36e8:	af 83       	std	Y+7, r26	; 0x07
    36ea:	b8 87       	std	Y+8, r27	; 0x08
		LCD_setcursorposition(line,column+1);
    36ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    36ee:	98 2f       	mov	r25, r24
    36f0:	9f 5f       	subi	r25, 0xFF	; 255
    36f2:	89 85       	ldd	r24, Y+9	; 0x09
    36f4:	69 2f       	mov	r22, r25
    36f6:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritestringoncursor(".000");
    36fa:	87 e6       	ldi	r24, 0x67	; 103
    36fc:	90 e0       	ldi	r25, 0x00	; 0
    36fe:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <LCD_vidwritestringoncursor>
		LCD_viddisplayintegar2(line,column+5,decimal);
    3702:	8a 85       	ldd	r24, Y+10	; 0x0a
    3704:	18 2f       	mov	r17, r24
    3706:	1b 5f       	subi	r17, 0xFB	; 251
    3708:	6d 81       	ldd	r22, Y+5	; 0x05
    370a:	7e 81       	ldd	r23, Y+6	; 0x06
    370c:	8f 81       	ldd	r24, Y+7	; 0x07
    370e:	98 85       	ldd	r25, Y+8	; 0x08
    3710:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3714:	9b 01       	movw	r18, r22
    3716:	ac 01       	movw	r20, r24
    3718:	89 85       	ldd	r24, Y+9	; 0x09
    371a:	61 2f       	mov	r22, r17
    371c:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	}
	if (decimal<0.0001 && decimal>=0.00001)
    3720:	6d 81       	ldd	r22, Y+5	; 0x05
    3722:	7e 81       	ldd	r23, Y+6	; 0x06
    3724:	8f 81       	ldd	r24, Y+7	; 0x07
    3726:	98 85       	ldd	r25, Y+8	; 0x08
    3728:	27 e1       	ldi	r18, 0x17	; 23
    372a:	37 eb       	ldi	r19, 0xB7	; 183
    372c:	41 ed       	ldi	r20, 0xD1	; 209
    372e:	58 e3       	ldi	r21, 0x38	; 56
    3730:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3734:	88 23       	and	r24, r24
    3736:	b4 f5       	brge	.+108    	; 0x37a4 <LCD_viddisplayfloat+0x304>
    3738:	6d 81       	ldd	r22, Y+5	; 0x05
    373a:	7e 81       	ldd	r23, Y+6	; 0x06
    373c:	8f 81       	ldd	r24, Y+7	; 0x07
    373e:	98 85       	ldd	r25, Y+8	; 0x08
    3740:	2c ea       	ldi	r18, 0xAC	; 172
    3742:	35 ec       	ldi	r19, 0xC5	; 197
    3744:	47 e2       	ldi	r20, 0x27	; 39
    3746:	57 e3       	ldi	r21, 0x37	; 55
    3748:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
    374c:	88 23       	and	r24, r24
    374e:	54 f1       	brlt	.+84     	; 0x37a4 <LCD_viddisplayfloat+0x304>
	{
		decimal = decimal*1000000;
    3750:	6d 81       	ldd	r22, Y+5	; 0x05
    3752:	7e 81       	ldd	r23, Y+6	; 0x06
    3754:	8f 81       	ldd	r24, Y+7	; 0x07
    3756:	98 85       	ldd	r25, Y+8	; 0x08
    3758:	20 e0       	ldi	r18, 0x00	; 0
    375a:	34 e2       	ldi	r19, 0x24	; 36
    375c:	44 e7       	ldi	r20, 0x74	; 116
    375e:	59 e4       	ldi	r21, 0x49	; 73
    3760:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3764:	dc 01       	movw	r26, r24
    3766:	cb 01       	movw	r24, r22
    3768:	8d 83       	std	Y+5, r24	; 0x05
    376a:	9e 83       	std	Y+6, r25	; 0x06
    376c:	af 83       	std	Y+7, r26	; 0x07
    376e:	b8 87       	std	Y+8, r27	; 0x08
		LCD_setcursorposition(line,column+1);
    3770:	8a 85       	ldd	r24, Y+10	; 0x0a
    3772:	98 2f       	mov	r25, r24
    3774:	9f 5f       	subi	r25, 0xFF	; 255
    3776:	89 85       	ldd	r24, Y+9	; 0x09
    3778:	69 2f       	mov	r22, r25
    377a:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritestringoncursor(".0000");
    377e:	8c e6       	ldi	r24, 0x6C	; 108
    3780:	90 e0       	ldi	r25, 0x00	; 0
    3782:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <LCD_vidwritestringoncursor>
		LCD_viddisplayintegar2(line,column+6,decimal);
    3786:	8a 85       	ldd	r24, Y+10	; 0x0a
    3788:	18 2f       	mov	r17, r24
    378a:	1a 5f       	subi	r17, 0xFA	; 250
    378c:	6d 81       	ldd	r22, Y+5	; 0x05
    378e:	7e 81       	ldd	r23, Y+6	; 0x06
    3790:	8f 81       	ldd	r24, Y+7	; 0x07
    3792:	98 85       	ldd	r25, Y+8	; 0x08
    3794:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    3798:	9b 01       	movw	r18, r22
    379a:	ac 01       	movw	r20, r24
    379c:	89 85       	ldd	r24, Y+9	; 0x09
    379e:	61 2f       	mov	r22, r17
    37a0:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	}
	if (decimal<0.00001 && decimal>=0.0000001)
    37a4:	6d 81       	ldd	r22, Y+5	; 0x05
    37a6:	7e 81       	ldd	r23, Y+6	; 0x06
    37a8:	8f 81       	ldd	r24, Y+7	; 0x07
    37aa:	98 85       	ldd	r25, Y+8	; 0x08
    37ac:	2c ea       	ldi	r18, 0xAC	; 172
    37ae:	35 ec       	ldi	r19, 0xC5	; 197
    37b0:	47 e2       	ldi	r20, 0x27	; 39
    37b2:	57 e3       	ldi	r21, 0x37	; 55
    37b4:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    37b8:	88 23       	and	r24, r24
    37ba:	b4 f5       	brge	.+108    	; 0x3828 <LCD_viddisplayfloat+0x388>
    37bc:	6d 81       	ldd	r22, Y+5	; 0x05
    37be:	7e 81       	ldd	r23, Y+6	; 0x06
    37c0:	8f 81       	ldd	r24, Y+7	; 0x07
    37c2:	98 85       	ldd	r25, Y+8	; 0x08
    37c4:	25 e9       	ldi	r18, 0x95	; 149
    37c6:	3f eb       	ldi	r19, 0xBF	; 191
    37c8:	46 ed       	ldi	r20, 0xD6	; 214
    37ca:	53 e3       	ldi	r21, 0x33	; 51
    37cc:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
    37d0:	88 23       	and	r24, r24
    37d2:	54 f1       	brlt	.+84     	; 0x3828 <LCD_viddisplayfloat+0x388>
	{
		decimal = decimal*10000000;
    37d4:	6d 81       	ldd	r22, Y+5	; 0x05
    37d6:	7e 81       	ldd	r23, Y+6	; 0x06
    37d8:	8f 81       	ldd	r24, Y+7	; 0x07
    37da:	98 85       	ldd	r25, Y+8	; 0x08
    37dc:	20 e8       	ldi	r18, 0x80	; 128
    37de:	36 e9       	ldi	r19, 0x96	; 150
    37e0:	48 e1       	ldi	r20, 0x18	; 24
    37e2:	5b e4       	ldi	r21, 0x4B	; 75
    37e4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    37e8:	dc 01       	movw	r26, r24
    37ea:	cb 01       	movw	r24, r22
    37ec:	8d 83       	std	Y+5, r24	; 0x05
    37ee:	9e 83       	std	Y+6, r25	; 0x06
    37f0:	af 83       	std	Y+7, r26	; 0x07
    37f2:	b8 87       	std	Y+8, r27	; 0x08
		LCD_setcursorposition(line,column+1);
    37f4:	8a 85       	ldd	r24, Y+10	; 0x0a
    37f6:	98 2f       	mov	r25, r24
    37f8:	9f 5f       	subi	r25, 0xFF	; 255
    37fa:	89 85       	ldd	r24, Y+9	; 0x09
    37fc:	69 2f       	mov	r22, r25
    37fe:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritestringoncursor(".00000");
    3802:	82 e7       	ldi	r24, 0x72	; 114
    3804:	90 e0       	ldi	r25, 0x00	; 0
    3806:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <LCD_vidwritestringoncursor>
		LCD_viddisplayintegar2(line,column+7,decimal);
    380a:	8a 85       	ldd	r24, Y+10	; 0x0a
    380c:	18 2f       	mov	r17, r24
    380e:	19 5f       	subi	r17, 0xF9	; 249
    3810:	6d 81       	ldd	r22, Y+5	; 0x05
    3812:	7e 81       	ldd	r23, Y+6	; 0x06
    3814:	8f 81       	ldd	r24, Y+7	; 0x07
    3816:	98 85       	ldd	r25, Y+8	; 0x08
    3818:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    381c:	9b 01       	movw	r18, r22
    381e:	ac 01       	movw	r20, r24
    3820:	89 85       	ldd	r24, Y+9	; 0x09
    3822:	61 2f       	mov	r22, r17
    3824:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	}
	if (decimal<0.0000001 && decimal>=0.00000001)
    3828:	6d 81       	ldd	r22, Y+5	; 0x05
    382a:	7e 81       	ldd	r23, Y+6	; 0x06
    382c:	8f 81       	ldd	r24, Y+7	; 0x07
    382e:	98 85       	ldd	r25, Y+8	; 0x08
    3830:	25 e9       	ldi	r18, 0x95	; 149
    3832:	3f eb       	ldi	r19, 0xBF	; 191
    3834:	46 ed       	ldi	r20, 0xD6	; 214
    3836:	53 e3       	ldi	r21, 0x33	; 51
    3838:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    383c:	88 23       	and	r24, r24
    383e:	b4 f5       	brge	.+108    	; 0x38ac <LCD_viddisplayfloat+0x40c>
    3840:	6d 81       	ldd	r22, Y+5	; 0x05
    3842:	7e 81       	ldd	r23, Y+6	; 0x06
    3844:	8f 81       	ldd	r24, Y+7	; 0x07
    3846:	98 85       	ldd	r25, Y+8	; 0x08
    3848:	27 e7       	ldi	r18, 0x77	; 119
    384a:	3c ec       	ldi	r19, 0xCC	; 204
    384c:	4b e2       	ldi	r20, 0x2B	; 43
    384e:	52 e3       	ldi	r21, 0x32	; 50
    3850:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
    3854:	88 23       	and	r24, r24
    3856:	54 f1       	brlt	.+84     	; 0x38ac <LCD_viddisplayfloat+0x40c>
	{
		decimal = decimal*100000000;
    3858:	6d 81       	ldd	r22, Y+5	; 0x05
    385a:	7e 81       	ldd	r23, Y+6	; 0x06
    385c:	8f 81       	ldd	r24, Y+7	; 0x07
    385e:	98 85       	ldd	r25, Y+8	; 0x08
    3860:	20 e2       	ldi	r18, 0x20	; 32
    3862:	3c eb       	ldi	r19, 0xBC	; 188
    3864:	4e eb       	ldi	r20, 0xBE	; 190
    3866:	5c e4       	ldi	r21, 0x4C	; 76
    3868:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    386c:	dc 01       	movw	r26, r24
    386e:	cb 01       	movw	r24, r22
    3870:	8d 83       	std	Y+5, r24	; 0x05
    3872:	9e 83       	std	Y+6, r25	; 0x06
    3874:	af 83       	std	Y+7, r26	; 0x07
    3876:	b8 87       	std	Y+8, r27	; 0x08
		LCD_setcursorposition(line,column+1);
    3878:	8a 85       	ldd	r24, Y+10	; 0x0a
    387a:	98 2f       	mov	r25, r24
    387c:	9f 5f       	subi	r25, 0xFF	; 255
    387e:	89 85       	ldd	r24, Y+9	; 0x09
    3880:	69 2f       	mov	r22, r25
    3882:	0e 94 97 0c 	call	0x192e	; 0x192e <LCD_setcursorposition>
		LCD_vidwritestringoncursor(".000000");
    3886:	89 e7       	ldi	r24, 0x79	; 121
    3888:	90 e0       	ldi	r25, 0x00	; 0
    388a:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <LCD_vidwritestringoncursor>
		LCD_viddisplayintegar2(line,column+8,decimal);
    388e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3890:	18 2f       	mov	r17, r24
    3892:	18 5f       	subi	r17, 0xF8	; 248
    3894:	6d 81       	ldd	r22, Y+5	; 0x05
    3896:	7e 81       	ldd	r23, Y+6	; 0x06
    3898:	8f 81       	ldd	r24, Y+7	; 0x07
    389a:	98 85       	ldd	r25, Y+8	; 0x08
    389c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    38a0:	9b 01       	movw	r18, r22
    38a2:	ac 01       	movw	r20, r24
    38a4:	89 85       	ldd	r24, Y+9	; 0x09
    38a6:	61 2f       	mov	r22, r17
    38a8:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <LCD_viddisplayintegar2>
	}

}
    38ac:	2e 96       	adiw	r28, 0x0e	; 14
    38ae:	0f b6       	in	r0, 0x3f	; 63
    38b0:	f8 94       	cli
    38b2:	de bf       	out	0x3e, r29	; 62
    38b4:	0f be       	out	0x3f, r0	; 63
    38b6:	cd bf       	out	0x3d, r28	; 61
    38b8:	cf 91       	pop	r28
    38ba:	df 91       	pop	r29
    38bc:	1f 91       	pop	r17
    38be:	08 95       	ret

000038c0 <main>:
u16 DigitalValue;
const float step=4.8;
//float VIN_mv;
u16 VIN_mv;
void main (void)
	{
    38c0:	df 93       	push	r29
    38c2:	cf 93       	push	r28
    38c4:	cd b7       	in	r28, 0x3d	; 61
    38c6:	de b7       	in	r29, 0x3e	; 62
    38c8:	2e 97       	sbiw	r28, 0x0e	; 14
    38ca:	0f b6       	in	r0, 0x3f	; 63
    38cc:	f8 94       	cli
    38ce:	de bf       	out	0x3e, r29	; 62
    38d0:	0f be       	out	0x3f, r0	; 63
    38d2:	cd bf       	out	0x3d, r28	; 61
	ADC_init();
    38d4:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <ADC_init>
	LCD_vidinit();
    38d8:	0e 94 12 0b 	call	0x1624	; 0x1624 <LCD_vidinit>
	while(1)
	{
	DigitalValue=ADC_U16Read(0);
    38dc:	80 e0       	ldi	r24, 0x00	; 0
    38de:	0e 94 8e 06 	call	0xd1c	; 0xd1c <ADC_U16Read>
    38e2:	90 93 91 01 	sts	0x0191, r25
    38e6:	80 93 90 01 	sts	0x0190, r24
	VIN_mv=((DigitalValue*500)/1023);
    38ea:	20 91 90 01 	lds	r18, 0x0190
    38ee:	30 91 91 01 	lds	r19, 0x0191
    38f2:	84 ef       	ldi	r24, 0xF4	; 244
    38f4:	91 e0       	ldi	r25, 0x01	; 1
    38f6:	ac 01       	movw	r20, r24
    38f8:	24 9f       	mul	r18, r20
    38fa:	c0 01       	movw	r24, r0
    38fc:	25 9f       	mul	r18, r21
    38fe:	90 0d       	add	r25, r0
    3900:	34 9f       	mul	r19, r20
    3902:	90 0d       	add	r25, r0
    3904:	11 24       	eor	r1, r1
    3906:	2f ef       	ldi	r18, 0xFF	; 255
    3908:	33 e0       	ldi	r19, 0x03	; 3
    390a:	b9 01       	movw	r22, r18
    390c:	0e 94 0b 1d 	call	0x3a16	; 0x3a16 <__udivmodhi4>
    3910:	cb 01       	movw	r24, r22
    3912:	90 93 8f 01 	sts	0x018F, r25
    3916:	80 93 8e 01 	sts	0x018E, r24
	LCD_viddisplayintegar (line1 ,5 ,VIN_mv );
    391a:	80 91 8e 01 	lds	r24, 0x018E
    391e:	90 91 8f 01 	lds	r25, 0x018F
    3922:	9c 01       	movw	r18, r24
    3924:	40 e0       	ldi	r20, 0x00	; 0
    3926:	50 e0       	ldi	r21, 0x00	; 0
    3928:	81 e0       	ldi	r24, 0x01	; 1
    392a:	65 e0       	ldi	r22, 0x05	; 5
    392c:	0e 94 14 0f 	call	0x1e28	; 0x1e28 <LCD_viddisplayintegar>
    3930:	80 e0       	ldi	r24, 0x00	; 0
    3932:	90 e0       	ldi	r25, 0x00	; 0
    3934:	aa e7       	ldi	r26, 0x7A	; 122
    3936:	b4 e4       	ldi	r27, 0x44	; 68
    3938:	8b 87       	std	Y+11, r24	; 0x0b
    393a:	9c 87       	std	Y+12, r25	; 0x0c
    393c:	ad 87       	std	Y+13, r26	; 0x0d
    393e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3940:	6b 85       	ldd	r22, Y+11	; 0x0b
    3942:	7c 85       	ldd	r23, Y+12	; 0x0c
    3944:	8d 85       	ldd	r24, Y+13	; 0x0d
    3946:	9e 85       	ldd	r25, Y+14	; 0x0e
    3948:	20 e0       	ldi	r18, 0x00	; 0
    394a:	30 e0       	ldi	r19, 0x00	; 0
    394c:	4a ef       	ldi	r20, 0xFA	; 250
    394e:	54 e4       	ldi	r21, 0x44	; 68
    3950:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    3954:	dc 01       	movw	r26, r24
    3956:	cb 01       	movw	r24, r22
    3958:	8f 83       	std	Y+7, r24	; 0x07
    395a:	98 87       	std	Y+8, r25	; 0x08
    395c:	a9 87       	std	Y+9, r26	; 0x09
    395e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3960:	6f 81       	ldd	r22, Y+7	; 0x07
    3962:	78 85       	ldd	r23, Y+8	; 0x08
    3964:	89 85       	ldd	r24, Y+9	; 0x09
    3966:	9a 85       	ldd	r25, Y+10	; 0x0a
    3968:	20 e0       	ldi	r18, 0x00	; 0
    396a:	30 e0       	ldi	r19, 0x00	; 0
    396c:	40 e8       	ldi	r20, 0x80	; 128
    396e:	5f e3       	ldi	r21, 0x3F	; 63
    3970:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    3974:	88 23       	and	r24, r24
    3976:	2c f4       	brge	.+10     	; 0x3982 <main+0xc2>
		__ticks = 1;
    3978:	81 e0       	ldi	r24, 0x01	; 1
    397a:	90 e0       	ldi	r25, 0x00	; 0
    397c:	9e 83       	std	Y+6, r25	; 0x06
    397e:	8d 83       	std	Y+5, r24	; 0x05
    3980:	3f c0       	rjmp	.+126    	; 0x3a00 <main+0x140>
	else if (__tmp > 65535)
    3982:	6f 81       	ldd	r22, Y+7	; 0x07
    3984:	78 85       	ldd	r23, Y+8	; 0x08
    3986:	89 85       	ldd	r24, Y+9	; 0x09
    3988:	9a 85       	ldd	r25, Y+10	; 0x0a
    398a:	20 e0       	ldi	r18, 0x00	; 0
    398c:	3f ef       	ldi	r19, 0xFF	; 255
    398e:	4f e7       	ldi	r20, 0x7F	; 127
    3990:	57 e4       	ldi	r21, 0x47	; 71
    3992:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    3996:	18 16       	cp	r1, r24
    3998:	4c f5       	brge	.+82     	; 0x39ec <main+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    399a:	6b 85       	ldd	r22, Y+11	; 0x0b
    399c:	7c 85       	ldd	r23, Y+12	; 0x0c
    399e:	8d 85       	ldd	r24, Y+13	; 0x0d
    39a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    39a2:	20 e0       	ldi	r18, 0x00	; 0
    39a4:	30 e0       	ldi	r19, 0x00	; 0
    39a6:	40 e2       	ldi	r20, 0x20	; 32
    39a8:	51 e4       	ldi	r21, 0x41	; 65
    39aa:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    39ae:	dc 01       	movw	r26, r24
    39b0:	cb 01       	movw	r24, r22
    39b2:	bc 01       	movw	r22, r24
    39b4:	cd 01       	movw	r24, r26
    39b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    39ba:	dc 01       	movw	r26, r24
    39bc:	cb 01       	movw	r24, r22
    39be:	9e 83       	std	Y+6, r25	; 0x06
    39c0:	8d 83       	std	Y+5, r24	; 0x05
    39c2:	0f c0       	rjmp	.+30     	; 0x39e2 <main+0x122>
    39c4:	88 ec       	ldi	r24, 0xC8	; 200
    39c6:	90 e0       	ldi	r25, 0x00	; 0
    39c8:	9c 83       	std	Y+4, r25	; 0x04
    39ca:	8b 83       	std	Y+3, r24	; 0x03
    39cc:	8b 81       	ldd	r24, Y+3	; 0x03
    39ce:	9c 81       	ldd	r25, Y+4	; 0x04
    39d0:	01 97       	sbiw	r24, 0x01	; 1
    39d2:	f1 f7       	brne	.-4      	; 0x39d0 <main+0x110>
    39d4:	9c 83       	std	Y+4, r25	; 0x04
    39d6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39d8:	8d 81       	ldd	r24, Y+5	; 0x05
    39da:	9e 81       	ldd	r25, Y+6	; 0x06
    39dc:	01 97       	sbiw	r24, 0x01	; 1
    39de:	9e 83       	std	Y+6, r25	; 0x06
    39e0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39e2:	8d 81       	ldd	r24, Y+5	; 0x05
    39e4:	9e 81       	ldd	r25, Y+6	; 0x06
    39e6:	00 97       	sbiw	r24, 0x00	; 0
    39e8:	69 f7       	brne	.-38     	; 0x39c4 <main+0x104>
    39ea:	78 cf       	rjmp	.-272    	; 0x38dc <main+0x1c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    39ec:	6f 81       	ldd	r22, Y+7	; 0x07
    39ee:	78 85       	ldd	r23, Y+8	; 0x08
    39f0:	89 85       	ldd	r24, Y+9	; 0x09
    39f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    39f4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    39f8:	dc 01       	movw	r26, r24
    39fa:	cb 01       	movw	r24, r22
    39fc:	9e 83       	std	Y+6, r25	; 0x06
    39fe:	8d 83       	std	Y+5, r24	; 0x05
    3a00:	8d 81       	ldd	r24, Y+5	; 0x05
    3a02:	9e 81       	ldd	r25, Y+6	; 0x06
    3a04:	9a 83       	std	Y+2, r25	; 0x02
    3a06:	89 83       	std	Y+1, r24	; 0x01
    3a08:	89 81       	ldd	r24, Y+1	; 0x01
    3a0a:	9a 81       	ldd	r25, Y+2	; 0x02
    3a0c:	01 97       	sbiw	r24, 0x01	; 1
    3a0e:	f1 f7       	brne	.-4      	; 0x3a0c <main+0x14c>
    3a10:	9a 83       	std	Y+2, r25	; 0x02
    3a12:	89 83       	std	Y+1, r24	; 0x01
    3a14:	63 cf       	rjmp	.-314    	; 0x38dc <main+0x1c>

00003a16 <__udivmodhi4>:
    3a16:	aa 1b       	sub	r26, r26
    3a18:	bb 1b       	sub	r27, r27
    3a1a:	51 e1       	ldi	r21, 0x11	; 17
    3a1c:	07 c0       	rjmp	.+14     	; 0x3a2c <__udivmodhi4_ep>

00003a1e <__udivmodhi4_loop>:
    3a1e:	aa 1f       	adc	r26, r26
    3a20:	bb 1f       	adc	r27, r27
    3a22:	a6 17       	cp	r26, r22
    3a24:	b7 07       	cpc	r27, r23
    3a26:	10 f0       	brcs	.+4      	; 0x3a2c <__udivmodhi4_ep>
    3a28:	a6 1b       	sub	r26, r22
    3a2a:	b7 0b       	sbc	r27, r23

00003a2c <__udivmodhi4_ep>:
    3a2c:	88 1f       	adc	r24, r24
    3a2e:	99 1f       	adc	r25, r25
    3a30:	5a 95       	dec	r21
    3a32:	a9 f7       	brne	.-22     	; 0x3a1e <__udivmodhi4_loop>
    3a34:	80 95       	com	r24
    3a36:	90 95       	com	r25
    3a38:	bc 01       	movw	r22, r24
    3a3a:	cd 01       	movw	r24, r26
    3a3c:	08 95       	ret

00003a3e <__udivmodsi4>:
    3a3e:	a1 e2       	ldi	r26, 0x21	; 33
    3a40:	1a 2e       	mov	r1, r26
    3a42:	aa 1b       	sub	r26, r26
    3a44:	bb 1b       	sub	r27, r27
    3a46:	fd 01       	movw	r30, r26
    3a48:	0d c0       	rjmp	.+26     	; 0x3a64 <__udivmodsi4_ep>

00003a4a <__udivmodsi4_loop>:
    3a4a:	aa 1f       	adc	r26, r26
    3a4c:	bb 1f       	adc	r27, r27
    3a4e:	ee 1f       	adc	r30, r30
    3a50:	ff 1f       	adc	r31, r31
    3a52:	a2 17       	cp	r26, r18
    3a54:	b3 07       	cpc	r27, r19
    3a56:	e4 07       	cpc	r30, r20
    3a58:	f5 07       	cpc	r31, r21
    3a5a:	20 f0       	brcs	.+8      	; 0x3a64 <__udivmodsi4_ep>
    3a5c:	a2 1b       	sub	r26, r18
    3a5e:	b3 0b       	sbc	r27, r19
    3a60:	e4 0b       	sbc	r30, r20
    3a62:	f5 0b       	sbc	r31, r21

00003a64 <__udivmodsi4_ep>:
    3a64:	66 1f       	adc	r22, r22
    3a66:	77 1f       	adc	r23, r23
    3a68:	88 1f       	adc	r24, r24
    3a6a:	99 1f       	adc	r25, r25
    3a6c:	1a 94       	dec	r1
    3a6e:	69 f7       	brne	.-38     	; 0x3a4a <__udivmodsi4_loop>
    3a70:	60 95       	com	r22
    3a72:	70 95       	com	r23
    3a74:	80 95       	com	r24
    3a76:	90 95       	com	r25
    3a78:	9b 01       	movw	r18, r22
    3a7a:	ac 01       	movw	r20, r24
    3a7c:	bd 01       	movw	r22, r26
    3a7e:	cf 01       	movw	r24, r30
    3a80:	08 95       	ret

00003a82 <__prologue_saves__>:
    3a82:	2f 92       	push	r2
    3a84:	3f 92       	push	r3
    3a86:	4f 92       	push	r4
    3a88:	5f 92       	push	r5
    3a8a:	6f 92       	push	r6
    3a8c:	7f 92       	push	r7
    3a8e:	8f 92       	push	r8
    3a90:	9f 92       	push	r9
    3a92:	af 92       	push	r10
    3a94:	bf 92       	push	r11
    3a96:	cf 92       	push	r12
    3a98:	df 92       	push	r13
    3a9a:	ef 92       	push	r14
    3a9c:	ff 92       	push	r15
    3a9e:	0f 93       	push	r16
    3aa0:	1f 93       	push	r17
    3aa2:	cf 93       	push	r28
    3aa4:	df 93       	push	r29
    3aa6:	cd b7       	in	r28, 0x3d	; 61
    3aa8:	de b7       	in	r29, 0x3e	; 62
    3aaa:	ca 1b       	sub	r28, r26
    3aac:	db 0b       	sbc	r29, r27
    3aae:	0f b6       	in	r0, 0x3f	; 63
    3ab0:	f8 94       	cli
    3ab2:	de bf       	out	0x3e, r29	; 62
    3ab4:	0f be       	out	0x3f, r0	; 63
    3ab6:	cd bf       	out	0x3d, r28	; 61
    3ab8:	09 94       	ijmp

00003aba <__epilogue_restores__>:
    3aba:	2a 88       	ldd	r2, Y+18	; 0x12
    3abc:	39 88       	ldd	r3, Y+17	; 0x11
    3abe:	48 88       	ldd	r4, Y+16	; 0x10
    3ac0:	5f 84       	ldd	r5, Y+15	; 0x0f
    3ac2:	6e 84       	ldd	r6, Y+14	; 0x0e
    3ac4:	7d 84       	ldd	r7, Y+13	; 0x0d
    3ac6:	8c 84       	ldd	r8, Y+12	; 0x0c
    3ac8:	9b 84       	ldd	r9, Y+11	; 0x0b
    3aca:	aa 84       	ldd	r10, Y+10	; 0x0a
    3acc:	b9 84       	ldd	r11, Y+9	; 0x09
    3ace:	c8 84       	ldd	r12, Y+8	; 0x08
    3ad0:	df 80       	ldd	r13, Y+7	; 0x07
    3ad2:	ee 80       	ldd	r14, Y+6	; 0x06
    3ad4:	fd 80       	ldd	r15, Y+5	; 0x05
    3ad6:	0c 81       	ldd	r16, Y+4	; 0x04
    3ad8:	1b 81       	ldd	r17, Y+3	; 0x03
    3ada:	aa 81       	ldd	r26, Y+2	; 0x02
    3adc:	b9 81       	ldd	r27, Y+1	; 0x01
    3ade:	ce 0f       	add	r28, r30
    3ae0:	d1 1d       	adc	r29, r1
    3ae2:	0f b6       	in	r0, 0x3f	; 63
    3ae4:	f8 94       	cli
    3ae6:	de bf       	out	0x3e, r29	; 62
    3ae8:	0f be       	out	0x3f, r0	; 63
    3aea:	cd bf       	out	0x3d, r28	; 61
    3aec:	ed 01       	movw	r28, r26
    3aee:	08 95       	ret

00003af0 <_exit>:
    3af0:	f8 94       	cli

00003af2 <__stop_program>:
    3af2:	ff cf       	rjmp	.-2      	; 0x3af2 <__stop_program>
