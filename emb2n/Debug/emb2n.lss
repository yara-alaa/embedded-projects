
emb2n.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000528  00000000  00000000  000005fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000353  00000000  00000000  00000b24  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 c0 02 	call	0x580	; 0x580 <main>
  64:	0c 94 d1 02 	jmp	0x5a2	; 0x5a2 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_VidSetPinDir>:
#include "std_types.h"
#include "registers.h"
#include "utils.h"
#include "DIO.h"
void DIO_VidSetPinDir(u8 port,u8 pin,u8 dir)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_VidSetPinDir+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_VidSetPinDir+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	81 30       	cpi	r24, 0x01	; 1
  90:	91 05       	cpc	r25, r1
  92:	09 f4       	brne	.+2      	; 0x96 <DIO_VidSetPinDir+0x2a>
  94:	46 c0       	rjmp	.+140    	; 0x122 <DIO_VidSetPinDir+0xb6>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	22 30       	cpi	r18, 0x02	; 2
  9c:	31 05       	cpc	r19, r1
  9e:	2c f4       	brge	.+10     	; 0xaa <DIO_VidSetPinDir+0x3e>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	71 f0       	breq	.+28     	; 0xc4 <DIO_VidSetPinDir+0x58>
  a8:	c7 c0       	rjmp	.+398    	; 0x238 <DIO_VidSetPinDir+0x1cc>
  aa:	2c 81       	ldd	r18, Y+4	; 0x04
  ac:	3d 81       	ldd	r19, Y+5	; 0x05
  ae:	22 30       	cpi	r18, 0x02	; 2
  b0:	31 05       	cpc	r19, r1
  b2:	09 f4       	brne	.+2      	; 0xb6 <DIO_VidSetPinDir+0x4a>
  b4:	65 c0       	rjmp	.+202    	; 0x180 <DIO_VidSetPinDir+0x114>
  b6:	8c 81       	ldd	r24, Y+4	; 0x04
  b8:	9d 81       	ldd	r25, Y+5	; 0x05
  ba:	83 30       	cpi	r24, 0x03	; 3
  bc:	91 05       	cpc	r25, r1
  be:	09 f4       	brne	.+2      	; 0xc2 <DIO_VidSetPinDir+0x56>
  c0:	8e c0       	rjmp	.+284    	; 0x1de <DIO_VidSetPinDir+0x172>
  c2:	ba c0       	rjmp	.+372    	; 0x238 <DIO_VidSetPinDir+0x1cc>
	{
	case 0:
		if(dir==0)
  c4:	8b 81       	ldd	r24, Y+3	; 0x03
  c6:	88 23       	and	r24, r24
  c8:	a1 f4       	brne	.+40     	; 0xf2 <DIO_VidSetPinDir+0x86>
			 clear_bit(DDRA,pin);
  ca:	aa e3       	ldi	r26, 0x3A	; 58
  cc:	b0 e0       	ldi	r27, 0x00	; 0
  ce:	ea e3       	ldi	r30, 0x3A	; 58
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	48 2f       	mov	r20, r24
  d6:	8a 81       	ldd	r24, Y+2	; 0x02
  d8:	28 2f       	mov	r18, r24
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 2e       	mov	r0, r18
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_VidSetPinDir+0x7c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	0a 94       	dec	r0
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_VidSetPinDir+0x78>
  ec:	80 95       	com	r24
  ee:	84 23       	and	r24, r20
  f0:	8c 93       	st	X, r24
		if (dir==1)
  f2:	8b 81       	ldd	r24, Y+3	; 0x03
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	09 f0       	breq	.+2      	; 0xfa <DIO_VidSetPinDir+0x8e>
  f8:	9f c0       	rjmp	.+318    	; 0x238 <DIO_VidSetPinDir+0x1cc>
			set_bit(DDRA,pin);
  fa:	aa e3       	ldi	r26, 0x3A	; 58
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	ea e3       	ldi	r30, 0x3A	; 58
 100:	f0 e0       	ldi	r31, 0x00	; 0
 102:	80 81       	ld	r24, Z
 104:	48 2f       	mov	r20, r24
 106:	8a 81       	ldd	r24, Y+2	; 0x02
 108:	28 2f       	mov	r18, r24
 10a:	30 e0       	ldi	r19, 0x00	; 0
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	02 2e       	mov	r0, r18
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_VidSetPinDir+0xac>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	0a 94       	dec	r0
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_VidSetPinDir+0xa8>
 11c:	84 2b       	or	r24, r20
 11e:	8c 93       	st	X, r24
 120:	8b c0       	rjmp	.+278    	; 0x238 <DIO_VidSetPinDir+0x1cc>
		break;
	case 1:
			if(dir==0)
 122:	8b 81       	ldd	r24, Y+3	; 0x03
 124:	88 23       	and	r24, r24
 126:	a1 f4       	brne	.+40     	; 0x150 <DIO_VidSetPinDir+0xe4>
				 clear_bit(DDRB,pin);
 128:	a7 e3       	ldi	r26, 0x37	; 55
 12a:	b0 e0       	ldi	r27, 0x00	; 0
 12c:	e7 e3       	ldi	r30, 0x37	; 55
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	80 81       	ld	r24, Z
 132:	48 2f       	mov	r20, r24
 134:	8a 81       	ldd	r24, Y+2	; 0x02
 136:	28 2f       	mov	r18, r24
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 2e       	mov	r0, r18
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_VidSetPinDir+0xda>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	0a 94       	dec	r0
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_VidSetPinDir+0xd6>
 14a:	80 95       	com	r24
 14c:	84 23       	and	r24, r20
 14e:	8c 93       	st	X, r24
			if (dir==1)
 150:	8b 81       	ldd	r24, Y+3	; 0x03
 152:	81 30       	cpi	r24, 0x01	; 1
 154:	09 f0       	breq	.+2      	; 0x158 <DIO_VidSetPinDir+0xec>
 156:	70 c0       	rjmp	.+224    	; 0x238 <DIO_VidSetPinDir+0x1cc>
				set_bit(DDRB,pin);
 158:	a7 e3       	ldi	r26, 0x37	; 55
 15a:	b0 e0       	ldi	r27, 0x00	; 0
 15c:	e7 e3       	ldi	r30, 0x37	; 55
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	48 2f       	mov	r20, r24
 164:	8a 81       	ldd	r24, Y+2	; 0x02
 166:	28 2f       	mov	r18, r24
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	02 2e       	mov	r0, r18
 170:	02 c0       	rjmp	.+4      	; 0x176 <DIO_VidSetPinDir+0x10a>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	0a 94       	dec	r0
 178:	e2 f7       	brpl	.-8      	; 0x172 <DIO_VidSetPinDir+0x106>
 17a:	84 2b       	or	r24, r20
 17c:	8c 93       	st	X, r24
 17e:	5c c0       	rjmp	.+184    	; 0x238 <DIO_VidSetPinDir+0x1cc>
			break;
	case 2:
			if(dir==0)
 180:	8b 81       	ldd	r24, Y+3	; 0x03
 182:	88 23       	and	r24, r24
 184:	a1 f4       	brne	.+40     	; 0x1ae <DIO_VidSetPinDir+0x142>
				 clear_bit(DDRC,pin);
 186:	a4 e3       	ldi	r26, 0x34	; 52
 188:	b0 e0       	ldi	r27, 0x00	; 0
 18a:	e4 e3       	ldi	r30, 0x34	; 52
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	48 2f       	mov	r20, r24
 192:	8a 81       	ldd	r24, Y+2	; 0x02
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 2e       	mov	r0, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_VidSetPinDir+0x138>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	0a 94       	dec	r0
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_VidSetPinDir+0x134>
 1a8:	80 95       	com	r24
 1aa:	84 23       	and	r24, r20
 1ac:	8c 93       	st	X, r24
			if (dir==1)
 1ae:	8b 81       	ldd	r24, Y+3	; 0x03
 1b0:	81 30       	cpi	r24, 0x01	; 1
 1b2:	09 f0       	breq	.+2      	; 0x1b6 <DIO_VidSetPinDir+0x14a>
 1b4:	41 c0       	rjmp	.+130    	; 0x238 <DIO_VidSetPinDir+0x1cc>
				set_bit(DDRC,pin);
 1b6:	a4 e3       	ldi	r26, 0x34	; 52
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	e4 e3       	ldi	r30, 0x34	; 52
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	48 2f       	mov	r20, r24
 1c2:	8a 81       	ldd	r24, Y+2	; 0x02
 1c4:	28 2f       	mov	r18, r24
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 2e       	mov	r0, r18
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_VidSetPinDir+0x168>
 1d0:	88 0f       	add	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	0a 94       	dec	r0
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_VidSetPinDir+0x164>
 1d8:	84 2b       	or	r24, r20
 1da:	8c 93       	st	X, r24
 1dc:	2d c0       	rjmp	.+90     	; 0x238 <DIO_VidSetPinDir+0x1cc>
			break;
	case 3:
				if(dir==0)
 1de:	8b 81       	ldd	r24, Y+3	; 0x03
 1e0:	88 23       	and	r24, r24
 1e2:	a1 f4       	brne	.+40     	; 0x20c <DIO_VidSetPinDir+0x1a0>
					 clear_bit(DDRD,pin);
 1e4:	a1 e3       	ldi	r26, 0x31	; 49
 1e6:	b0 e0       	ldi	r27, 0x00	; 0
 1e8:	e1 e3       	ldi	r30, 0x31	; 49
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	48 2f       	mov	r20, r24
 1f0:	8a 81       	ldd	r24, Y+2	; 0x02
 1f2:	28 2f       	mov	r18, r24
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 2e       	mov	r0, r18
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <DIO_VidSetPinDir+0x196>
 1fe:	88 0f       	add	r24, r24
 200:	99 1f       	adc	r25, r25
 202:	0a 94       	dec	r0
 204:	e2 f7       	brpl	.-8      	; 0x1fe <DIO_VidSetPinDir+0x192>
 206:	80 95       	com	r24
 208:	84 23       	and	r24, r20
 20a:	8c 93       	st	X, r24
				if (dir==1)
 20c:	8b 81       	ldd	r24, Y+3	; 0x03
 20e:	81 30       	cpi	r24, 0x01	; 1
 210:	99 f4       	brne	.+38     	; 0x238 <DIO_VidSetPinDir+0x1cc>
					set_bit(DDRD,pin);
 212:	a1 e3       	ldi	r26, 0x31	; 49
 214:	b0 e0       	ldi	r27, 0x00	; 0
 216:	e1 e3       	ldi	r30, 0x31	; 49
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	48 2f       	mov	r20, r24
 21e:	8a 81       	ldd	r24, Y+2	; 0x02
 220:	28 2f       	mov	r18, r24
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	02 2e       	mov	r0, r18
 22a:	02 c0       	rjmp	.+4      	; 0x230 <DIO_VidSetPinDir+0x1c4>
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	0a 94       	dec	r0
 232:	e2 f7       	brpl	.-8      	; 0x22c <DIO_VidSetPinDir+0x1c0>
 234:	84 2b       	or	r24, r20
 236:	8c 93       	st	X, r24
				break;
	}

}
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
 242:	cf 91       	pop	r28
 244:	df 91       	pop	r29
 246:	08 95       	ret

00000248 <DIO_VidWritePinValue>:
void DIO_VidWritePinValue(u8 port,u8 pin,u8 value)
{
 248:	df 93       	push	r29
 24a:	cf 93       	push	r28
 24c:	00 d0       	rcall	.+0      	; 0x24e <DIO_VidWritePinValue+0x6>
 24e:	00 d0       	rcall	.+0      	; 0x250 <DIO_VidWritePinValue+0x8>
 250:	0f 92       	push	r0
 252:	cd b7       	in	r28, 0x3d	; 61
 254:	de b7       	in	r29, 0x3e	; 62
 256:	89 83       	std	Y+1, r24	; 0x01
 258:	6a 83       	std	Y+2, r22	; 0x02
 25a:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
 25c:	89 81       	ldd	r24, Y+1	; 0x01
 25e:	28 2f       	mov	r18, r24
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	3d 83       	std	Y+5, r19	; 0x05
 264:	2c 83       	std	Y+4, r18	; 0x04
 266:	8c 81       	ldd	r24, Y+4	; 0x04
 268:	9d 81       	ldd	r25, Y+5	; 0x05
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	91 05       	cpc	r25, r1
 26e:	09 f4       	brne	.+2      	; 0x272 <DIO_VidWritePinValue+0x2a>
 270:	46 c0       	rjmp	.+140    	; 0x2fe <DIO_VidWritePinValue+0xb6>
 272:	2c 81       	ldd	r18, Y+4	; 0x04
 274:	3d 81       	ldd	r19, Y+5	; 0x05
 276:	22 30       	cpi	r18, 0x02	; 2
 278:	31 05       	cpc	r19, r1
 27a:	2c f4       	brge	.+10     	; 0x286 <DIO_VidWritePinValue+0x3e>
 27c:	8c 81       	ldd	r24, Y+4	; 0x04
 27e:	9d 81       	ldd	r25, Y+5	; 0x05
 280:	00 97       	sbiw	r24, 0x00	; 0
 282:	71 f0       	breq	.+28     	; 0x2a0 <DIO_VidWritePinValue+0x58>
 284:	c7 c0       	rjmp	.+398    	; 0x414 <DIO_VidWritePinValue+0x1cc>
 286:	2c 81       	ldd	r18, Y+4	; 0x04
 288:	3d 81       	ldd	r19, Y+5	; 0x05
 28a:	22 30       	cpi	r18, 0x02	; 2
 28c:	31 05       	cpc	r19, r1
 28e:	09 f4       	brne	.+2      	; 0x292 <DIO_VidWritePinValue+0x4a>
 290:	65 c0       	rjmp	.+202    	; 0x35c <DIO_VidWritePinValue+0x114>
 292:	8c 81       	ldd	r24, Y+4	; 0x04
 294:	9d 81       	ldd	r25, Y+5	; 0x05
 296:	83 30       	cpi	r24, 0x03	; 3
 298:	91 05       	cpc	r25, r1
 29a:	09 f4       	brne	.+2      	; 0x29e <DIO_VidWritePinValue+0x56>
 29c:	8e c0       	rjmp	.+284    	; 0x3ba <DIO_VidWritePinValue+0x172>
 29e:	ba c0       	rjmp	.+372    	; 0x414 <DIO_VidWritePinValue+0x1cc>
	{
	case 0:
		if(value==0)
 2a0:	8b 81       	ldd	r24, Y+3	; 0x03
 2a2:	88 23       	and	r24, r24
 2a4:	a1 f4       	brne	.+40     	; 0x2ce <DIO_VidWritePinValue+0x86>
			 clear_bit(PORTA,pin);
 2a6:	ab e3       	ldi	r26, 0x3B	; 59
 2a8:	b0 e0       	ldi	r27, 0x00	; 0
 2aa:	eb e3       	ldi	r30, 0x3B	; 59
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	48 2f       	mov	r20, r24
 2b2:	8a 81       	ldd	r24, Y+2	; 0x02
 2b4:	28 2f       	mov	r18, r24
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	02 2e       	mov	r0, r18
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_VidWritePinValue+0x7c>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	0a 94       	dec	r0
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_VidWritePinValue+0x78>
 2c8:	80 95       	com	r24
 2ca:	84 23       	and	r24, r20
 2cc:	8c 93       	st	X, r24
		if (value==1)
 2ce:	8b 81       	ldd	r24, Y+3	; 0x03
 2d0:	81 30       	cpi	r24, 0x01	; 1
 2d2:	09 f0       	breq	.+2      	; 0x2d6 <DIO_VidWritePinValue+0x8e>
 2d4:	9f c0       	rjmp	.+318    	; 0x414 <DIO_VidWritePinValue+0x1cc>
			set_bit(PORTA,pin);
 2d6:	ab e3       	ldi	r26, 0x3B	; 59
 2d8:	b0 e0       	ldi	r27, 0x00	; 0
 2da:	eb e3       	ldi	r30, 0x3B	; 59
 2dc:	f0 e0       	ldi	r31, 0x00	; 0
 2de:	80 81       	ld	r24, Z
 2e0:	48 2f       	mov	r20, r24
 2e2:	8a 81       	ldd	r24, Y+2	; 0x02
 2e4:	28 2f       	mov	r18, r24
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	02 2e       	mov	r0, r18
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <DIO_VidWritePinValue+0xac>
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	0a 94       	dec	r0
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <DIO_VidWritePinValue+0xa8>
 2f8:	84 2b       	or	r24, r20
 2fa:	8c 93       	st	X, r24
 2fc:	8b c0       	rjmp	.+278    	; 0x414 <DIO_VidWritePinValue+0x1cc>
		break;
	case 1:
			if(value==0)
 2fe:	8b 81       	ldd	r24, Y+3	; 0x03
 300:	88 23       	and	r24, r24
 302:	a1 f4       	brne	.+40     	; 0x32c <DIO_VidWritePinValue+0xe4>
				 clear_bit(PORTB,pin);
 304:	a8 e3       	ldi	r26, 0x38	; 56
 306:	b0 e0       	ldi	r27, 0x00	; 0
 308:	e8 e3       	ldi	r30, 0x38	; 56
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	80 81       	ld	r24, Z
 30e:	48 2f       	mov	r20, r24
 310:	8a 81       	ldd	r24, Y+2	; 0x02
 312:	28 2f       	mov	r18, r24
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 2e       	mov	r0, r18
 31c:	02 c0       	rjmp	.+4      	; 0x322 <DIO_VidWritePinValue+0xda>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	0a 94       	dec	r0
 324:	e2 f7       	brpl	.-8      	; 0x31e <DIO_VidWritePinValue+0xd6>
 326:	80 95       	com	r24
 328:	84 23       	and	r24, r20
 32a:	8c 93       	st	X, r24
			if (value==1)
 32c:	8b 81       	ldd	r24, Y+3	; 0x03
 32e:	81 30       	cpi	r24, 0x01	; 1
 330:	09 f0       	breq	.+2      	; 0x334 <DIO_VidWritePinValue+0xec>
 332:	70 c0       	rjmp	.+224    	; 0x414 <DIO_VidWritePinValue+0x1cc>
				set_bit(PORTB,pin);
 334:	a8 e3       	ldi	r26, 0x38	; 56
 336:	b0 e0       	ldi	r27, 0x00	; 0
 338:	e8 e3       	ldi	r30, 0x38	; 56
 33a:	f0 e0       	ldi	r31, 0x00	; 0
 33c:	80 81       	ld	r24, Z
 33e:	48 2f       	mov	r20, r24
 340:	8a 81       	ldd	r24, Y+2	; 0x02
 342:	28 2f       	mov	r18, r24
 344:	30 e0       	ldi	r19, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	02 2e       	mov	r0, r18
 34c:	02 c0       	rjmp	.+4      	; 0x352 <DIO_VidWritePinValue+0x10a>
 34e:	88 0f       	add	r24, r24
 350:	99 1f       	adc	r25, r25
 352:	0a 94       	dec	r0
 354:	e2 f7       	brpl	.-8      	; 0x34e <DIO_VidWritePinValue+0x106>
 356:	84 2b       	or	r24, r20
 358:	8c 93       	st	X, r24
 35a:	5c c0       	rjmp	.+184    	; 0x414 <DIO_VidWritePinValue+0x1cc>
			break;
	case 2:
			if(value==0)
 35c:	8b 81       	ldd	r24, Y+3	; 0x03
 35e:	88 23       	and	r24, r24
 360:	a1 f4       	brne	.+40     	; 0x38a <DIO_VidWritePinValue+0x142>
				 clear_bit(PORTC,pin);
 362:	a5 e3       	ldi	r26, 0x35	; 53
 364:	b0 e0       	ldi	r27, 0x00	; 0
 366:	e5 e3       	ldi	r30, 0x35	; 53
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	80 81       	ld	r24, Z
 36c:	48 2f       	mov	r20, r24
 36e:	8a 81       	ldd	r24, Y+2	; 0x02
 370:	28 2f       	mov	r18, r24
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	81 e0       	ldi	r24, 0x01	; 1
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	02 2e       	mov	r0, r18
 37a:	02 c0       	rjmp	.+4      	; 0x380 <DIO_VidWritePinValue+0x138>
 37c:	88 0f       	add	r24, r24
 37e:	99 1f       	adc	r25, r25
 380:	0a 94       	dec	r0
 382:	e2 f7       	brpl	.-8      	; 0x37c <DIO_VidWritePinValue+0x134>
 384:	80 95       	com	r24
 386:	84 23       	and	r24, r20
 388:	8c 93       	st	X, r24
			if (value==1)
 38a:	8b 81       	ldd	r24, Y+3	; 0x03
 38c:	81 30       	cpi	r24, 0x01	; 1
 38e:	09 f0       	breq	.+2      	; 0x392 <DIO_VidWritePinValue+0x14a>
 390:	41 c0       	rjmp	.+130    	; 0x414 <DIO_VidWritePinValue+0x1cc>
				set_bit(PORTC,pin);
 392:	a5 e3       	ldi	r26, 0x35	; 53
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	e5 e3       	ldi	r30, 0x35	; 53
 398:	f0 e0       	ldi	r31, 0x00	; 0
 39a:	80 81       	ld	r24, Z
 39c:	48 2f       	mov	r20, r24
 39e:	8a 81       	ldd	r24, Y+2	; 0x02
 3a0:	28 2f       	mov	r18, r24
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	02 2e       	mov	r0, r18
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <DIO_VidWritePinValue+0x168>
 3ac:	88 0f       	add	r24, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	0a 94       	dec	r0
 3b2:	e2 f7       	brpl	.-8      	; 0x3ac <DIO_VidWritePinValue+0x164>
 3b4:	84 2b       	or	r24, r20
 3b6:	8c 93       	st	X, r24
 3b8:	2d c0       	rjmp	.+90     	; 0x414 <DIO_VidWritePinValue+0x1cc>
			break;
	case 3:
			if(value==0)
 3ba:	8b 81       	ldd	r24, Y+3	; 0x03
 3bc:	88 23       	and	r24, r24
 3be:	a1 f4       	brne	.+40     	; 0x3e8 <DIO_VidWritePinValue+0x1a0>
				 clear_bit(PORTD,pin);
 3c0:	a2 e3       	ldi	r26, 0x32	; 50
 3c2:	b0 e0       	ldi	r27, 0x00	; 0
 3c4:	e2 e3       	ldi	r30, 0x32	; 50
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	80 81       	ld	r24, Z
 3ca:	48 2f       	mov	r20, r24
 3cc:	8a 81       	ldd	r24, Y+2	; 0x02
 3ce:	28 2f       	mov	r18, r24
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	02 2e       	mov	r0, r18
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <DIO_VidWritePinValue+0x196>
 3da:	88 0f       	add	r24, r24
 3dc:	99 1f       	adc	r25, r25
 3de:	0a 94       	dec	r0
 3e0:	e2 f7       	brpl	.-8      	; 0x3da <DIO_VidWritePinValue+0x192>
 3e2:	80 95       	com	r24
 3e4:	84 23       	and	r24, r20
 3e6:	8c 93       	st	X, r24
			if (value==1)
 3e8:	8b 81       	ldd	r24, Y+3	; 0x03
 3ea:	81 30       	cpi	r24, 0x01	; 1
 3ec:	99 f4       	brne	.+38     	; 0x414 <DIO_VidWritePinValue+0x1cc>
				set_bit(PORTD,pin);
 3ee:	a2 e3       	ldi	r26, 0x32	; 50
 3f0:	b0 e0       	ldi	r27, 0x00	; 0
 3f2:	e2 e3       	ldi	r30, 0x32	; 50
 3f4:	f0 e0       	ldi	r31, 0x00	; 0
 3f6:	80 81       	ld	r24, Z
 3f8:	48 2f       	mov	r20, r24
 3fa:	8a 81       	ldd	r24, Y+2	; 0x02
 3fc:	28 2f       	mov	r18, r24
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	02 2e       	mov	r0, r18
 406:	02 c0       	rjmp	.+4      	; 0x40c <DIO_VidWritePinValue+0x1c4>
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <DIO_VidWritePinValue+0x1c0>
 410:	84 2b       	or	r24, r20
 412:	8c 93       	st	X, r24
			break;
	}
}
 414:	0f 90       	pop	r0
 416:	0f 90       	pop	r0
 418:	0f 90       	pop	r0
 41a:	0f 90       	pop	r0
 41c:	0f 90       	pop	r0
 41e:	cf 91       	pop	r28
 420:	df 91       	pop	r29
 422:	08 95       	ret

00000424 <DIO_u8ReadPinValue>:
u8 DIO_u8ReadPinValue(u8 port,u8 pin)
{
 424:	df 93       	push	r29
 426:	cf 93       	push	r28
 428:	00 d0       	rcall	.+0      	; 0x42a <DIO_u8ReadPinValue+0x6>
 42a:	00 d0       	rcall	.+0      	; 0x42c <DIO_u8ReadPinValue+0x8>
 42c:	0f 92       	push	r0
 42e:	cd b7       	in	r28, 0x3d	; 61
 430:	de b7       	in	r29, 0x3e	; 62
 432:	89 83       	std	Y+1, r24	; 0x01
 434:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
 436:	89 81       	ldd	r24, Y+1	; 0x01
 438:	28 2f       	mov	r18, r24
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	3d 83       	std	Y+5, r19	; 0x05
 43e:	2c 83       	std	Y+4, r18	; 0x04
 440:	4c 81       	ldd	r20, Y+4	; 0x04
 442:	5d 81       	ldd	r21, Y+5	; 0x05
 444:	41 30       	cpi	r20, 0x01	; 1
 446:	51 05       	cpc	r21, r1
 448:	b1 f1       	breq	.+108    	; 0x4b6 <DIO_u8ReadPinValue+0x92>
 44a:	8c 81       	ldd	r24, Y+4	; 0x04
 44c:	9d 81       	ldd	r25, Y+5	; 0x05
 44e:	82 30       	cpi	r24, 0x02	; 2
 450:	91 05       	cpc	r25, r1
 452:	34 f4       	brge	.+12     	; 0x460 <DIO_u8ReadPinValue+0x3c>
 454:	2c 81       	ldd	r18, Y+4	; 0x04
 456:	3d 81       	ldd	r19, Y+5	; 0x05
 458:	21 15       	cp	r18, r1
 45a:	31 05       	cpc	r19, r1
 45c:	71 f0       	breq	.+28     	; 0x47a <DIO_u8ReadPinValue+0x56>
 45e:	85 c0       	rjmp	.+266    	; 0x56a <DIO_u8ReadPinValue+0x146>
 460:	4c 81       	ldd	r20, Y+4	; 0x04
 462:	5d 81       	ldd	r21, Y+5	; 0x05
 464:	42 30       	cpi	r20, 0x02	; 2
 466:	51 05       	cpc	r21, r1
 468:	09 f4       	brne	.+2      	; 0x46c <DIO_u8ReadPinValue+0x48>
 46a:	43 c0       	rjmp	.+134    	; 0x4f2 <DIO_u8ReadPinValue+0xce>
 46c:	8c 81       	ldd	r24, Y+4	; 0x04
 46e:	9d 81       	ldd	r25, Y+5	; 0x05
 470:	83 30       	cpi	r24, 0x03	; 3
 472:	91 05       	cpc	r25, r1
 474:	09 f4       	brne	.+2      	; 0x478 <DIO_u8ReadPinValue+0x54>
 476:	5b c0       	rjmp	.+182    	; 0x52e <DIO_u8ReadPinValue+0x10a>
 478:	78 c0       	rjmp	.+240    	; 0x56a <DIO_u8ReadPinValue+0x146>
	{
	case 0:

			 return get_bit(PINA,pin);
 47a:	e9 e3       	ldi	r30, 0x39	; 57
 47c:	f0 e0       	ldi	r31, 0x00	; 0
 47e:	80 81       	ld	r24, Z
 480:	48 2f       	mov	r20, r24
 482:	50 e0       	ldi	r21, 0x00	; 0
 484:	8a 81       	ldd	r24, Y+2	; 0x02
 486:	28 2f       	mov	r18, r24
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	02 c0       	rjmp	.+4      	; 0x494 <DIO_u8ReadPinValue+0x70>
 490:	88 0f       	add	r24, r24
 492:	99 1f       	adc	r25, r25
 494:	2a 95       	dec	r18
 496:	e2 f7       	brpl	.-8      	; 0x490 <DIO_u8ReadPinValue+0x6c>
 498:	9a 01       	movw	r18, r20
 49a:	28 23       	and	r18, r24
 49c:	39 23       	and	r19, r25
 49e:	8a 81       	ldd	r24, Y+2	; 0x02
 4a0:	88 2f       	mov	r24, r24
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	a9 01       	movw	r20, r18
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <DIO_u8ReadPinValue+0x88>
 4a8:	55 95       	asr	r21
 4aa:	47 95       	ror	r20
 4ac:	8a 95       	dec	r24
 4ae:	e2 f7       	brpl	.-8      	; 0x4a8 <DIO_u8ReadPinValue+0x84>
 4b0:	ca 01       	movw	r24, r20
 4b2:	8b 83       	std	Y+3, r24	; 0x03
 4b4:	5c c0       	rjmp	.+184    	; 0x56e <DIO_u8ReadPinValue+0x14a>


		break;
	case 1:
		return get_bit(PINB,pin);
 4b6:	e6 e3       	ldi	r30, 0x36	; 54
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	80 81       	ld	r24, Z
 4bc:	48 2f       	mov	r20, r24
 4be:	50 e0       	ldi	r21, 0x00	; 0
 4c0:	8a 81       	ldd	r24, Y+2	; 0x02
 4c2:	28 2f       	mov	r18, r24
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <DIO_u8ReadPinValue+0xac>
 4cc:	88 0f       	add	r24, r24
 4ce:	99 1f       	adc	r25, r25
 4d0:	2a 95       	dec	r18
 4d2:	e2 f7       	brpl	.-8      	; 0x4cc <DIO_u8ReadPinValue+0xa8>
 4d4:	9a 01       	movw	r18, r20
 4d6:	28 23       	and	r18, r24
 4d8:	39 23       	and	r19, r25
 4da:	8a 81       	ldd	r24, Y+2	; 0x02
 4dc:	88 2f       	mov	r24, r24
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	a9 01       	movw	r20, r18
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <DIO_u8ReadPinValue+0xc4>
 4e4:	55 95       	asr	r21
 4e6:	47 95       	ror	r20
 4e8:	8a 95       	dec	r24
 4ea:	e2 f7       	brpl	.-8      	; 0x4e4 <DIO_u8ReadPinValue+0xc0>
 4ec:	ca 01       	movw	r24, r20
 4ee:	8b 83       	std	Y+3, r24	; 0x03
 4f0:	3e c0       	rjmp	.+124    	; 0x56e <DIO_u8ReadPinValue+0x14a>
			break;
	case 2:


		return get_bit(PINC,pin);
 4f2:	e3 e3       	ldi	r30, 0x33	; 51
 4f4:	f0 e0       	ldi	r31, 0x00	; 0
 4f6:	80 81       	ld	r24, Z
 4f8:	48 2f       	mov	r20, r24
 4fa:	50 e0       	ldi	r21, 0x00	; 0
 4fc:	8a 81       	ldd	r24, Y+2	; 0x02
 4fe:	28 2f       	mov	r18, r24
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	81 e0       	ldi	r24, 0x01	; 1
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	02 c0       	rjmp	.+4      	; 0x50c <DIO_u8ReadPinValue+0xe8>
 508:	88 0f       	add	r24, r24
 50a:	99 1f       	adc	r25, r25
 50c:	2a 95       	dec	r18
 50e:	e2 f7       	brpl	.-8      	; 0x508 <DIO_u8ReadPinValue+0xe4>
 510:	9a 01       	movw	r18, r20
 512:	28 23       	and	r18, r24
 514:	39 23       	and	r19, r25
 516:	8a 81       	ldd	r24, Y+2	; 0x02
 518:	88 2f       	mov	r24, r24
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	a9 01       	movw	r20, r18
 51e:	02 c0       	rjmp	.+4      	; 0x524 <DIO_u8ReadPinValue+0x100>
 520:	55 95       	asr	r21
 522:	47 95       	ror	r20
 524:	8a 95       	dec	r24
 526:	e2 f7       	brpl	.-8      	; 0x520 <DIO_u8ReadPinValue+0xfc>
 528:	ca 01       	movw	r24, r20
 52a:	8b 83       	std	Y+3, r24	; 0x03
 52c:	20 c0       	rjmp	.+64     	; 0x56e <DIO_u8ReadPinValue+0x14a>
			break;
	case 3:
		return get_bit(PIND,pin);
 52e:	e0 e3       	ldi	r30, 0x30	; 48
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	80 81       	ld	r24, Z
 534:	48 2f       	mov	r20, r24
 536:	50 e0       	ldi	r21, 0x00	; 0
 538:	8a 81       	ldd	r24, Y+2	; 0x02
 53a:	28 2f       	mov	r18, r24
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	02 c0       	rjmp	.+4      	; 0x548 <DIO_u8ReadPinValue+0x124>
 544:	88 0f       	add	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	2a 95       	dec	r18
 54a:	e2 f7       	brpl	.-8      	; 0x544 <DIO_u8ReadPinValue+0x120>
 54c:	9a 01       	movw	r18, r20
 54e:	28 23       	and	r18, r24
 550:	39 23       	and	r19, r25
 552:	8a 81       	ldd	r24, Y+2	; 0x02
 554:	88 2f       	mov	r24, r24
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	a9 01       	movw	r20, r18
 55a:	02 c0       	rjmp	.+4      	; 0x560 <DIO_u8ReadPinValue+0x13c>
 55c:	55 95       	asr	r21
 55e:	47 95       	ror	r20
 560:	8a 95       	dec	r24
 562:	e2 f7       	brpl	.-8      	; 0x55c <DIO_u8ReadPinValue+0x138>
 564:	ca 01       	movw	r24, r20
 566:	8b 83       	std	Y+3, r24	; 0x03
 568:	02 c0       	rjmp	.+4      	; 0x56e <DIO_u8ReadPinValue+0x14a>
			break;
default:
	return 2;
 56a:	52 e0       	ldi	r21, 0x02	; 2
 56c:	5b 83       	std	Y+3, r21	; 0x03
 56e:	8b 81       	ldd	r24, Y+3	; 0x03
	break;;

}
}
 570:	0f 90       	pop	r0
 572:	0f 90       	pop	r0
 574:	0f 90       	pop	r0
 576:	0f 90       	pop	r0
 578:	0f 90       	pop	r0
 57a:	cf 91       	pop	r28
 57c:	df 91       	pop	r29
 57e:	08 95       	ret

00000580 <main>:
#include "std_types.h"
#include "registers.h"
#include"utils.h"
#include"DIO.h"
void main (void)
{
 580:	df 93       	push	r29
 582:	cf 93       	push	r28
 584:	cd b7       	in	r28, 0x3d	; 61
 586:	de b7       	in	r29, 0x3e	; 62
	DIO_VidSetPinDir(0,0,1);
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	60 e0       	ldi	r22, 0x00	; 0
 58c:	41 e0       	ldi	r20, 0x01	; 1
 58e:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_VidSetPinDir>
	DIO_VidWritePinValue(0,0,1);
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	60 e0       	ldi	r22, 0x00	; 0
 596:	41 e0       	ldi	r20, 0x01	; 1
 598:	0e 94 24 01 	call	0x248	; 0x248 <DIO_VidWritePinValue>
}
 59c:	cf 91       	pop	r28
 59e:	df 91       	pop	r29
 5a0:	08 95       	ret

000005a2 <_exit>:
 5a2:	f8 94       	cli

000005a4 <__stop_program>:
 5a4:	ff cf       	rjmp	.-2      	; 0x5a4 <__stop_program>
