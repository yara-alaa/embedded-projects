
keypaddriver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000818  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  0000088c  2**0
                  ALLOC
  2 .stab         000008e8  00000000  00000000  0000088c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000003e0  00000000  00000000  00001174  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 01 04 	call	0x802	; 0x802 <main>
  74:	0c 94 0a 04 	jmp	0x814	; 0x814 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <DIO_vidsetpindir>:
#include "std_types.h"
#include "registers.h"
#include"utils.h"
#include"DIO.h"
extern void DIO_vidsetpindir (u8 port ,u8 pin , u8 dir)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	00 d0       	rcall	.+0      	; 0x82 <DIO_vidsetpindir+0x6>
  82:	00 d0       	rcall	.+0      	; 0x84 <DIO_vidsetpindir+0x8>
  84:	0f 92       	push	r0
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	89 83       	std	Y+1, r24	; 0x01
  8c:	6a 83       	std	Y+2, r22	; 0x02
  8e:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
  90:	89 81       	ldd	r24, Y+1	; 0x01
  92:	28 2f       	mov	r18, r24
  94:	30 e0       	ldi	r19, 0x00	; 0
  96:	3d 83       	std	Y+5, r19	; 0x05
  98:	2c 83       	std	Y+4, r18	; 0x04
  9a:	8c 81       	ldd	r24, Y+4	; 0x04
  9c:	9d 81       	ldd	r25, Y+5	; 0x05
  9e:	81 30       	cpi	r24, 0x01	; 1
  a0:	91 05       	cpc	r25, r1
  a2:	09 f4       	brne	.+2      	; 0xa6 <DIO_vidsetpindir+0x2a>
  a4:	46 c0       	rjmp	.+140    	; 0x132 <DIO_vidsetpindir+0xb6>
  a6:	2c 81       	ldd	r18, Y+4	; 0x04
  a8:	3d 81       	ldd	r19, Y+5	; 0x05
  aa:	22 30       	cpi	r18, 0x02	; 2
  ac:	31 05       	cpc	r19, r1
  ae:	2c f4       	brge	.+10     	; 0xba <DIO_vidsetpindir+0x3e>
  b0:	8c 81       	ldd	r24, Y+4	; 0x04
  b2:	9d 81       	ldd	r25, Y+5	; 0x05
  b4:	00 97       	sbiw	r24, 0x00	; 0
  b6:	71 f0       	breq	.+28     	; 0xd4 <DIO_vidsetpindir+0x58>
  b8:	c7 c0       	rjmp	.+398    	; 0x248 <DIO_vidsetpindir+0x1cc>
  ba:	2c 81       	ldd	r18, Y+4	; 0x04
  bc:	3d 81       	ldd	r19, Y+5	; 0x05
  be:	22 30       	cpi	r18, 0x02	; 2
  c0:	31 05       	cpc	r19, r1
  c2:	09 f4       	brne	.+2      	; 0xc6 <DIO_vidsetpindir+0x4a>
  c4:	65 c0       	rjmp	.+202    	; 0x190 <DIO_vidsetpindir+0x114>
  c6:	8c 81       	ldd	r24, Y+4	; 0x04
  c8:	9d 81       	ldd	r25, Y+5	; 0x05
  ca:	83 30       	cpi	r24, 0x03	; 3
  cc:	91 05       	cpc	r25, r1
  ce:	09 f4       	brne	.+2      	; 0xd2 <DIO_vidsetpindir+0x56>
  d0:	8e c0       	rjmp	.+284    	; 0x1ee <DIO_vidsetpindir+0x172>
  d2:	ba c0       	rjmp	.+372    	; 0x248 <DIO_vidsetpindir+0x1cc>
	{
	case 0:
		if (dir==0)
  d4:	8b 81       	ldd	r24, Y+3	; 0x03
  d6:	88 23       	and	r24, r24
  d8:	a1 f4       	brne	.+40     	; 0x102 <DIO_vidsetpindir+0x86>
			clear_bit(DDRA,pin);
  da:	aa e3       	ldi	r26, 0x3A	; 58
  dc:	b0 e0       	ldi	r27, 0x00	; 0
  de:	ea e3       	ldi	r30, 0x3A	; 58
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	80 81       	ld	r24, Z
  e4:	48 2f       	mov	r20, r24
  e6:	8a 81       	ldd	r24, Y+2	; 0x02
  e8:	28 2f       	mov	r18, r24
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	02 2e       	mov	r0, r18
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_vidsetpindir+0x7c>
  f4:	88 0f       	add	r24, r24
  f6:	99 1f       	adc	r25, r25
  f8:	0a 94       	dec	r0
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_vidsetpindir+0x78>
  fc:	80 95       	com	r24
  fe:	84 23       	and	r24, r20
 100:	8c 93       	st	X, r24
		if (dir==1)
 102:	8b 81       	ldd	r24, Y+3	; 0x03
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	09 f0       	breq	.+2      	; 0x10a <DIO_vidsetpindir+0x8e>
 108:	9f c0       	rjmp	.+318    	; 0x248 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRA,pin);
 10a:	aa e3       	ldi	r26, 0x3A	; 58
 10c:	b0 e0       	ldi	r27, 0x00	; 0
 10e:	ea e3       	ldi	r30, 0x3A	; 58
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	48 2f       	mov	r20, r24
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	28 2f       	mov	r18, r24
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 2e       	mov	r0, r18
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_vidsetpindir+0xac>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	0a 94       	dec	r0
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_vidsetpindir+0xa8>
 12c:	84 2b       	or	r24, r20
 12e:	8c 93       	st	X, r24
 130:	8b c0       	rjmp	.+278    	; 0x248 <DIO_vidsetpindir+0x1cc>
		break;
	case 1:
		if (dir==0)
 132:	8b 81       	ldd	r24, Y+3	; 0x03
 134:	88 23       	and	r24, r24
 136:	a1 f4       	brne	.+40     	; 0x160 <DIO_vidsetpindir+0xe4>
			clear_bit (DDRB,pin);
 138:	a7 e3       	ldi	r26, 0x37	; 55
 13a:	b0 e0       	ldi	r27, 0x00	; 0
 13c:	e7 e3       	ldi	r30, 0x37	; 55
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	48 2f       	mov	r20, r24
 144:	8a 81       	ldd	r24, Y+2	; 0x02
 146:	28 2f       	mov	r18, r24
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 2e       	mov	r0, r18
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_vidsetpindir+0xda>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	0a 94       	dec	r0
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_vidsetpindir+0xd6>
 15a:	80 95       	com	r24
 15c:	84 23       	and	r24, r20
 15e:	8c 93       	st	X, r24
		if (dir==1)
 160:	8b 81       	ldd	r24, Y+3	; 0x03
 162:	81 30       	cpi	r24, 0x01	; 1
 164:	09 f0       	breq	.+2      	; 0x168 <DIO_vidsetpindir+0xec>
 166:	70 c0       	rjmp	.+224    	; 0x248 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRB,pin);
 168:	a7 e3       	ldi	r26, 0x37	; 55
 16a:	b0 e0       	ldi	r27, 0x00	; 0
 16c:	e7 e3       	ldi	r30, 0x37	; 55
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	48 2f       	mov	r20, r24
 174:	8a 81       	ldd	r24, Y+2	; 0x02
 176:	28 2f       	mov	r18, r24
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 2e       	mov	r0, r18
 180:	02 c0       	rjmp	.+4      	; 0x186 <DIO_vidsetpindir+0x10a>
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	0a 94       	dec	r0
 188:	e2 f7       	brpl	.-8      	; 0x182 <DIO_vidsetpindir+0x106>
 18a:	84 2b       	or	r24, r20
 18c:	8c 93       	st	X, r24
 18e:	5c c0       	rjmp	.+184    	; 0x248 <DIO_vidsetpindir+0x1cc>
		break;
	case 2:
		if (dir==0)
 190:	8b 81       	ldd	r24, Y+3	; 0x03
 192:	88 23       	and	r24, r24
 194:	a1 f4       	brne	.+40     	; 0x1be <DIO_vidsetpindir+0x142>
			clear_bit (DDRC,pin);
 196:	a4 e3       	ldi	r26, 0x34	; 52
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	e4 e3       	ldi	r30, 0x34	; 52
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	48 2f       	mov	r20, r24
 1a2:	8a 81       	ldd	r24, Y+2	; 0x02
 1a4:	28 2f       	mov	r18, r24
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 2e       	mov	r0, r18
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_vidsetpindir+0x138>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	0a 94       	dec	r0
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_vidsetpindir+0x134>
 1b8:	80 95       	com	r24
 1ba:	84 23       	and	r24, r20
 1bc:	8c 93       	st	X, r24
		if (dir==1)
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	09 f0       	breq	.+2      	; 0x1c6 <DIO_vidsetpindir+0x14a>
 1c4:	41 c0       	rjmp	.+130    	; 0x248 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRC,pin);
 1c6:	a4 e3       	ldi	r26, 0x34	; 52
 1c8:	b0 e0       	ldi	r27, 0x00	; 0
 1ca:	e4 e3       	ldi	r30, 0x34	; 52
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	80 81       	ld	r24, Z
 1d0:	48 2f       	mov	r20, r24
 1d2:	8a 81       	ldd	r24, Y+2	; 0x02
 1d4:	28 2f       	mov	r18, r24
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	02 2e       	mov	r0, r18
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <DIO_vidsetpindir+0x168>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	0a 94       	dec	r0
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <DIO_vidsetpindir+0x164>
 1e8:	84 2b       	or	r24, r20
 1ea:	8c 93       	st	X, r24
 1ec:	2d c0       	rjmp	.+90     	; 0x248 <DIO_vidsetpindir+0x1cc>
		break;
	case 3:
		if (dir==0)
 1ee:	8b 81       	ldd	r24, Y+3	; 0x03
 1f0:	88 23       	and	r24, r24
 1f2:	a1 f4       	brne	.+40     	; 0x21c <DIO_vidsetpindir+0x1a0>
			clear_bit(DDRD,pin);
 1f4:	a1 e3       	ldi	r26, 0x31	; 49
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	e1 e3       	ldi	r30, 0x31	; 49
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	48 2f       	mov	r20, r24
 200:	8a 81       	ldd	r24, Y+2	; 0x02
 202:	28 2f       	mov	r18, r24
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 2e       	mov	r0, r18
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_vidsetpindir+0x196>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_vidsetpindir+0x192>
 216:	80 95       	com	r24
 218:	84 23       	and	r24, r20
 21a:	8c 93       	st	X, r24
		if (dir==1)
 21c:	8b 81       	ldd	r24, Y+3	; 0x03
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	99 f4       	brne	.+38     	; 0x248 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRD,pin);
 222:	a1 e3       	ldi	r26, 0x31	; 49
 224:	b0 e0       	ldi	r27, 0x00	; 0
 226:	e1 e3       	ldi	r30, 0x31	; 49
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	80 81       	ld	r24, Z
 22c:	48 2f       	mov	r20, r24
 22e:	8a 81       	ldd	r24, Y+2	; 0x02
 230:	28 2f       	mov	r18, r24
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 2e       	mov	r0, r18
 23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_vidsetpindir+0x1c4>
 23c:	88 0f       	add	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	0a 94       	dec	r0
 242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_vidsetpindir+0x1c0>
 244:	84 2b       	or	r24, r20
 246:	8c 93       	st	X, r24
		break;
	default :
		break;
	}
}
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	0f 90       	pop	r0
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	cf 91       	pop	r28
 254:	df 91       	pop	r29
 256:	08 95       	ret

00000258 <DIO_vidwritepinvalue>:

extern void DIO_vidwritepinvalue (u8 port, u8 pin, u8 value)
{
 258:	df 93       	push	r29
 25a:	cf 93       	push	r28
 25c:	00 d0       	rcall	.+0      	; 0x25e <DIO_vidwritepinvalue+0x6>
 25e:	00 d0       	rcall	.+0      	; 0x260 <DIO_vidwritepinvalue+0x8>
 260:	0f 92       	push	r0
 262:	cd b7       	in	r28, 0x3d	; 61
 264:	de b7       	in	r29, 0x3e	; 62
 266:	89 83       	std	Y+1, r24	; 0x01
 268:	6a 83       	std	Y+2, r22	; 0x02
 26a:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
 26c:	89 81       	ldd	r24, Y+1	; 0x01
 26e:	28 2f       	mov	r18, r24
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	3d 83       	std	Y+5, r19	; 0x05
 274:	2c 83       	std	Y+4, r18	; 0x04
 276:	8c 81       	ldd	r24, Y+4	; 0x04
 278:	9d 81       	ldd	r25, Y+5	; 0x05
 27a:	81 30       	cpi	r24, 0x01	; 1
 27c:	91 05       	cpc	r25, r1
 27e:	09 f4       	brne	.+2      	; 0x282 <DIO_vidwritepinvalue+0x2a>
 280:	46 c0       	rjmp	.+140    	; 0x30e <DIO_vidwritepinvalue+0xb6>
 282:	2c 81       	ldd	r18, Y+4	; 0x04
 284:	3d 81       	ldd	r19, Y+5	; 0x05
 286:	22 30       	cpi	r18, 0x02	; 2
 288:	31 05       	cpc	r19, r1
 28a:	2c f4       	brge	.+10     	; 0x296 <DIO_vidwritepinvalue+0x3e>
 28c:	8c 81       	ldd	r24, Y+4	; 0x04
 28e:	9d 81       	ldd	r25, Y+5	; 0x05
 290:	00 97       	sbiw	r24, 0x00	; 0
 292:	71 f0       	breq	.+28     	; 0x2b0 <DIO_vidwritepinvalue+0x58>
 294:	c7 c0       	rjmp	.+398    	; 0x424 <DIO_vidwritepinvalue+0x1cc>
 296:	2c 81       	ldd	r18, Y+4	; 0x04
 298:	3d 81       	ldd	r19, Y+5	; 0x05
 29a:	22 30       	cpi	r18, 0x02	; 2
 29c:	31 05       	cpc	r19, r1
 29e:	09 f4       	brne	.+2      	; 0x2a2 <DIO_vidwritepinvalue+0x4a>
 2a0:	65 c0       	rjmp	.+202    	; 0x36c <DIO_vidwritepinvalue+0x114>
 2a2:	8c 81       	ldd	r24, Y+4	; 0x04
 2a4:	9d 81       	ldd	r25, Y+5	; 0x05
 2a6:	83 30       	cpi	r24, 0x03	; 3
 2a8:	91 05       	cpc	r25, r1
 2aa:	09 f4       	brne	.+2      	; 0x2ae <DIO_vidwritepinvalue+0x56>
 2ac:	8e c0       	rjmp	.+284    	; 0x3ca <DIO_vidwritepinvalue+0x172>
 2ae:	ba c0       	rjmp	.+372    	; 0x424 <DIO_vidwritepinvalue+0x1cc>
		{
	case 0:
		if (value==0)
 2b0:	8b 81       	ldd	r24, Y+3	; 0x03
 2b2:	88 23       	and	r24, r24
 2b4:	a1 f4       	brne	.+40     	; 0x2de <DIO_vidwritepinvalue+0x86>
			clear_bit (PORTA,pin);
 2b6:	ab e3       	ldi	r26, 0x3B	; 59
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	eb e3       	ldi	r30, 0x3B	; 59
 2bc:	f0 e0       	ldi	r31, 0x00	; 0
 2be:	80 81       	ld	r24, Z
 2c0:	48 2f       	mov	r20, r24
 2c2:	8a 81       	ldd	r24, Y+2	; 0x02
 2c4:	28 2f       	mov	r18, r24
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	81 e0       	ldi	r24, 0x01	; 1
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	02 2e       	mov	r0, r18
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_vidwritepinvalue+0x7c>
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	0a 94       	dec	r0
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_vidwritepinvalue+0x78>
 2d8:	80 95       	com	r24
 2da:	84 23       	and	r24, r20
 2dc:	8c 93       	st	X, r24
		if (value==1)
 2de:	8b 81       	ldd	r24, Y+3	; 0x03
 2e0:	81 30       	cpi	r24, 0x01	; 1
 2e2:	09 f0       	breq	.+2      	; 0x2e6 <DIO_vidwritepinvalue+0x8e>
 2e4:	9f c0       	rjmp	.+318    	; 0x424 <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTA,pin);
 2e6:	ab e3       	ldi	r26, 0x3B	; 59
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	eb e3       	ldi	r30, 0x3B	; 59
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	80 81       	ld	r24, Z
 2f0:	48 2f       	mov	r20, r24
 2f2:	8a 81       	ldd	r24, Y+2	; 0x02
 2f4:	28 2f       	mov	r18, r24
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	02 2e       	mov	r0, r18
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <DIO_vidwritepinvalue+0xac>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	0a 94       	dec	r0
 306:	e2 f7       	brpl	.-8      	; 0x300 <DIO_vidwritepinvalue+0xa8>
 308:	84 2b       	or	r24, r20
 30a:	8c 93       	st	X, r24
 30c:	8b c0       	rjmp	.+278    	; 0x424 <DIO_vidwritepinvalue+0x1cc>
			break;
		case 1:
		if (value==0)
 30e:	8b 81       	ldd	r24, Y+3	; 0x03
 310:	88 23       	and	r24, r24
 312:	a1 f4       	brne	.+40     	; 0x33c <DIO_vidwritepinvalue+0xe4>
			clear_bit (PORTB,pin);
 314:	a8 e3       	ldi	r26, 0x38	; 56
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	e8 e3       	ldi	r30, 0x38	; 56
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	48 2f       	mov	r20, r24
 320:	8a 81       	ldd	r24, Y+2	; 0x02
 322:	28 2f       	mov	r18, r24
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 2e       	mov	r0, r18
 32c:	02 c0       	rjmp	.+4      	; 0x332 <DIO_vidwritepinvalue+0xda>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	0a 94       	dec	r0
 334:	e2 f7       	brpl	.-8      	; 0x32e <DIO_vidwritepinvalue+0xd6>
 336:	80 95       	com	r24
 338:	84 23       	and	r24, r20
 33a:	8c 93       	st	X, r24
		if (value==1)
 33c:	8b 81       	ldd	r24, Y+3	; 0x03
 33e:	81 30       	cpi	r24, 0x01	; 1
 340:	09 f0       	breq	.+2      	; 0x344 <DIO_vidwritepinvalue+0xec>
 342:	70 c0       	rjmp	.+224    	; 0x424 <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTB,pin);
 344:	a8 e3       	ldi	r26, 0x38	; 56
 346:	b0 e0       	ldi	r27, 0x00	; 0
 348:	e8 e3       	ldi	r30, 0x38	; 56
 34a:	f0 e0       	ldi	r31, 0x00	; 0
 34c:	80 81       	ld	r24, Z
 34e:	48 2f       	mov	r20, r24
 350:	8a 81       	ldd	r24, Y+2	; 0x02
 352:	28 2f       	mov	r18, r24
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	02 2e       	mov	r0, r18
 35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_vidwritepinvalue+0x10a>
 35e:	88 0f       	add	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	0a 94       	dec	r0
 364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_vidwritepinvalue+0x106>
 366:	84 2b       	or	r24, r20
 368:	8c 93       	st	X, r24
 36a:	5c c0       	rjmp	.+184    	; 0x424 <DIO_vidwritepinvalue+0x1cc>
		break;
	case 2:
		if (value==0)
 36c:	8b 81       	ldd	r24, Y+3	; 0x03
 36e:	88 23       	and	r24, r24
 370:	a1 f4       	brne	.+40     	; 0x39a <DIO_vidwritepinvalue+0x142>
			clear_bit (PORTC,pin);
 372:	a5 e3       	ldi	r26, 0x35	; 53
 374:	b0 e0       	ldi	r27, 0x00	; 0
 376:	e5 e3       	ldi	r30, 0x35	; 53
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	48 2f       	mov	r20, r24
 37e:	8a 81       	ldd	r24, Y+2	; 0x02
 380:	28 2f       	mov	r18, r24
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	02 2e       	mov	r0, r18
 38a:	02 c0       	rjmp	.+4      	; 0x390 <DIO_vidwritepinvalue+0x138>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	0a 94       	dec	r0
 392:	e2 f7       	brpl	.-8      	; 0x38c <DIO_vidwritepinvalue+0x134>
 394:	80 95       	com	r24
 396:	84 23       	and	r24, r20
 398:	8c 93       	st	X, r24
		if (value==1)
 39a:	8b 81       	ldd	r24, Y+3	; 0x03
 39c:	81 30       	cpi	r24, 0x01	; 1
 39e:	09 f0       	breq	.+2      	; 0x3a2 <DIO_vidwritepinvalue+0x14a>
 3a0:	41 c0       	rjmp	.+130    	; 0x424 <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTC,pin);
 3a2:	a5 e3       	ldi	r26, 0x35	; 53
 3a4:	b0 e0       	ldi	r27, 0x00	; 0
 3a6:	e5 e3       	ldi	r30, 0x35	; 53
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	48 2f       	mov	r20, r24
 3ae:	8a 81       	ldd	r24, Y+2	; 0x02
 3b0:	28 2f       	mov	r18, r24
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	81 e0       	ldi	r24, 0x01	; 1
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	02 2e       	mov	r0, r18
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_vidwritepinvalue+0x168>
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	0a 94       	dec	r0
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_vidwritepinvalue+0x164>
 3c4:	84 2b       	or	r24, r20
 3c6:	8c 93       	st	X, r24
 3c8:	2d c0       	rjmp	.+90     	; 0x424 <DIO_vidwritepinvalue+0x1cc>
			break;
		case 3:
		if (value==0)
 3ca:	8b 81       	ldd	r24, Y+3	; 0x03
 3cc:	88 23       	and	r24, r24
 3ce:	a1 f4       	brne	.+40     	; 0x3f8 <DIO_vidwritepinvalue+0x1a0>
			clear_bit(PORTD,pin);
 3d0:	a2 e3       	ldi	r26, 0x32	; 50
 3d2:	b0 e0       	ldi	r27, 0x00	; 0
 3d4:	e2 e3       	ldi	r30, 0x32	; 50
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	80 81       	ld	r24, Z
 3da:	48 2f       	mov	r20, r24
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	28 2f       	mov	r18, r24
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	02 2e       	mov	r0, r18
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <DIO_vidwritepinvalue+0x196>
 3ea:	88 0f       	add	r24, r24
 3ec:	99 1f       	adc	r25, r25
 3ee:	0a 94       	dec	r0
 3f0:	e2 f7       	brpl	.-8      	; 0x3ea <DIO_vidwritepinvalue+0x192>
 3f2:	80 95       	com	r24
 3f4:	84 23       	and	r24, r20
 3f6:	8c 93       	st	X, r24
		if (value==1)
 3f8:	8b 81       	ldd	r24, Y+3	; 0x03
 3fa:	81 30       	cpi	r24, 0x01	; 1
 3fc:	99 f4       	brne	.+38     	; 0x424 <DIO_vidwritepinvalue+0x1cc>
				set_bit (PORTD,pin);
 3fe:	a2 e3       	ldi	r26, 0x32	; 50
 400:	b0 e0       	ldi	r27, 0x00	; 0
 402:	e2 e3       	ldi	r30, 0x32	; 50
 404:	f0 e0       	ldi	r31, 0x00	; 0
 406:	80 81       	ld	r24, Z
 408:	48 2f       	mov	r20, r24
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	28 2f       	mov	r18, r24
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 2e       	mov	r0, r18
 416:	02 c0       	rjmp	.+4      	; 0x41c <DIO_vidwritepinvalue+0x1c4>
 418:	88 0f       	add	r24, r24
 41a:	99 1f       	adc	r25, r25
 41c:	0a 94       	dec	r0
 41e:	e2 f7       	brpl	.-8      	; 0x418 <DIO_vidwritepinvalue+0x1c0>
 420:	84 2b       	or	r24, r20
 422:	8c 93       	st	X, r24
			break;
		default :
			break;
		}
}
 424:	0f 90       	pop	r0
 426:	0f 90       	pop	r0
 428:	0f 90       	pop	r0
 42a:	0f 90       	pop	r0
 42c:	0f 90       	pop	r0
 42e:	cf 91       	pop	r28
 430:	df 91       	pop	r29
 432:	08 95       	ret

00000434 <DIO_u8readpinvalue>:

extern u8 DIO_u8readpinvalue (u8 port, u8 pin)
{
 434:	df 93       	push	r29
 436:	cf 93       	push	r28
 438:	00 d0       	rcall	.+0      	; 0x43a <DIO_u8readpinvalue+0x6>
 43a:	00 d0       	rcall	.+0      	; 0x43c <DIO_u8readpinvalue+0x8>
 43c:	0f 92       	push	r0
 43e:	cd b7       	in	r28, 0x3d	; 61
 440:	de b7       	in	r29, 0x3e	; 62
 442:	89 83       	std	Y+1, r24	; 0x01
 444:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
 446:	89 81       	ldd	r24, Y+1	; 0x01
 448:	28 2f       	mov	r18, r24
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	3d 83       	std	Y+5, r19	; 0x05
 44e:	2c 83       	std	Y+4, r18	; 0x04
 450:	4c 81       	ldd	r20, Y+4	; 0x04
 452:	5d 81       	ldd	r21, Y+5	; 0x05
 454:	41 30       	cpi	r20, 0x01	; 1
 456:	51 05       	cpc	r21, r1
 458:	b1 f1       	breq	.+108    	; 0x4c6 <DIO_u8readpinvalue+0x92>
 45a:	8c 81       	ldd	r24, Y+4	; 0x04
 45c:	9d 81       	ldd	r25, Y+5	; 0x05
 45e:	82 30       	cpi	r24, 0x02	; 2
 460:	91 05       	cpc	r25, r1
 462:	34 f4       	brge	.+12     	; 0x470 <DIO_u8readpinvalue+0x3c>
 464:	2c 81       	ldd	r18, Y+4	; 0x04
 466:	3d 81       	ldd	r19, Y+5	; 0x05
 468:	21 15       	cp	r18, r1
 46a:	31 05       	cpc	r19, r1
 46c:	71 f0       	breq	.+28     	; 0x48a <DIO_u8readpinvalue+0x56>
 46e:	85 c0       	rjmp	.+266    	; 0x57a <DIO_u8readpinvalue+0x146>
 470:	4c 81       	ldd	r20, Y+4	; 0x04
 472:	5d 81       	ldd	r21, Y+5	; 0x05
 474:	42 30       	cpi	r20, 0x02	; 2
 476:	51 05       	cpc	r21, r1
 478:	09 f4       	brne	.+2      	; 0x47c <DIO_u8readpinvalue+0x48>
 47a:	43 c0       	rjmp	.+134    	; 0x502 <DIO_u8readpinvalue+0xce>
 47c:	8c 81       	ldd	r24, Y+4	; 0x04
 47e:	9d 81       	ldd	r25, Y+5	; 0x05
 480:	83 30       	cpi	r24, 0x03	; 3
 482:	91 05       	cpc	r25, r1
 484:	09 f4       	brne	.+2      	; 0x488 <DIO_u8readpinvalue+0x54>
 486:	5b c0       	rjmp	.+182    	; 0x53e <DIO_u8readpinvalue+0x10a>
 488:	78 c0       	rjmp	.+240    	; 0x57a <DIO_u8readpinvalue+0x146>
	{
	case 0 :
		return get_bit (PINA,pin);
 48a:	e9 e3       	ldi	r30, 0x39	; 57
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	48 2f       	mov	r20, r24
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	8a 81       	ldd	r24, Y+2	; 0x02
 496:	28 2f       	mov	r18, r24
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <DIO_u8readpinvalue+0x70>
 4a0:	88 0f       	add	r24, r24
 4a2:	99 1f       	adc	r25, r25
 4a4:	2a 95       	dec	r18
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <DIO_u8readpinvalue+0x6c>
 4a8:	9a 01       	movw	r18, r20
 4aa:	28 23       	and	r18, r24
 4ac:	39 23       	and	r19, r25
 4ae:	8a 81       	ldd	r24, Y+2	; 0x02
 4b0:	88 2f       	mov	r24, r24
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	a9 01       	movw	r20, r18
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <DIO_u8readpinvalue+0x88>
 4b8:	55 95       	asr	r21
 4ba:	47 95       	ror	r20
 4bc:	8a 95       	dec	r24
 4be:	e2 f7       	brpl	.-8      	; 0x4b8 <DIO_u8readpinvalue+0x84>
 4c0:	ca 01       	movw	r24, r20
 4c2:	8b 83       	std	Y+3, r24	; 0x03
 4c4:	5c c0       	rjmp	.+184    	; 0x57e <DIO_u8readpinvalue+0x14a>
		break;
	case 1 :
		return get_bit (PINB,pin);
 4c6:	e6 e3       	ldi	r30, 0x36	; 54
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	80 81       	ld	r24, Z
 4cc:	48 2f       	mov	r20, r24
 4ce:	50 e0       	ldi	r21, 0x00	; 0
 4d0:	8a 81       	ldd	r24, Y+2	; 0x02
 4d2:	28 2f       	mov	r18, r24
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <DIO_u8readpinvalue+0xac>
 4dc:	88 0f       	add	r24, r24
 4de:	99 1f       	adc	r25, r25
 4e0:	2a 95       	dec	r18
 4e2:	e2 f7       	brpl	.-8      	; 0x4dc <DIO_u8readpinvalue+0xa8>
 4e4:	9a 01       	movw	r18, r20
 4e6:	28 23       	and	r18, r24
 4e8:	39 23       	and	r19, r25
 4ea:	8a 81       	ldd	r24, Y+2	; 0x02
 4ec:	88 2f       	mov	r24, r24
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	a9 01       	movw	r20, r18
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <DIO_u8readpinvalue+0xc4>
 4f4:	55 95       	asr	r21
 4f6:	47 95       	ror	r20
 4f8:	8a 95       	dec	r24
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <DIO_u8readpinvalue+0xc0>
 4fc:	ca 01       	movw	r24, r20
 4fe:	8b 83       	std	Y+3, r24	; 0x03
 500:	3e c0       	rjmp	.+124    	; 0x57e <DIO_u8readpinvalue+0x14a>
		break;
	case 2 :
		return get_bit (PINC,pin);
 502:	e3 e3       	ldi	r30, 0x33	; 51
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	80 81       	ld	r24, Z
 508:	48 2f       	mov	r20, r24
 50a:	50 e0       	ldi	r21, 0x00	; 0
 50c:	8a 81       	ldd	r24, Y+2	; 0x02
 50e:	28 2f       	mov	r18, r24
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	02 c0       	rjmp	.+4      	; 0x51c <DIO_u8readpinvalue+0xe8>
 518:	88 0f       	add	r24, r24
 51a:	99 1f       	adc	r25, r25
 51c:	2a 95       	dec	r18
 51e:	e2 f7       	brpl	.-8      	; 0x518 <DIO_u8readpinvalue+0xe4>
 520:	9a 01       	movw	r18, r20
 522:	28 23       	and	r18, r24
 524:	39 23       	and	r19, r25
 526:	8a 81       	ldd	r24, Y+2	; 0x02
 528:	88 2f       	mov	r24, r24
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	a9 01       	movw	r20, r18
 52e:	02 c0       	rjmp	.+4      	; 0x534 <DIO_u8readpinvalue+0x100>
 530:	55 95       	asr	r21
 532:	47 95       	ror	r20
 534:	8a 95       	dec	r24
 536:	e2 f7       	brpl	.-8      	; 0x530 <DIO_u8readpinvalue+0xfc>
 538:	ca 01       	movw	r24, r20
 53a:	8b 83       	std	Y+3, r24	; 0x03
 53c:	20 c0       	rjmp	.+64     	; 0x57e <DIO_u8readpinvalue+0x14a>
		break;
	case 3 :
		return  get_bit (PIND,pin);
 53e:	e0 e3       	ldi	r30, 0x30	; 48
 540:	f0 e0       	ldi	r31, 0x00	; 0
 542:	80 81       	ld	r24, Z
 544:	48 2f       	mov	r20, r24
 546:	50 e0       	ldi	r21, 0x00	; 0
 548:	8a 81       	ldd	r24, Y+2	; 0x02
 54a:	28 2f       	mov	r18, r24
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	02 c0       	rjmp	.+4      	; 0x558 <DIO_u8readpinvalue+0x124>
 554:	88 0f       	add	r24, r24
 556:	99 1f       	adc	r25, r25
 558:	2a 95       	dec	r18
 55a:	e2 f7       	brpl	.-8      	; 0x554 <DIO_u8readpinvalue+0x120>
 55c:	9a 01       	movw	r18, r20
 55e:	28 23       	and	r18, r24
 560:	39 23       	and	r19, r25
 562:	8a 81       	ldd	r24, Y+2	; 0x02
 564:	88 2f       	mov	r24, r24
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	a9 01       	movw	r20, r18
 56a:	02 c0       	rjmp	.+4      	; 0x570 <DIO_u8readpinvalue+0x13c>
 56c:	55 95       	asr	r21
 56e:	47 95       	ror	r20
 570:	8a 95       	dec	r24
 572:	e2 f7       	brpl	.-8      	; 0x56c <DIO_u8readpinvalue+0x138>
 574:	ca 01       	movw	r24, r20
 576:	8b 83       	std	Y+3, r24	; 0x03
 578:	02 c0       	rjmp	.+4      	; 0x57e <DIO_u8readpinvalue+0x14a>
	break;
	default :
		return 2;
 57a:	52 e0       	ldi	r21, 0x02	; 2
 57c:	5b 83       	std	Y+3, r21	; 0x03
 57e:	8b 81       	ldd	r24, Y+3	; 0x03
	}
}
 580:	0f 90       	pop	r0
 582:	0f 90       	pop	r0
 584:	0f 90       	pop	r0
 586:	0f 90       	pop	r0
 588:	0f 90       	pop	r0
 58a:	cf 91       	pop	r28
 58c:	df 91       	pop	r29
 58e:	08 95       	ret

00000590 <DIO_vidsetportdir>:
	extern void DIO_vidsetportdir(u8 port,  u8 dir)
	{
 590:	df 93       	push	r29
 592:	cf 93       	push	r28
 594:	00 d0       	rcall	.+0      	; 0x596 <DIO_vidsetportdir+0x6>
 596:	00 d0       	rcall	.+0      	; 0x598 <DIO_vidsetportdir+0x8>
 598:	cd b7       	in	r28, 0x3d	; 61
 59a:	de b7       	in	r29, 0x3e	; 62
 59c:	89 83       	std	Y+1, r24	; 0x01
 59e:	6a 83       	std	Y+2, r22	; 0x02
		switch (port)
 5a0:	89 81       	ldd	r24, Y+1	; 0x01
 5a2:	28 2f       	mov	r18, r24
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	3c 83       	std	Y+4, r19	; 0x04
 5a8:	2b 83       	std	Y+3, r18	; 0x03
 5aa:	8b 81       	ldd	r24, Y+3	; 0x03
 5ac:	9c 81       	ldd	r25, Y+4	; 0x04
 5ae:	81 30       	cpi	r24, 0x01	; 1
 5b0:	91 05       	cpc	r25, r1
 5b2:	d1 f0       	breq	.+52     	; 0x5e8 <DIO_vidsetportdir+0x58>
 5b4:	2b 81       	ldd	r18, Y+3	; 0x03
 5b6:	3c 81       	ldd	r19, Y+4	; 0x04
 5b8:	22 30       	cpi	r18, 0x02	; 2
 5ba:	31 05       	cpc	r19, r1
 5bc:	2c f4       	brge	.+10     	; 0x5c8 <DIO_vidsetportdir+0x38>
 5be:	8b 81       	ldd	r24, Y+3	; 0x03
 5c0:	9c 81       	ldd	r25, Y+4	; 0x04
 5c2:	00 97       	sbiw	r24, 0x00	; 0
 5c4:	61 f0       	breq	.+24     	; 0x5de <DIO_vidsetportdir+0x4e>
 5c6:	1e c0       	rjmp	.+60     	; 0x604 <DIO_vidsetportdir+0x74>
 5c8:	2b 81       	ldd	r18, Y+3	; 0x03
 5ca:	3c 81       	ldd	r19, Y+4	; 0x04
 5cc:	22 30       	cpi	r18, 0x02	; 2
 5ce:	31 05       	cpc	r19, r1
 5d0:	81 f0       	breq	.+32     	; 0x5f2 <DIO_vidsetportdir+0x62>
 5d2:	8b 81       	ldd	r24, Y+3	; 0x03
 5d4:	9c 81       	ldd	r25, Y+4	; 0x04
 5d6:	83 30       	cpi	r24, 0x03	; 3
 5d8:	91 05       	cpc	r25, r1
 5da:	81 f0       	breq	.+32     	; 0x5fc <DIO_vidsetportdir+0x6c>
 5dc:	13 c0       	rjmp	.+38     	; 0x604 <DIO_vidsetportdir+0x74>
		{
		case 0:
			DDRA=dir;
 5de:	ea e3       	ldi	r30, 0x3A	; 58
 5e0:	f0 e0       	ldi	r31, 0x00	; 0
 5e2:	8a 81       	ldd	r24, Y+2	; 0x02
 5e4:	80 83       	st	Z, r24
 5e6:	0e c0       	rjmp	.+28     	; 0x604 <DIO_vidsetportdir+0x74>
			break;
		case 1:
			DDRB=dir;
 5e8:	e7 e3       	ldi	r30, 0x37	; 55
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	8a 81       	ldd	r24, Y+2	; 0x02
 5ee:	80 83       	st	Z, r24
 5f0:	09 c0       	rjmp	.+18     	; 0x604 <DIO_vidsetportdir+0x74>
			break;
		case 2:
			DDRC=dir;
 5f2:	e4 e3       	ldi	r30, 0x34	; 52
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	8a 81       	ldd	r24, Y+2	; 0x02
 5f8:	80 83       	st	Z, r24
 5fa:	04 c0       	rjmp	.+8      	; 0x604 <DIO_vidsetportdir+0x74>
			break;
		case 3:
			DDRD=dir;
 5fc:	e1 e3       	ldi	r30, 0x31	; 49
 5fe:	f0 e0       	ldi	r31, 0x00	; 0
 600:	8a 81       	ldd	r24, Y+2	; 0x02
 602:	80 83       	st	Z, r24
			break;
		}
	}
 604:	0f 90       	pop	r0
 606:	0f 90       	pop	r0
 608:	0f 90       	pop	r0
 60a:	0f 90       	pop	r0
 60c:	cf 91       	pop	r28
 60e:	df 91       	pop	r29
 610:	08 95       	ret

00000612 <DIO_vidwriteportvalues>:
	extern void DIO_vidwriteportvalues(u8 port, u8 value)
	{
 612:	df 93       	push	r29
 614:	cf 93       	push	r28
 616:	00 d0       	rcall	.+0      	; 0x618 <DIO_vidwriteportvalues+0x6>
 618:	00 d0       	rcall	.+0      	; 0x61a <DIO_vidwriteportvalues+0x8>
 61a:	cd b7       	in	r28, 0x3d	; 61
 61c:	de b7       	in	r29, 0x3e	; 62
 61e:	89 83       	std	Y+1, r24	; 0x01
 620:	6a 83       	std	Y+2, r22	; 0x02
		switch (port)
 622:	89 81       	ldd	r24, Y+1	; 0x01
 624:	28 2f       	mov	r18, r24
 626:	30 e0       	ldi	r19, 0x00	; 0
 628:	3c 83       	std	Y+4, r19	; 0x04
 62a:	2b 83       	std	Y+3, r18	; 0x03
 62c:	8b 81       	ldd	r24, Y+3	; 0x03
 62e:	9c 81       	ldd	r25, Y+4	; 0x04
 630:	81 30       	cpi	r24, 0x01	; 1
 632:	91 05       	cpc	r25, r1
 634:	d1 f0       	breq	.+52     	; 0x66a <DIO_vidwriteportvalues+0x58>
 636:	2b 81       	ldd	r18, Y+3	; 0x03
 638:	3c 81       	ldd	r19, Y+4	; 0x04
 63a:	22 30       	cpi	r18, 0x02	; 2
 63c:	31 05       	cpc	r19, r1
 63e:	2c f4       	brge	.+10     	; 0x64a <DIO_vidwriteportvalues+0x38>
 640:	8b 81       	ldd	r24, Y+3	; 0x03
 642:	9c 81       	ldd	r25, Y+4	; 0x04
 644:	00 97       	sbiw	r24, 0x00	; 0
 646:	61 f0       	breq	.+24     	; 0x660 <DIO_vidwriteportvalues+0x4e>
 648:	1e c0       	rjmp	.+60     	; 0x686 <DIO_vidwriteportvalues+0x74>
 64a:	2b 81       	ldd	r18, Y+3	; 0x03
 64c:	3c 81       	ldd	r19, Y+4	; 0x04
 64e:	22 30       	cpi	r18, 0x02	; 2
 650:	31 05       	cpc	r19, r1
 652:	81 f0       	breq	.+32     	; 0x674 <DIO_vidwriteportvalues+0x62>
 654:	8b 81       	ldd	r24, Y+3	; 0x03
 656:	9c 81       	ldd	r25, Y+4	; 0x04
 658:	83 30       	cpi	r24, 0x03	; 3
 65a:	91 05       	cpc	r25, r1
 65c:	81 f0       	breq	.+32     	; 0x67e <DIO_vidwriteportvalues+0x6c>
 65e:	13 c0       	rjmp	.+38     	; 0x686 <DIO_vidwriteportvalues+0x74>
		{
		case 0:
			PORTA=value;
 660:	eb e3       	ldi	r30, 0x3B	; 59
 662:	f0 e0       	ldi	r31, 0x00	; 0
 664:	8a 81       	ldd	r24, Y+2	; 0x02
 666:	80 83       	st	Z, r24
 668:	0e c0       	rjmp	.+28     	; 0x686 <DIO_vidwriteportvalues+0x74>
			break;
		case 1:
			PORTB=value;
 66a:	e8 e3       	ldi	r30, 0x38	; 56
 66c:	f0 e0       	ldi	r31, 0x00	; 0
 66e:	8a 81       	ldd	r24, Y+2	; 0x02
 670:	80 83       	st	Z, r24
 672:	09 c0       	rjmp	.+18     	; 0x686 <DIO_vidwriteportvalues+0x74>
			break;
		case 2:
			PORTC=value;
 674:	e5 e3       	ldi	r30, 0x35	; 53
 676:	f0 e0       	ldi	r31, 0x00	; 0
 678:	8a 81       	ldd	r24, Y+2	; 0x02
 67a:	80 83       	st	Z, r24
 67c:	04 c0       	rjmp	.+8      	; 0x686 <DIO_vidwriteportvalues+0x74>
			break;

		case 3:
			PORTD=value;
 67e:	e2 e3       	ldi	r30, 0x32	; 50
 680:	f0 e0       	ldi	r31, 0x00	; 0
 682:	8a 81       	ldd	r24, Y+2	; 0x02
 684:	80 83       	st	Z, r24
			break;

		}
	}
 686:	0f 90       	pop	r0
 688:	0f 90       	pop	r0
 68a:	0f 90       	pop	r0
 68c:	0f 90       	pop	r0
 68e:	cf 91       	pop	r28
 690:	df 91       	pop	r29
 692:	08 95       	ret

00000694 <keypad_vidInit>:
#include"DIO.h"
#include"keypad.h"
#include "keypad_cfg.h"
u8 pressedkey;
void keypad_vidInit (void)
{
 694:	df 93       	push	r29
 696:	cf 93       	push	r28
 698:	cd b7       	in	r28, 0x3d	; 61
 69a:	de b7       	in	r29, 0x3e	; 62
	DIO_vidsetportdir(keypad_port,0b11110000);
 69c:	80 e0       	ldi	r24, 0x00	; 0
 69e:	60 ef       	ldi	r22, 0xF0	; 240
 6a0:	0e 94 c8 02 	call	0x590	; 0x590 <DIO_vidsetportdir>
	DIO_vidwriteportvalues(keypad_port,0b11111111);
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	6f ef       	ldi	r22, 0xFF	; 255
 6a8:	0e 94 09 03 	call	0x612	; 0x612 <DIO_vidwriteportvalues>
}
 6ac:	cf 91       	pop	r28
 6ae:	df 91       	pop	r29
 6b0:	08 95       	ret

000006b2 <keypad_vidGetPressedKey>:
void keypad_vidGetPressedKey(void)
{
 6b2:	df 93       	push	r29
 6b4:	cf 93       	push	r28
 6b6:	cd b7       	in	r28, 0x3d	; 61
 6b8:	de b7       	in	r29, 0x3e	; 62
DIO_vidwritepinvalue(keypad_port,R1,low);
 6ba:	80 e0       	ldi	r24, 0x00	; 0
 6bc:	67 e0       	ldi	r22, 0x07	; 7
 6be:	40 e0       	ldi	r20, 0x00	; 0
 6c0:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
DIO_vidwritepinvalue(keypad_port,R2,high);
 6c4:	80 e0       	ldi	r24, 0x00	; 0
 6c6:	66 e0       	ldi	r22, 0x06	; 6
 6c8:	41 e0       	ldi	r20, 0x01	; 1
 6ca:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
DIO_vidwritepinvalue(keypad_port,R3,high);
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	65 e0       	ldi	r22, 0x05	; 5
 6d2:	41 e0       	ldi	r20, 0x01	; 1
 6d4:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
DIO_vidwritepinvalue(keypad_port,R4,high);
 6d8:	80 e0       	ldi	r24, 0x00	; 0
 6da:	64 e0       	ldi	r22, 0x04	; 4
 6dc:	41 e0       	ldi	r20, 0x01	; 1
 6de:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
DIO_vidsetpindir(b,pin0,output);
 6e2:	81 e0       	ldi	r24, 0x01	; 1
 6e4:	60 e0       	ldi	r22, 0x00	; 0
 6e6:	41 e0       	ldi	r20, 0x01	; 1
 6e8:	0e 94 3e 00 	call	0x7c	; 0x7c <DIO_vidsetpindir>

if (DIO_u8readpinvalue(keypad_port,c1)==0)
 6ec:	80 e0       	ldi	r24, 0x00	; 0
 6ee:	60 e0       	ldi	r22, 0x00	; 0
 6f0:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 6f4:	88 23       	and	r24, r24
 6f6:	41 f4       	brne	.+16     	; 0x708 <keypad_vidGetPressedKey+0x56>
{
	DIO_vidwritepinvalue (b, pin0, high);
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	60 e0       	ldi	r22, 0x00	; 0
 6fc:	41 e0       	ldi	r20, 0x01	; 1
 6fe:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=0;
 702:	10 92 60 00 	sts	0x0060, r1
 706:	2c c0       	rjmp	.+88     	; 0x760 <keypad_vidGetPressedKey+0xae>
}
else if(DIO_u8readpinvalue(keypad_port,c2)==0)
 708:	80 e0       	ldi	r24, 0x00	; 0
 70a:	61 e0       	ldi	r22, 0x01	; 1
 70c:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 710:	88 23       	and	r24, r24
 712:	49 f4       	brne	.+18     	; 0x726 <keypad_vidGetPressedKey+0x74>
{
	DIO_vidwritepinvalue (b, pin0, low);
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	60 e0       	ldi	r22, 0x00	; 0
 718:	40 e0       	ldi	r20, 0x00	; 0
 71a:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=1;
 71e:	81 e0       	ldi	r24, 0x01	; 1
 720:	80 93 60 00 	sts	0x0060, r24
 724:	1d c0       	rjmp	.+58     	; 0x760 <keypad_vidGetPressedKey+0xae>
}
else if(DIO_u8readpinvalue(keypad_port,c3)==0)
 726:	80 e0       	ldi	r24, 0x00	; 0
 728:	62 e0       	ldi	r22, 0x02	; 2
 72a:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 72e:	88 23       	and	r24, r24
 730:	49 f4       	brne	.+18     	; 0x744 <keypad_vidGetPressedKey+0x92>

{
	DIO_vidwritepinvalue (b, pin0, high);
 732:	81 e0       	ldi	r24, 0x01	; 1
 734:	60 e0       	ldi	r22, 0x00	; 0
 736:	41 e0       	ldi	r20, 0x01	; 1
 738:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=2;
 73c:	82 e0       	ldi	r24, 0x02	; 2
 73e:	80 93 60 00 	sts	0x0060, r24
 742:	0e c0       	rjmp	.+28     	; 0x760 <keypad_vidGetPressedKey+0xae>
}
else if(DIO_u8readpinvalue(keypad_port,c4)==0)
 744:	80 e0       	ldi	r24, 0x00	; 0
 746:	63 e0       	ldi	r22, 0x03	; 3
 748:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 74c:	88 23       	and	r24, r24
 74e:	41 f4       	brne	.+16     	; 0x760 <keypad_vidGetPressedKey+0xae>

{DIO_vidwritepinvalue (b, pin0, low);
 750:	81 e0       	ldi	r24, 0x01	; 1
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	40 e0       	ldi	r20, 0x00	; 0
 756:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=3;
 75a:	83 e0       	ldi	r24, 0x03	; 3
 75c:	80 93 60 00 	sts	0x0060, r24
}
DIO_vidwritepinvalue(keypad_port,R1,high);
 760:	80 e0       	ldi	r24, 0x00	; 0
 762:	67 e0       	ldi	r22, 0x07	; 7
 764:	41 e0       	ldi	r20, 0x01	; 1
 766:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
DIO_vidwritepinvalue(keypad_port,R2,low);
 76a:	80 e0       	ldi	r24, 0x00	; 0
 76c:	66 e0       	ldi	r22, 0x06	; 6
 76e:	40 e0       	ldi	r20, 0x00	; 0
 770:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
DIO_vidwritepinvalue(keypad_port,R3,high);
 774:	80 e0       	ldi	r24, 0x00	; 0
 776:	65 e0       	ldi	r22, 0x05	; 5
 778:	41 e0       	ldi	r20, 0x01	; 1
 77a:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
DIO_vidwritepinvalue(keypad_port,R4,high);
 77e:	80 e0       	ldi	r24, 0x00	; 0
 780:	64 e0       	ldi	r22, 0x04	; 4
 782:	41 e0       	ldi	r20, 0x01	; 1
 784:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
if (DIO_u8readpinvalue(keypad_port,c1)==0)
 788:	80 e0       	ldi	r24, 0x00	; 0
 78a:	60 e0       	ldi	r22, 0x00	; 0
 78c:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 790:	88 23       	and	r24, r24
 792:	41 f4       	brne	.+16     	; 0x7a4 <keypad_vidGetPressedKey+0xf2>
{DIO_vidwritepinvalue (b, pin0, high);
 794:	81 e0       	ldi	r24, 0x01	; 1
 796:	60 e0       	ldi	r22, 0x00	; 0
 798:	41 e0       	ldi	r20, 0x01	; 1
 79a:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=0;
 79e:	10 92 60 00 	sts	0x0060, r1
 7a2:	2c c0       	rjmp	.+88     	; 0x7fc <keypad_vidGetPressedKey+0x14a>
}
else if(DIO_u8readpinvalue(keypad_port,c2)==0)
 7a4:	80 e0       	ldi	r24, 0x00	; 0
 7a6:	61 e0       	ldi	r22, 0x01	; 1
 7a8:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 7ac:	88 23       	and	r24, r24
 7ae:	49 f4       	brne	.+18     	; 0x7c2 <keypad_vidGetPressedKey+0x110>
{DIO_vidwritepinvalue (b, pin0, low);
 7b0:	81 e0       	ldi	r24, 0x01	; 1
 7b2:	60 e0       	ldi	r22, 0x00	; 0
 7b4:	40 e0       	ldi	r20, 0x00	; 0
 7b6:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=1;
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	80 93 60 00 	sts	0x0060, r24
 7c0:	1d c0       	rjmp	.+58     	; 0x7fc <keypad_vidGetPressedKey+0x14a>
}
else if(DIO_u8readpinvalue(keypad_port,c3)==0)
 7c2:	80 e0       	ldi	r24, 0x00	; 0
 7c4:	62 e0       	ldi	r22, 0x02	; 2
 7c6:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 7ca:	88 23       	and	r24, r24
 7cc:	49 f4       	brne	.+18     	; 0x7e0 <keypad_vidGetPressedKey+0x12e>
{DIO_vidwritepinvalue (b, pin0, high);
 7ce:	81 e0       	ldi	r24, 0x01	; 1
 7d0:	60 e0       	ldi	r22, 0x00	; 0
 7d2:	41 e0       	ldi	r20, 0x01	; 1
 7d4:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=2;
 7d8:	82 e0       	ldi	r24, 0x02	; 2
 7da:	80 93 60 00 	sts	0x0060, r24
 7de:	0e c0       	rjmp	.+28     	; 0x7fc <keypad_vidGetPressedKey+0x14a>
}
else if(DIO_u8readpinvalue(keypad_port,c4)==0)
 7e0:	80 e0       	ldi	r24, 0x00	; 0
 7e2:	63 e0       	ldi	r22, 0x03	; 3
 7e4:	0e 94 1a 02 	call	0x434	; 0x434 <DIO_u8readpinvalue>
 7e8:	88 23       	and	r24, r24
 7ea:	41 f4       	brne	.+16     	; 0x7fc <keypad_vidGetPressedKey+0x14a>
{DIO_vidwritepinvalue (b, pin0, low);
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	60 e0       	ldi	r22, 0x00	; 0
 7f0:	40 e0       	ldi	r20, 0x00	; 0
 7f2:	0e 94 2c 01 	call	0x258	; 0x258 <DIO_vidwritepinvalue>
	pressedkey=3;
 7f6:	83 e0       	ldi	r24, 0x03	; 3
 7f8:	80 93 60 00 	sts	0x0060, r24
//}
//else if(DIO_u8readpinvalue(keypad_port,c4)==0)
//{DIO_vidwritepinvalue (PORTB, pin0, low);
//	pressedkey=3;
//}
}
 7fc:	cf 91       	pop	r28
 7fe:	df 91       	pop	r29
 800:	08 95       	ret

00000802 <main>:
#include "registers.h"
#include"utils.h"
#include"DIO.h"
#include"keypad.h"
	void main (void)
	{
 802:	df 93       	push	r29
 804:	cf 93       	push	r28
 806:	cd b7       	in	r28, 0x3d	; 61
 808:	de b7       	in	r29, 0x3e	; 62
		 keypad_vidInit();
 80a:	0e 94 4a 03 	call	0x694	; 0x694 <keypad_vidInit>
		 while (1)
		 {
			 keypad_vidGetPressedKey();
 80e:	0e 94 59 03 	call	0x6b2	; 0x6b2 <keypad_vidGetPressedKey>
 812:	fd cf       	rjmp	.-6      	; 0x80e <main+0xc>

00000814 <_exit>:
 814:	f8 94       	cli

00000816 <__stop_program>:
 816:	ff cf       	rjmp	.-2      	; 0x816 <__stop_program>
