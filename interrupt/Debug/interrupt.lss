
interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000074a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000780  00000000  00000000  000007a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000003bb  00000000  00000000  00000f20  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__vector_1>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 92 03 	call	0x724	; 0x724 <main>
  64:	0c 94 a3 03 	jmp	0x746	; 0x746 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DEI_vidInit>:
#include "registers.h"
#include"utils.h"
#include "DIO.h"
#include"DEI.h"
extern void DEI_vidInit(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	set_bit(SREG,7);
  74:	af e5       	ldi	r26, 0x5F	; 95
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ef e5       	ldi	r30, 0x5F	; 95
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	80 68       	ori	r24, 0x80	; 128
  80:	8c 93       	st	X, r24
	set_bit(MCUCR,1);
  82:	a5 e5       	ldi	r26, 0x55	; 85
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	e5 e5       	ldi	r30, 0x55	; 85
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	8c 93       	st	X, r24
	clear_bit(MCUCR,0);
  90:	a5 e5       	ldi	r26, 0x55	; 85
  92:	b0 e0       	ldi	r27, 0x00	; 0
  94:	e5 e5       	ldi	r30, 0x55	; 85
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	80 81       	ld	r24, Z
  9a:	8e 7f       	andi	r24, 0xFE	; 254
  9c:	8c 93       	st	X, r24
	set_bit(GICR,6);
  9e:	ab e5       	ldi	r26, 0x5B	; 91
  a0:	b0 e0       	ldi	r27, 0x00	; 0
  a2:	eb e5       	ldi	r30, 0x5B	; 91
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	80 64       	ori	r24, 0x40	; 64
  aa:	8c 93       	st	X, r24
}
  ac:	cf 91       	pop	r28
  ae:	df 91       	pop	r29
  b0:	08 95       	ret

000000b2 <__vector_1>:
void __vector_1 (void) __attribute__((signal,__INTR_ATTRS));
void __vector_1 (void)
{
  b2:	1f 92       	push	r1
  b4:	0f 92       	push	r0
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	0f 92       	push	r0
  ba:	11 24       	eor	r1, r1
  bc:	2f 93       	push	r18
  be:	3f 93       	push	r19
  c0:	4f 93       	push	r20
  c2:	5f 93       	push	r21
  c4:	6f 93       	push	r22
  c6:	7f 93       	push	r23
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
  cc:	af 93       	push	r26
  ce:	bf 93       	push	r27
  d0:	ef 93       	push	r30
  d2:	ff 93       	push	r31
  d4:	df 93       	push	r29
  d6:	cf 93       	push	r28
  d8:	cd b7       	in	r28, 0x3d	; 61
  da:	de b7       	in	r29, 0x3e	; 62
	DIO_vidwritepinvalue(a,pin0,high);
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	60 e0       	ldi	r22, 0x00	; 0
  e0:	41 e0       	ldi	r20, 0x01	; 1
  e2:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DIO_vidwritepinvalue>
}
  e6:	cf 91       	pop	r28
  e8:	df 91       	pop	r29
  ea:	ff 91       	pop	r31
  ec:	ef 91       	pop	r30
  ee:	bf 91       	pop	r27
  f0:	af 91       	pop	r26
  f2:	9f 91       	pop	r25
  f4:	8f 91       	pop	r24
  f6:	7f 91       	pop	r23
  f8:	6f 91       	pop	r22
  fa:	5f 91       	pop	r21
  fc:	4f 91       	pop	r20
  fe:	3f 91       	pop	r19
 100:	2f 91       	pop	r18
 102:	0f 90       	pop	r0
 104:	0f be       	out	0x3f, r0	; 63
 106:	0f 90       	pop	r0
 108:	1f 90       	pop	r1
 10a:	18 95       	reti

0000010c <DIO_vidsetpindir>:
#include "std_types.h"
#include "registers.h"
#include"utils.h"
#include"DIO.h"
extern void DIO_vidsetpindir (u8 port ,u8 pin , u8 dir)
{
 10c:	df 93       	push	r29
 10e:	cf 93       	push	r28
 110:	00 d0       	rcall	.+0      	; 0x112 <DIO_vidsetpindir+0x6>
 112:	00 d0       	rcall	.+0      	; 0x114 <DIO_vidsetpindir+0x8>
 114:	0f 92       	push	r0
 116:	cd b7       	in	r28, 0x3d	; 61
 118:	de b7       	in	r29, 0x3e	; 62
 11a:	89 83       	std	Y+1, r24	; 0x01
 11c:	6a 83       	std	Y+2, r22	; 0x02
 11e:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
 120:	89 81       	ldd	r24, Y+1	; 0x01
 122:	28 2f       	mov	r18, r24
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	3d 83       	std	Y+5, r19	; 0x05
 128:	2c 83       	std	Y+4, r18	; 0x04
 12a:	8c 81       	ldd	r24, Y+4	; 0x04
 12c:	9d 81       	ldd	r25, Y+5	; 0x05
 12e:	81 30       	cpi	r24, 0x01	; 1
 130:	91 05       	cpc	r25, r1
 132:	09 f4       	brne	.+2      	; 0x136 <DIO_vidsetpindir+0x2a>
 134:	46 c0       	rjmp	.+140    	; 0x1c2 <DIO_vidsetpindir+0xb6>
 136:	2c 81       	ldd	r18, Y+4	; 0x04
 138:	3d 81       	ldd	r19, Y+5	; 0x05
 13a:	22 30       	cpi	r18, 0x02	; 2
 13c:	31 05       	cpc	r19, r1
 13e:	2c f4       	brge	.+10     	; 0x14a <DIO_vidsetpindir+0x3e>
 140:	8c 81       	ldd	r24, Y+4	; 0x04
 142:	9d 81       	ldd	r25, Y+5	; 0x05
 144:	00 97       	sbiw	r24, 0x00	; 0
 146:	71 f0       	breq	.+28     	; 0x164 <DIO_vidsetpindir+0x58>
 148:	c7 c0       	rjmp	.+398    	; 0x2d8 <DIO_vidsetpindir+0x1cc>
 14a:	2c 81       	ldd	r18, Y+4	; 0x04
 14c:	3d 81       	ldd	r19, Y+5	; 0x05
 14e:	22 30       	cpi	r18, 0x02	; 2
 150:	31 05       	cpc	r19, r1
 152:	09 f4       	brne	.+2      	; 0x156 <DIO_vidsetpindir+0x4a>
 154:	65 c0       	rjmp	.+202    	; 0x220 <DIO_vidsetpindir+0x114>
 156:	8c 81       	ldd	r24, Y+4	; 0x04
 158:	9d 81       	ldd	r25, Y+5	; 0x05
 15a:	83 30       	cpi	r24, 0x03	; 3
 15c:	91 05       	cpc	r25, r1
 15e:	09 f4       	brne	.+2      	; 0x162 <DIO_vidsetpindir+0x56>
 160:	8e c0       	rjmp	.+284    	; 0x27e <DIO_vidsetpindir+0x172>
 162:	ba c0       	rjmp	.+372    	; 0x2d8 <DIO_vidsetpindir+0x1cc>
	{
	case 0:
		if (dir==0)
 164:	8b 81       	ldd	r24, Y+3	; 0x03
 166:	88 23       	and	r24, r24
 168:	a1 f4       	brne	.+40     	; 0x192 <DIO_vidsetpindir+0x86>
			clear_bit(DDRA,pin);
 16a:	aa e3       	ldi	r26, 0x3A	; 58
 16c:	b0 e0       	ldi	r27, 0x00	; 0
 16e:	ea e3       	ldi	r30, 0x3A	; 58
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	48 2f       	mov	r20, r24
 176:	8a 81       	ldd	r24, Y+2	; 0x02
 178:	28 2f       	mov	r18, r24
 17a:	30 e0       	ldi	r19, 0x00	; 0
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	02 2e       	mov	r0, r18
 182:	02 c0       	rjmp	.+4      	; 0x188 <DIO_vidsetpindir+0x7c>
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	0a 94       	dec	r0
 18a:	e2 f7       	brpl	.-8      	; 0x184 <DIO_vidsetpindir+0x78>
 18c:	80 95       	com	r24
 18e:	84 23       	and	r24, r20
 190:	8c 93       	st	X, r24
		if (dir==1)
 192:	8b 81       	ldd	r24, Y+3	; 0x03
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	09 f0       	breq	.+2      	; 0x19a <DIO_vidsetpindir+0x8e>
 198:	9f c0       	rjmp	.+318    	; 0x2d8 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRA,pin);
 19a:	aa e3       	ldi	r26, 0x3A	; 58
 19c:	b0 e0       	ldi	r27, 0x00	; 0
 19e:	ea e3       	ldi	r30, 0x3A	; 58
 1a0:	f0 e0       	ldi	r31, 0x00	; 0
 1a2:	80 81       	ld	r24, Z
 1a4:	48 2f       	mov	r20, r24
 1a6:	8a 81       	ldd	r24, Y+2	; 0x02
 1a8:	28 2f       	mov	r18, r24
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 2e       	mov	r0, r18
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <DIO_vidsetpindir+0xac>
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	0a 94       	dec	r0
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <DIO_vidsetpindir+0xa8>
 1bc:	84 2b       	or	r24, r20
 1be:	8c 93       	st	X, r24
 1c0:	8b c0       	rjmp	.+278    	; 0x2d8 <DIO_vidsetpindir+0x1cc>
		break;
	case 1:
		if (dir==0)
 1c2:	8b 81       	ldd	r24, Y+3	; 0x03
 1c4:	88 23       	and	r24, r24
 1c6:	a1 f4       	brne	.+40     	; 0x1f0 <DIO_vidsetpindir+0xe4>
			clear_bit (DDRB,pin);
 1c8:	a7 e3       	ldi	r26, 0x37	; 55
 1ca:	b0 e0       	ldi	r27, 0x00	; 0
 1cc:	e7 e3       	ldi	r30, 0x37	; 55
 1ce:	f0 e0       	ldi	r31, 0x00	; 0
 1d0:	80 81       	ld	r24, Z
 1d2:	48 2f       	mov	r20, r24
 1d4:	8a 81       	ldd	r24, Y+2	; 0x02
 1d6:	28 2f       	mov	r18, r24
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 2e       	mov	r0, r18
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_vidsetpindir+0xda>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	0a 94       	dec	r0
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_vidsetpindir+0xd6>
 1ea:	80 95       	com	r24
 1ec:	84 23       	and	r24, r20
 1ee:	8c 93       	st	X, r24
		if (dir==1)
 1f0:	8b 81       	ldd	r24, Y+3	; 0x03
 1f2:	81 30       	cpi	r24, 0x01	; 1
 1f4:	09 f0       	breq	.+2      	; 0x1f8 <DIO_vidsetpindir+0xec>
 1f6:	70 c0       	rjmp	.+224    	; 0x2d8 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRB,pin);
 1f8:	a7 e3       	ldi	r26, 0x37	; 55
 1fa:	b0 e0       	ldi	r27, 0x00	; 0
 1fc:	e7 e3       	ldi	r30, 0x37	; 55
 1fe:	f0 e0       	ldi	r31, 0x00	; 0
 200:	80 81       	ld	r24, Z
 202:	48 2f       	mov	r20, r24
 204:	8a 81       	ldd	r24, Y+2	; 0x02
 206:	28 2f       	mov	r18, r24
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	02 2e       	mov	r0, r18
 210:	02 c0       	rjmp	.+4      	; 0x216 <DIO_vidsetpindir+0x10a>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	0a 94       	dec	r0
 218:	e2 f7       	brpl	.-8      	; 0x212 <DIO_vidsetpindir+0x106>
 21a:	84 2b       	or	r24, r20
 21c:	8c 93       	st	X, r24
 21e:	5c c0       	rjmp	.+184    	; 0x2d8 <DIO_vidsetpindir+0x1cc>
		break;
	case 2:
		if (dir==0)
 220:	8b 81       	ldd	r24, Y+3	; 0x03
 222:	88 23       	and	r24, r24
 224:	a1 f4       	brne	.+40     	; 0x24e <DIO_vidsetpindir+0x142>
			clear_bit (DDRC,pin);
 226:	a4 e3       	ldi	r26, 0x34	; 52
 228:	b0 e0       	ldi	r27, 0x00	; 0
 22a:	e4 e3       	ldi	r30, 0x34	; 52
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	48 2f       	mov	r20, r24
 232:	8a 81       	ldd	r24, Y+2	; 0x02
 234:	28 2f       	mov	r18, r24
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 2e       	mov	r0, r18
 23e:	02 c0       	rjmp	.+4      	; 0x244 <DIO_vidsetpindir+0x138>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	0a 94       	dec	r0
 246:	e2 f7       	brpl	.-8      	; 0x240 <DIO_vidsetpindir+0x134>
 248:	80 95       	com	r24
 24a:	84 23       	and	r24, r20
 24c:	8c 93       	st	X, r24
		if (dir==1)
 24e:	8b 81       	ldd	r24, Y+3	; 0x03
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	09 f0       	breq	.+2      	; 0x256 <DIO_vidsetpindir+0x14a>
 254:	41 c0       	rjmp	.+130    	; 0x2d8 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRC,pin);
 256:	a4 e3       	ldi	r26, 0x34	; 52
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	e4 e3       	ldi	r30, 0x34	; 52
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	48 2f       	mov	r20, r24
 262:	8a 81       	ldd	r24, Y+2	; 0x02
 264:	28 2f       	mov	r18, r24
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 2e       	mov	r0, r18
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_vidsetpindir+0x168>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	0a 94       	dec	r0
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_vidsetpindir+0x164>
 278:	84 2b       	or	r24, r20
 27a:	8c 93       	st	X, r24
 27c:	2d c0       	rjmp	.+90     	; 0x2d8 <DIO_vidsetpindir+0x1cc>
		break;
	case 3:
		if (dir==0)
 27e:	8b 81       	ldd	r24, Y+3	; 0x03
 280:	88 23       	and	r24, r24
 282:	a1 f4       	brne	.+40     	; 0x2ac <DIO_vidsetpindir+0x1a0>
			clear_bit(DDRD,pin);
 284:	a1 e3       	ldi	r26, 0x31	; 49
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	e1 e3       	ldi	r30, 0x31	; 49
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	48 2f       	mov	r20, r24
 290:	8a 81       	ldd	r24, Y+2	; 0x02
 292:	28 2f       	mov	r18, r24
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	02 2e       	mov	r0, r18
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <DIO_vidsetpindir+0x196>
 29e:	88 0f       	add	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	0a 94       	dec	r0
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <DIO_vidsetpindir+0x192>
 2a6:	80 95       	com	r24
 2a8:	84 23       	and	r24, r20
 2aa:	8c 93       	st	X, r24
		if (dir==1)
 2ac:	8b 81       	ldd	r24, Y+3	; 0x03
 2ae:	81 30       	cpi	r24, 0x01	; 1
 2b0:	99 f4       	brne	.+38     	; 0x2d8 <DIO_vidsetpindir+0x1cc>
			set_bit (DDRD,pin);
 2b2:	a1 e3       	ldi	r26, 0x31	; 49
 2b4:	b0 e0       	ldi	r27, 0x00	; 0
 2b6:	e1 e3       	ldi	r30, 0x31	; 49
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	80 81       	ld	r24, Z
 2bc:	48 2f       	mov	r20, r24
 2be:	8a 81       	ldd	r24, Y+2	; 0x02
 2c0:	28 2f       	mov	r18, r24
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	02 2e       	mov	r0, r18
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <DIO_vidsetpindir+0x1c4>
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	0a 94       	dec	r0
 2d2:	e2 f7       	brpl	.-8      	; 0x2cc <DIO_vidsetpindir+0x1c0>
 2d4:	84 2b       	or	r24, r20
 2d6:	8c 93       	st	X, r24
		break;
	default :
		break;
	}
}
 2d8:	0f 90       	pop	r0
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	0f 90       	pop	r0
 2e0:	0f 90       	pop	r0
 2e2:	cf 91       	pop	r28
 2e4:	df 91       	pop	r29
 2e6:	08 95       	ret

000002e8 <DIO_vidwritepinvalue>:

extern void DIO_vidwritepinvalue (u8 port, u8 pin, u8 value)
{
 2e8:	df 93       	push	r29
 2ea:	cf 93       	push	r28
 2ec:	00 d0       	rcall	.+0      	; 0x2ee <DIO_vidwritepinvalue+0x6>
 2ee:	00 d0       	rcall	.+0      	; 0x2f0 <DIO_vidwritepinvalue+0x8>
 2f0:	0f 92       	push	r0
 2f2:	cd b7       	in	r28, 0x3d	; 61
 2f4:	de b7       	in	r29, 0x3e	; 62
 2f6:	89 83       	std	Y+1, r24	; 0x01
 2f8:	6a 83       	std	Y+2, r22	; 0x02
 2fa:	4b 83       	std	Y+3, r20	; 0x03
	switch (port)
 2fc:	89 81       	ldd	r24, Y+1	; 0x01
 2fe:	28 2f       	mov	r18, r24
 300:	30 e0       	ldi	r19, 0x00	; 0
 302:	3d 83       	std	Y+5, r19	; 0x05
 304:	2c 83       	std	Y+4, r18	; 0x04
 306:	8c 81       	ldd	r24, Y+4	; 0x04
 308:	9d 81       	ldd	r25, Y+5	; 0x05
 30a:	81 30       	cpi	r24, 0x01	; 1
 30c:	91 05       	cpc	r25, r1
 30e:	09 f4       	brne	.+2      	; 0x312 <DIO_vidwritepinvalue+0x2a>
 310:	46 c0       	rjmp	.+140    	; 0x39e <DIO_vidwritepinvalue+0xb6>
 312:	2c 81       	ldd	r18, Y+4	; 0x04
 314:	3d 81       	ldd	r19, Y+5	; 0x05
 316:	22 30       	cpi	r18, 0x02	; 2
 318:	31 05       	cpc	r19, r1
 31a:	2c f4       	brge	.+10     	; 0x326 <DIO_vidwritepinvalue+0x3e>
 31c:	8c 81       	ldd	r24, Y+4	; 0x04
 31e:	9d 81       	ldd	r25, Y+5	; 0x05
 320:	00 97       	sbiw	r24, 0x00	; 0
 322:	71 f0       	breq	.+28     	; 0x340 <DIO_vidwritepinvalue+0x58>
 324:	c7 c0       	rjmp	.+398    	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
 326:	2c 81       	ldd	r18, Y+4	; 0x04
 328:	3d 81       	ldd	r19, Y+5	; 0x05
 32a:	22 30       	cpi	r18, 0x02	; 2
 32c:	31 05       	cpc	r19, r1
 32e:	09 f4       	brne	.+2      	; 0x332 <DIO_vidwritepinvalue+0x4a>
 330:	65 c0       	rjmp	.+202    	; 0x3fc <DIO_vidwritepinvalue+0x114>
 332:	8c 81       	ldd	r24, Y+4	; 0x04
 334:	9d 81       	ldd	r25, Y+5	; 0x05
 336:	83 30       	cpi	r24, 0x03	; 3
 338:	91 05       	cpc	r25, r1
 33a:	09 f4       	brne	.+2      	; 0x33e <DIO_vidwritepinvalue+0x56>
 33c:	8e c0       	rjmp	.+284    	; 0x45a <DIO_vidwritepinvalue+0x172>
 33e:	ba c0       	rjmp	.+372    	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
		{
	case 0:
		if (value==0)
 340:	8b 81       	ldd	r24, Y+3	; 0x03
 342:	88 23       	and	r24, r24
 344:	a1 f4       	brne	.+40     	; 0x36e <DIO_vidwritepinvalue+0x86>
			clear_bit (PORTA,pin);
 346:	ab e3       	ldi	r26, 0x3B	; 59
 348:	b0 e0       	ldi	r27, 0x00	; 0
 34a:	eb e3       	ldi	r30, 0x3B	; 59
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	48 2f       	mov	r20, r24
 352:	8a 81       	ldd	r24, Y+2	; 0x02
 354:	28 2f       	mov	r18, r24
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	02 2e       	mov	r0, r18
 35e:	02 c0       	rjmp	.+4      	; 0x364 <DIO_vidwritepinvalue+0x7c>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	0a 94       	dec	r0
 366:	e2 f7       	brpl	.-8      	; 0x360 <DIO_vidwritepinvalue+0x78>
 368:	80 95       	com	r24
 36a:	84 23       	and	r24, r20
 36c:	8c 93       	st	X, r24
		if (value==1)
 36e:	8b 81       	ldd	r24, Y+3	; 0x03
 370:	81 30       	cpi	r24, 0x01	; 1
 372:	09 f0       	breq	.+2      	; 0x376 <DIO_vidwritepinvalue+0x8e>
 374:	9f c0       	rjmp	.+318    	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTA,pin);
 376:	ab e3       	ldi	r26, 0x3B	; 59
 378:	b0 e0       	ldi	r27, 0x00	; 0
 37a:	eb e3       	ldi	r30, 0x3B	; 59
 37c:	f0 e0       	ldi	r31, 0x00	; 0
 37e:	80 81       	ld	r24, Z
 380:	48 2f       	mov	r20, r24
 382:	8a 81       	ldd	r24, Y+2	; 0x02
 384:	28 2f       	mov	r18, r24
 386:	30 e0       	ldi	r19, 0x00	; 0
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	02 2e       	mov	r0, r18
 38e:	02 c0       	rjmp	.+4      	; 0x394 <DIO_vidwritepinvalue+0xac>
 390:	88 0f       	add	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	0a 94       	dec	r0
 396:	e2 f7       	brpl	.-8      	; 0x390 <DIO_vidwritepinvalue+0xa8>
 398:	84 2b       	or	r24, r20
 39a:	8c 93       	st	X, r24
 39c:	8b c0       	rjmp	.+278    	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
			break;
		case 1:
		if (value==0)
 39e:	8b 81       	ldd	r24, Y+3	; 0x03
 3a0:	88 23       	and	r24, r24
 3a2:	a1 f4       	brne	.+40     	; 0x3cc <DIO_vidwritepinvalue+0xe4>
			clear_bit (PORTB,pin);
 3a4:	a8 e3       	ldi	r26, 0x38	; 56
 3a6:	b0 e0       	ldi	r27, 0x00	; 0
 3a8:	e8 e3       	ldi	r30, 0x38	; 56
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	80 81       	ld	r24, Z
 3ae:	48 2f       	mov	r20, r24
 3b0:	8a 81       	ldd	r24, Y+2	; 0x02
 3b2:	28 2f       	mov	r18, r24
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	02 2e       	mov	r0, r18
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_vidwritepinvalue+0xda>
 3be:	88 0f       	add	r24, r24
 3c0:	99 1f       	adc	r25, r25
 3c2:	0a 94       	dec	r0
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_vidwritepinvalue+0xd6>
 3c6:	80 95       	com	r24
 3c8:	84 23       	and	r24, r20
 3ca:	8c 93       	st	X, r24
		if (value==1)
 3cc:	8b 81       	ldd	r24, Y+3	; 0x03
 3ce:	81 30       	cpi	r24, 0x01	; 1
 3d0:	09 f0       	breq	.+2      	; 0x3d4 <DIO_vidwritepinvalue+0xec>
 3d2:	70 c0       	rjmp	.+224    	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTB,pin);
 3d4:	a8 e3       	ldi	r26, 0x38	; 56
 3d6:	b0 e0       	ldi	r27, 0x00	; 0
 3d8:	e8 e3       	ldi	r30, 0x38	; 56
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	80 81       	ld	r24, Z
 3de:	48 2f       	mov	r20, r24
 3e0:	8a 81       	ldd	r24, Y+2	; 0x02
 3e2:	28 2f       	mov	r18, r24
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 2e       	mov	r0, r18
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_vidwritepinvalue+0x10a>
 3ee:	88 0f       	add	r24, r24
 3f0:	99 1f       	adc	r25, r25
 3f2:	0a 94       	dec	r0
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_vidwritepinvalue+0x106>
 3f6:	84 2b       	or	r24, r20
 3f8:	8c 93       	st	X, r24
 3fa:	5c c0       	rjmp	.+184    	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
		break;
	case 2:
		if (value==0)
 3fc:	8b 81       	ldd	r24, Y+3	; 0x03
 3fe:	88 23       	and	r24, r24
 400:	a1 f4       	brne	.+40     	; 0x42a <DIO_vidwritepinvalue+0x142>
			clear_bit (PORTC,pin);
 402:	a5 e3       	ldi	r26, 0x35	; 53
 404:	b0 e0       	ldi	r27, 0x00	; 0
 406:	e5 e3       	ldi	r30, 0x35	; 53
 408:	f0 e0       	ldi	r31, 0x00	; 0
 40a:	80 81       	ld	r24, Z
 40c:	48 2f       	mov	r20, r24
 40e:	8a 81       	ldd	r24, Y+2	; 0x02
 410:	28 2f       	mov	r18, r24
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	81 e0       	ldi	r24, 0x01	; 1
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	02 2e       	mov	r0, r18
 41a:	02 c0       	rjmp	.+4      	; 0x420 <DIO_vidwritepinvalue+0x138>
 41c:	88 0f       	add	r24, r24
 41e:	99 1f       	adc	r25, r25
 420:	0a 94       	dec	r0
 422:	e2 f7       	brpl	.-8      	; 0x41c <DIO_vidwritepinvalue+0x134>
 424:	80 95       	com	r24
 426:	84 23       	and	r24, r20
 428:	8c 93       	st	X, r24
		if (value==1)
 42a:	8b 81       	ldd	r24, Y+3	; 0x03
 42c:	81 30       	cpi	r24, 0x01	; 1
 42e:	09 f0       	breq	.+2      	; 0x432 <DIO_vidwritepinvalue+0x14a>
 430:	41 c0       	rjmp	.+130    	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
			set_bit (PORTC,pin);
 432:	a5 e3       	ldi	r26, 0x35	; 53
 434:	b0 e0       	ldi	r27, 0x00	; 0
 436:	e5 e3       	ldi	r30, 0x35	; 53
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	80 81       	ld	r24, Z
 43c:	48 2f       	mov	r20, r24
 43e:	8a 81       	ldd	r24, Y+2	; 0x02
 440:	28 2f       	mov	r18, r24
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	02 2e       	mov	r0, r18
 44a:	02 c0       	rjmp	.+4      	; 0x450 <DIO_vidwritepinvalue+0x168>
 44c:	88 0f       	add	r24, r24
 44e:	99 1f       	adc	r25, r25
 450:	0a 94       	dec	r0
 452:	e2 f7       	brpl	.-8      	; 0x44c <DIO_vidwritepinvalue+0x164>
 454:	84 2b       	or	r24, r20
 456:	8c 93       	st	X, r24
 458:	2d c0       	rjmp	.+90     	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
			break;
		case 3:
		if (value==0)
 45a:	8b 81       	ldd	r24, Y+3	; 0x03
 45c:	88 23       	and	r24, r24
 45e:	a1 f4       	brne	.+40     	; 0x488 <DIO_vidwritepinvalue+0x1a0>
			clear_bit(PORTD,pin);
 460:	a2 e3       	ldi	r26, 0x32	; 50
 462:	b0 e0       	ldi	r27, 0x00	; 0
 464:	e2 e3       	ldi	r30, 0x32	; 50
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	80 81       	ld	r24, Z
 46a:	48 2f       	mov	r20, r24
 46c:	8a 81       	ldd	r24, Y+2	; 0x02
 46e:	28 2f       	mov	r18, r24
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	81 e0       	ldi	r24, 0x01	; 1
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	02 2e       	mov	r0, r18
 478:	02 c0       	rjmp	.+4      	; 0x47e <DIO_vidwritepinvalue+0x196>
 47a:	88 0f       	add	r24, r24
 47c:	99 1f       	adc	r25, r25
 47e:	0a 94       	dec	r0
 480:	e2 f7       	brpl	.-8      	; 0x47a <DIO_vidwritepinvalue+0x192>
 482:	80 95       	com	r24
 484:	84 23       	and	r24, r20
 486:	8c 93       	st	X, r24
		if (value==1)
 488:	8b 81       	ldd	r24, Y+3	; 0x03
 48a:	81 30       	cpi	r24, 0x01	; 1
 48c:	99 f4       	brne	.+38     	; 0x4b4 <DIO_vidwritepinvalue+0x1cc>
				set_bit (PORTD,pin);
 48e:	a2 e3       	ldi	r26, 0x32	; 50
 490:	b0 e0       	ldi	r27, 0x00	; 0
 492:	e2 e3       	ldi	r30, 0x32	; 50
 494:	f0 e0       	ldi	r31, 0x00	; 0
 496:	80 81       	ld	r24, Z
 498:	48 2f       	mov	r20, r24
 49a:	8a 81       	ldd	r24, Y+2	; 0x02
 49c:	28 2f       	mov	r18, r24
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	02 2e       	mov	r0, r18
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <DIO_vidwritepinvalue+0x1c4>
 4a8:	88 0f       	add	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	0a 94       	dec	r0
 4ae:	e2 f7       	brpl	.-8      	; 0x4a8 <DIO_vidwritepinvalue+0x1c0>
 4b0:	84 2b       	or	r24, r20
 4b2:	8c 93       	st	X, r24
			break;
		default :
			break;
		}
}
 4b4:	0f 90       	pop	r0
 4b6:	0f 90       	pop	r0
 4b8:	0f 90       	pop	r0
 4ba:	0f 90       	pop	r0
 4bc:	0f 90       	pop	r0
 4be:	cf 91       	pop	r28
 4c0:	df 91       	pop	r29
 4c2:	08 95       	ret

000004c4 <DIO_u8readpinvalue>:

extern u8 DIO_u8readpinvalue (u8 port, u8 pin)
{
 4c4:	df 93       	push	r29
 4c6:	cf 93       	push	r28
 4c8:	00 d0       	rcall	.+0      	; 0x4ca <DIO_u8readpinvalue+0x6>
 4ca:	00 d0       	rcall	.+0      	; 0x4cc <DIO_u8readpinvalue+0x8>
 4cc:	0f 92       	push	r0
 4ce:	cd b7       	in	r28, 0x3d	; 61
 4d0:	de b7       	in	r29, 0x3e	; 62
 4d2:	89 83       	std	Y+1, r24	; 0x01
 4d4:	6a 83       	std	Y+2, r22	; 0x02
	switch (port)
 4d6:	89 81       	ldd	r24, Y+1	; 0x01
 4d8:	28 2f       	mov	r18, r24
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	3d 83       	std	Y+5, r19	; 0x05
 4de:	2c 83       	std	Y+4, r18	; 0x04
 4e0:	4c 81       	ldd	r20, Y+4	; 0x04
 4e2:	5d 81       	ldd	r21, Y+5	; 0x05
 4e4:	41 30       	cpi	r20, 0x01	; 1
 4e6:	51 05       	cpc	r21, r1
 4e8:	b1 f1       	breq	.+108    	; 0x556 <DIO_u8readpinvalue+0x92>
 4ea:	8c 81       	ldd	r24, Y+4	; 0x04
 4ec:	9d 81       	ldd	r25, Y+5	; 0x05
 4ee:	82 30       	cpi	r24, 0x02	; 2
 4f0:	91 05       	cpc	r25, r1
 4f2:	34 f4       	brge	.+12     	; 0x500 <DIO_u8readpinvalue+0x3c>
 4f4:	2c 81       	ldd	r18, Y+4	; 0x04
 4f6:	3d 81       	ldd	r19, Y+5	; 0x05
 4f8:	21 15       	cp	r18, r1
 4fa:	31 05       	cpc	r19, r1
 4fc:	71 f0       	breq	.+28     	; 0x51a <DIO_u8readpinvalue+0x56>
 4fe:	85 c0       	rjmp	.+266    	; 0x60a <DIO_u8readpinvalue+0x146>
 500:	4c 81       	ldd	r20, Y+4	; 0x04
 502:	5d 81       	ldd	r21, Y+5	; 0x05
 504:	42 30       	cpi	r20, 0x02	; 2
 506:	51 05       	cpc	r21, r1
 508:	09 f4       	brne	.+2      	; 0x50c <DIO_u8readpinvalue+0x48>
 50a:	43 c0       	rjmp	.+134    	; 0x592 <DIO_u8readpinvalue+0xce>
 50c:	8c 81       	ldd	r24, Y+4	; 0x04
 50e:	9d 81       	ldd	r25, Y+5	; 0x05
 510:	83 30       	cpi	r24, 0x03	; 3
 512:	91 05       	cpc	r25, r1
 514:	09 f4       	brne	.+2      	; 0x518 <DIO_u8readpinvalue+0x54>
 516:	5b c0       	rjmp	.+182    	; 0x5ce <DIO_u8readpinvalue+0x10a>
 518:	78 c0       	rjmp	.+240    	; 0x60a <DIO_u8readpinvalue+0x146>
	{
	case 0 :
		return get_bit (PINA,pin);
 51a:	e9 e3       	ldi	r30, 0x39	; 57
 51c:	f0 e0       	ldi	r31, 0x00	; 0
 51e:	80 81       	ld	r24, Z
 520:	48 2f       	mov	r20, r24
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	28 2f       	mov	r18, r24
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	02 c0       	rjmp	.+4      	; 0x534 <DIO_u8readpinvalue+0x70>
 530:	88 0f       	add	r24, r24
 532:	99 1f       	adc	r25, r25
 534:	2a 95       	dec	r18
 536:	e2 f7       	brpl	.-8      	; 0x530 <DIO_u8readpinvalue+0x6c>
 538:	9a 01       	movw	r18, r20
 53a:	28 23       	and	r18, r24
 53c:	39 23       	and	r19, r25
 53e:	8a 81       	ldd	r24, Y+2	; 0x02
 540:	88 2f       	mov	r24, r24
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	a9 01       	movw	r20, r18
 546:	02 c0       	rjmp	.+4      	; 0x54c <DIO_u8readpinvalue+0x88>
 548:	55 95       	asr	r21
 54a:	47 95       	ror	r20
 54c:	8a 95       	dec	r24
 54e:	e2 f7       	brpl	.-8      	; 0x548 <DIO_u8readpinvalue+0x84>
 550:	ca 01       	movw	r24, r20
 552:	8b 83       	std	Y+3, r24	; 0x03
 554:	5c c0       	rjmp	.+184    	; 0x60e <DIO_u8readpinvalue+0x14a>
		break;
	case 1 :
		return get_bit (PINB,pin);
 556:	e6 e3       	ldi	r30, 0x36	; 54
 558:	f0 e0       	ldi	r31, 0x00	; 0
 55a:	80 81       	ld	r24, Z
 55c:	48 2f       	mov	r20, r24
 55e:	50 e0       	ldi	r21, 0x00	; 0
 560:	8a 81       	ldd	r24, Y+2	; 0x02
 562:	28 2f       	mov	r18, r24
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	81 e0       	ldi	r24, 0x01	; 1
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	02 c0       	rjmp	.+4      	; 0x570 <DIO_u8readpinvalue+0xac>
 56c:	88 0f       	add	r24, r24
 56e:	99 1f       	adc	r25, r25
 570:	2a 95       	dec	r18
 572:	e2 f7       	brpl	.-8      	; 0x56c <DIO_u8readpinvalue+0xa8>
 574:	9a 01       	movw	r18, r20
 576:	28 23       	and	r18, r24
 578:	39 23       	and	r19, r25
 57a:	8a 81       	ldd	r24, Y+2	; 0x02
 57c:	88 2f       	mov	r24, r24
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	a9 01       	movw	r20, r18
 582:	02 c0       	rjmp	.+4      	; 0x588 <DIO_u8readpinvalue+0xc4>
 584:	55 95       	asr	r21
 586:	47 95       	ror	r20
 588:	8a 95       	dec	r24
 58a:	e2 f7       	brpl	.-8      	; 0x584 <DIO_u8readpinvalue+0xc0>
 58c:	ca 01       	movw	r24, r20
 58e:	8b 83       	std	Y+3, r24	; 0x03
 590:	3e c0       	rjmp	.+124    	; 0x60e <DIO_u8readpinvalue+0x14a>
		break;
	case 2 :
		return get_bit (PINC,pin);
 592:	e3 e3       	ldi	r30, 0x33	; 51
 594:	f0 e0       	ldi	r31, 0x00	; 0
 596:	80 81       	ld	r24, Z
 598:	48 2f       	mov	r20, r24
 59a:	50 e0       	ldi	r21, 0x00	; 0
 59c:	8a 81       	ldd	r24, Y+2	; 0x02
 59e:	28 2f       	mov	r18, r24
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	81 e0       	ldi	r24, 0x01	; 1
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	02 c0       	rjmp	.+4      	; 0x5ac <DIO_u8readpinvalue+0xe8>
 5a8:	88 0f       	add	r24, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	2a 95       	dec	r18
 5ae:	e2 f7       	brpl	.-8      	; 0x5a8 <DIO_u8readpinvalue+0xe4>
 5b0:	9a 01       	movw	r18, r20
 5b2:	28 23       	and	r18, r24
 5b4:	39 23       	and	r19, r25
 5b6:	8a 81       	ldd	r24, Y+2	; 0x02
 5b8:	88 2f       	mov	r24, r24
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	a9 01       	movw	r20, r18
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <DIO_u8readpinvalue+0x100>
 5c0:	55 95       	asr	r21
 5c2:	47 95       	ror	r20
 5c4:	8a 95       	dec	r24
 5c6:	e2 f7       	brpl	.-8      	; 0x5c0 <DIO_u8readpinvalue+0xfc>
 5c8:	ca 01       	movw	r24, r20
 5ca:	8b 83       	std	Y+3, r24	; 0x03
 5cc:	20 c0       	rjmp	.+64     	; 0x60e <DIO_u8readpinvalue+0x14a>
		break;
	case 3 :
		return  get_bit (PIND,pin);
 5ce:	e0 e3       	ldi	r30, 0x30	; 48
 5d0:	f0 e0       	ldi	r31, 0x00	; 0
 5d2:	80 81       	ld	r24, Z
 5d4:	48 2f       	mov	r20, r24
 5d6:	50 e0       	ldi	r21, 0x00	; 0
 5d8:	8a 81       	ldd	r24, Y+2	; 0x02
 5da:	28 2f       	mov	r18, r24
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <DIO_u8readpinvalue+0x124>
 5e4:	88 0f       	add	r24, r24
 5e6:	99 1f       	adc	r25, r25
 5e8:	2a 95       	dec	r18
 5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <DIO_u8readpinvalue+0x120>
 5ec:	9a 01       	movw	r18, r20
 5ee:	28 23       	and	r18, r24
 5f0:	39 23       	and	r19, r25
 5f2:	8a 81       	ldd	r24, Y+2	; 0x02
 5f4:	88 2f       	mov	r24, r24
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	a9 01       	movw	r20, r18
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <DIO_u8readpinvalue+0x13c>
 5fc:	55 95       	asr	r21
 5fe:	47 95       	ror	r20
 600:	8a 95       	dec	r24
 602:	e2 f7       	brpl	.-8      	; 0x5fc <DIO_u8readpinvalue+0x138>
 604:	ca 01       	movw	r24, r20
 606:	8b 83       	std	Y+3, r24	; 0x03
 608:	02 c0       	rjmp	.+4      	; 0x60e <DIO_u8readpinvalue+0x14a>
	break;
	default :
		return 2;
 60a:	52 e0       	ldi	r21, 0x02	; 2
 60c:	5b 83       	std	Y+3, r21	; 0x03
 60e:	8b 81       	ldd	r24, Y+3	; 0x03
	}
}
 610:	0f 90       	pop	r0
 612:	0f 90       	pop	r0
 614:	0f 90       	pop	r0
 616:	0f 90       	pop	r0
 618:	0f 90       	pop	r0
 61a:	cf 91       	pop	r28
 61c:	df 91       	pop	r29
 61e:	08 95       	ret

00000620 <DIO_vidsetportdir>:
	extern void DIO_vidsetportdir(u8 port,  u8 dir)
	{
 620:	df 93       	push	r29
 622:	cf 93       	push	r28
 624:	00 d0       	rcall	.+0      	; 0x626 <DIO_vidsetportdir+0x6>
 626:	00 d0       	rcall	.+0      	; 0x628 <DIO_vidsetportdir+0x8>
 628:	cd b7       	in	r28, 0x3d	; 61
 62a:	de b7       	in	r29, 0x3e	; 62
 62c:	89 83       	std	Y+1, r24	; 0x01
 62e:	6a 83       	std	Y+2, r22	; 0x02
		switch (port)
 630:	89 81       	ldd	r24, Y+1	; 0x01
 632:	28 2f       	mov	r18, r24
 634:	30 e0       	ldi	r19, 0x00	; 0
 636:	3c 83       	std	Y+4, r19	; 0x04
 638:	2b 83       	std	Y+3, r18	; 0x03
 63a:	8b 81       	ldd	r24, Y+3	; 0x03
 63c:	9c 81       	ldd	r25, Y+4	; 0x04
 63e:	81 30       	cpi	r24, 0x01	; 1
 640:	91 05       	cpc	r25, r1
 642:	d1 f0       	breq	.+52     	; 0x678 <DIO_vidsetportdir+0x58>
 644:	2b 81       	ldd	r18, Y+3	; 0x03
 646:	3c 81       	ldd	r19, Y+4	; 0x04
 648:	22 30       	cpi	r18, 0x02	; 2
 64a:	31 05       	cpc	r19, r1
 64c:	2c f4       	brge	.+10     	; 0x658 <DIO_vidsetportdir+0x38>
 64e:	8b 81       	ldd	r24, Y+3	; 0x03
 650:	9c 81       	ldd	r25, Y+4	; 0x04
 652:	00 97       	sbiw	r24, 0x00	; 0
 654:	61 f0       	breq	.+24     	; 0x66e <DIO_vidsetportdir+0x4e>
 656:	1e c0       	rjmp	.+60     	; 0x694 <DIO_vidsetportdir+0x74>
 658:	2b 81       	ldd	r18, Y+3	; 0x03
 65a:	3c 81       	ldd	r19, Y+4	; 0x04
 65c:	22 30       	cpi	r18, 0x02	; 2
 65e:	31 05       	cpc	r19, r1
 660:	81 f0       	breq	.+32     	; 0x682 <DIO_vidsetportdir+0x62>
 662:	8b 81       	ldd	r24, Y+3	; 0x03
 664:	9c 81       	ldd	r25, Y+4	; 0x04
 666:	83 30       	cpi	r24, 0x03	; 3
 668:	91 05       	cpc	r25, r1
 66a:	81 f0       	breq	.+32     	; 0x68c <DIO_vidsetportdir+0x6c>
 66c:	13 c0       	rjmp	.+38     	; 0x694 <DIO_vidsetportdir+0x74>
		{
		case 0:
			DDRA=dir;
 66e:	ea e3       	ldi	r30, 0x3A	; 58
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	8a 81       	ldd	r24, Y+2	; 0x02
 674:	80 83       	st	Z, r24
 676:	0e c0       	rjmp	.+28     	; 0x694 <DIO_vidsetportdir+0x74>
			break;
		case 1:
			DDRB=dir;
 678:	e7 e3       	ldi	r30, 0x37	; 55
 67a:	f0 e0       	ldi	r31, 0x00	; 0
 67c:	8a 81       	ldd	r24, Y+2	; 0x02
 67e:	80 83       	st	Z, r24
 680:	09 c0       	rjmp	.+18     	; 0x694 <DIO_vidsetportdir+0x74>
			break;
		case 2:
			DDRC=dir;
 682:	e4 e3       	ldi	r30, 0x34	; 52
 684:	f0 e0       	ldi	r31, 0x00	; 0
 686:	8a 81       	ldd	r24, Y+2	; 0x02
 688:	80 83       	st	Z, r24
 68a:	04 c0       	rjmp	.+8      	; 0x694 <DIO_vidsetportdir+0x74>
			break;
		case 3:
			DDRD=dir;
 68c:	e1 e3       	ldi	r30, 0x31	; 49
 68e:	f0 e0       	ldi	r31, 0x00	; 0
 690:	8a 81       	ldd	r24, Y+2	; 0x02
 692:	80 83       	st	Z, r24
			break;
		}
	}
 694:	0f 90       	pop	r0
 696:	0f 90       	pop	r0
 698:	0f 90       	pop	r0
 69a:	0f 90       	pop	r0
 69c:	cf 91       	pop	r28
 69e:	df 91       	pop	r29
 6a0:	08 95       	ret

000006a2 <DIO_vidwriteportvalues>:
	extern void DIO_vidwriteportvalues(u8 port, u8 value)
	{
 6a2:	df 93       	push	r29
 6a4:	cf 93       	push	r28
 6a6:	00 d0       	rcall	.+0      	; 0x6a8 <DIO_vidwriteportvalues+0x6>
 6a8:	00 d0       	rcall	.+0      	; 0x6aa <DIO_vidwriteportvalues+0x8>
 6aa:	cd b7       	in	r28, 0x3d	; 61
 6ac:	de b7       	in	r29, 0x3e	; 62
 6ae:	89 83       	std	Y+1, r24	; 0x01
 6b0:	6a 83       	std	Y+2, r22	; 0x02
		switch (port)
 6b2:	89 81       	ldd	r24, Y+1	; 0x01
 6b4:	28 2f       	mov	r18, r24
 6b6:	30 e0       	ldi	r19, 0x00	; 0
 6b8:	3c 83       	std	Y+4, r19	; 0x04
 6ba:	2b 83       	std	Y+3, r18	; 0x03
 6bc:	8b 81       	ldd	r24, Y+3	; 0x03
 6be:	9c 81       	ldd	r25, Y+4	; 0x04
 6c0:	81 30       	cpi	r24, 0x01	; 1
 6c2:	91 05       	cpc	r25, r1
 6c4:	d1 f0       	breq	.+52     	; 0x6fa <DIO_vidwriteportvalues+0x58>
 6c6:	2b 81       	ldd	r18, Y+3	; 0x03
 6c8:	3c 81       	ldd	r19, Y+4	; 0x04
 6ca:	22 30       	cpi	r18, 0x02	; 2
 6cc:	31 05       	cpc	r19, r1
 6ce:	2c f4       	brge	.+10     	; 0x6da <DIO_vidwriteportvalues+0x38>
 6d0:	8b 81       	ldd	r24, Y+3	; 0x03
 6d2:	9c 81       	ldd	r25, Y+4	; 0x04
 6d4:	00 97       	sbiw	r24, 0x00	; 0
 6d6:	61 f0       	breq	.+24     	; 0x6f0 <DIO_vidwriteportvalues+0x4e>
 6d8:	1e c0       	rjmp	.+60     	; 0x716 <DIO_vidwriteportvalues+0x74>
 6da:	2b 81       	ldd	r18, Y+3	; 0x03
 6dc:	3c 81       	ldd	r19, Y+4	; 0x04
 6de:	22 30       	cpi	r18, 0x02	; 2
 6e0:	31 05       	cpc	r19, r1
 6e2:	81 f0       	breq	.+32     	; 0x704 <DIO_vidwriteportvalues+0x62>
 6e4:	8b 81       	ldd	r24, Y+3	; 0x03
 6e6:	9c 81       	ldd	r25, Y+4	; 0x04
 6e8:	83 30       	cpi	r24, 0x03	; 3
 6ea:	91 05       	cpc	r25, r1
 6ec:	81 f0       	breq	.+32     	; 0x70e <DIO_vidwriteportvalues+0x6c>
 6ee:	13 c0       	rjmp	.+38     	; 0x716 <DIO_vidwriteportvalues+0x74>
		{
		case 0:
			PORTA=value;
 6f0:	eb e3       	ldi	r30, 0x3B	; 59
 6f2:	f0 e0       	ldi	r31, 0x00	; 0
 6f4:	8a 81       	ldd	r24, Y+2	; 0x02
 6f6:	80 83       	st	Z, r24
 6f8:	0e c0       	rjmp	.+28     	; 0x716 <DIO_vidwriteportvalues+0x74>
			break;
		case 1:
			PORTB=value;
 6fa:	e8 e3       	ldi	r30, 0x38	; 56
 6fc:	f0 e0       	ldi	r31, 0x00	; 0
 6fe:	8a 81       	ldd	r24, Y+2	; 0x02
 700:	80 83       	st	Z, r24
 702:	09 c0       	rjmp	.+18     	; 0x716 <DIO_vidwriteportvalues+0x74>
			break;
		case 2:
			PORTC=value;
 704:	e5 e3       	ldi	r30, 0x35	; 53
 706:	f0 e0       	ldi	r31, 0x00	; 0
 708:	8a 81       	ldd	r24, Y+2	; 0x02
 70a:	80 83       	st	Z, r24
 70c:	04 c0       	rjmp	.+8      	; 0x716 <DIO_vidwriteportvalues+0x74>
			break;

		case 3:
			PORTD=value;
 70e:	e2 e3       	ldi	r30, 0x32	; 50
 710:	f0 e0       	ldi	r31, 0x00	; 0
 712:	8a 81       	ldd	r24, Y+2	; 0x02
 714:	80 83       	st	Z, r24
			break;

		}
	}
 716:	0f 90       	pop	r0
 718:	0f 90       	pop	r0
 71a:	0f 90       	pop	r0
 71c:	0f 90       	pop	r0
 71e:	cf 91       	pop	r28
 720:	df 91       	pop	r29
 722:	08 95       	ret

00000724 <main>:
#include"utils.h"
#include"DIO.h"


	void main (void)
	{
 724:	df 93       	push	r29
 726:	cf 93       	push	r28
 728:	cd b7       	in	r28, 0x3d	; 61
 72a:	de b7       	in	r29, 0x3e	; 62
		DIO_vidsetpindir (a,pin0,output);
 72c:	80 e0       	ldi	r24, 0x00	; 0
 72e:	60 e0       	ldi	r22, 0x00	; 0
 730:	41 e0       	ldi	r20, 0x01	; 1
 732:	0e 94 86 00 	call	0x10c	; 0x10c <DIO_vidsetpindir>
		DIO_vidwritepinvalue (d,pin2,high);
 736:	83 e0       	ldi	r24, 0x03	; 3
 738:	62 e0       	ldi	r22, 0x02	; 2
 73a:	41 e0       	ldi	r20, 0x01	; 1
 73c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <DIO_vidwritepinvalue>
		DEI_vidInit();
 740:	0e 94 36 00 	call	0x6c	; 0x6c <DEI_vidInit>
 744:	ff cf       	rjmp	.-2      	; 0x744 <main+0x20>

00000746 <_exit>:
 746:	f8 94       	cli

00000748 <__stop_program>:
 748:	ff cf       	rjmp	.-2      	; 0x748 <__stop_program>
